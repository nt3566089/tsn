/*
* このソースは基盤ソースです。変更は行わないで下さい。
*/


angular.module("oneslogiWeb.AutoPrintBulkPrinterChangeEdit",[]).constant("FORM_NM_AUTO_PRINT_BULK_PRINTER_CHANGE_EDIT","autoprintbulkprinterchangeeditform").factory("AutoPrintBulkPrinterChangeEditApi",["AngularAPIClient",function(AngularAPIClient){return{dropdownList:AngularAPIClient.make([["getPrinterList","GET","resources/common/printer/selectByPrinterGroupId"],["getPrinterAttributeList","GET","resources/common/printerAttribute/selectByPrinterId"]]),autoPrintBulkPrinterChangeEdit:AngularAPIClient.make([["initUpdate","GET","resources/base/master/autoPrintBulkPrinterChangeEdit/initUpdate"],["inputCheck","POST","resources/base/master/autoPrintBulkPrinterChangeEdit/inputCheck"],["update","POST","resources/base/master/autoPrintBulkPrinterChangeEdit/update"]])}}]).controller("AutoPrintBulkPrinterChangeEdit",["$scope","$route","$filter","$location","$q","$window","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","AutoPrintBulkPrinterChangeEditApi","FORM_NM_AUTO_PRINT_BULK_PRINTER_CHANGE_EDIT",function($scope,$route,$filter,$location,$q,$window,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,api,FORM_NM){$scope.initScreen=function(){var deferred=$q.defer(),request={};request.printerGroupId=$route.current.params.printerGroupId,request.printerId=$route.current.params.printerId,request.printerAttributeId=$route.current.params.printerAttributeId,api.autoPrintBulkPrinterChangeEdit.initUpdate(request).then(function(initUpdateResponse){if(!statusInfo.isSuccessAndShowMessage(initUpdateResponse,FORM_NM))return void deferred.reject();if($scope.before={},$scope.before=initUpdateResponse.data.before,$scope.after={},$scope.after=initUpdateResponse.data.after,null!=$scope.after.printerGroupId){var request={};request.printerGroupId=$scope.after.printerGroupId,api.dropdownList.getPrinterList(request).then(function(getPrinterListResponse){if(!statusInfo.isSuccessAndShowMessage(getPrinterListResponse,FORM_NM))return void deferred.reject();if($scope.printerList=getPrinterListResponse.data,null!=$scope.after.printerId){var request={};request.printerId=$scope.after.printerId,api.dropdownList.getPrinterAttributeList(request).then(function(getPrinterAttributeListResponse){return statusInfo.isSuccessAndShowMessage(getPrinterAttributeListResponse,FORM_NM)?void($scope.printerAttributeList=getPrinterAttributeListResponse.data):void deferred.reject()})}})}owsCommon.setFirstFocus(),deferred.resolve()})},$scope.changePrinter=function(){if(null!=$scope.after.printerId&&""!=$scope.after.printerId){var request={};request.printerId=$scope.after.printerId,api.dropdownList.getPrinterAttributeList(request).then(function(getPrinterAttributeListResponse){statusInfo.isSuccessAndShowMessage(getPrinterAttributeListResponse,FORM_NM)&&($scope.printerAttributeList=getPrinterAttributeListResponse.data)})}else $scope.after.printerAttributeId=null},$scope.update=function(isError){optionMessageControl.hideAll($scope);var request={};request.data={},request.data.before={},request.data.after={},request.data.before=$scope.before,request.data.after=$scope.after,api.autoPrintBulkPrinterChangeEdit.inputCheck(request).then(function(inputCheckResponse){statusInfo.isSuccessAndShowMessage(inputCheckResponse,FORM_NM)&&api.autoPrintBulkPrinterChangeEdit.update(request).then(function(updateResponse){statusInfo.isSuccessAndShowMessage(updateResponse,FORM_NM)&&owsCommon.viewInfoAndHistoryBack(updateResponse.status.messageCode,updateResponse.status.messageReplaceValue)})})},$scope.initScreen()}]),angular.module("oneslogiWeb.AutoPrintBulkPrinterChangeList",[]).constant("FORM_NM_AUTO_PRINT_BULK_PRINTER_CHANGE_LIST","autoprintbulkprinterchangelistform").factory("AutoPrintBulkPrinterChangeListApi",["AngularAPIClient",function(AngularAPIClient){return{dropdownList:AngularAPIClient.make([["printerGroup","GET","resources/common/printerGroup/selectByVariableAttributes"],["printer","GET","resources/common/printer/selectByPrinterGroupId"]]),autoPrintBulkPrinterChangeList:AngularAPIClient.make([["init","GET","resources/base/master/autoPrintBulkPrinterChangeList/init"],["search","POST","resources/base/master/autoPrintBulkPrinterChangeList/search"],["update","GET","resources/base/master/autoPrintBulkPrinterChangeList/update"]])}}]).controller("AutoPrintBulkPrinterChangeList",["$scope","$route","$filter","$location","$q","$window","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","AutoPrintBulkPrinterChangeListApi","FORM_NM_AUTO_PRINT_BULK_PRINTER_CHANGE_LIST",function($scope,$route,$filter,$location,$q,$window,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,api,FORM_NM){$scope.autoPrintBulkPrinterChangeListGridCols=[{field:"printerGroupNm",displayName:"プリンタグループ"},{field:"printerNm",displayName:"プリンタ"},{field:"trayNm",displayName:"トレイ"}],$scope.initScreen=function(){$scope.isopen=!0,$scope.gridOptions=owsCommon.mergeSingleSelectGridOptions({data:"autoPrintBulkPrinterChangeList",columnDefs:"autoPrintBulkPrinterChangeListGridCols"}),$scope.initScreenHttp()},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetPrinterGroup()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetPrinterGroup=function(){var deferred=$q.defer(),request={};return api.dropdownList.printerGroup(request).then(function(response){$scope.printerGroupList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer();return api.autoPrintBulkPrinterChangeList.init().then(function(response){return statusInfo.isSuccessAndShowMessage(response,FORM_NM)?($scope.head=response.head,$scope.autoPrintBulkPrinterChangeList=response.body,$scope.BLANK_ID_VALUE=response.BLANK_ID_VALUE,owsHistory.hasState()&&($scope.head=owsHistory.popState(),$scope.search(),$scope.changePrinterGroup()),owsCommon.setFirstFocus(),void deferred.resolve()):void deferred.reject()}),deferred.promise},$scope.gridDblClick=function(row){owsCommon.syncButtonExec("update",row)},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.search=function(){$scope.getSearchData()},$scope.getSearchData=function(){var request={};request.head={},request.head=$scope.head,request.body=[],api.autoPrintBulkPrinterChangeList.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,FORM_NM),$scope.setSearchData(response)})},$scope.setSearchData=function(response){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.autoPrintBulkPrinterChangeList=response.body,owsHistory.replaceState($scope.head)},$scope.update=function(){var printerGroupId=$scope.BLANK_ID_VALUE,printerId=$scope.BLANK_ID_VALUE,printerAttributeId=$scope.BLANK_ID_VALUE;null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].printerGroupId&&(printerGroupId=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].printerGroupId),null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].printerId&&(printerId=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].printerId),null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].printerAttributeId&&(printerAttributeId=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].printerAttributeId),$location.path("base/master/AutoPrintBulkPrinterChangeEdit").search({}).search("printerGroupId",printerGroupId).search("printerId",printerId).search("printerAttributeId",printerAttributeId)},$scope.changePrinterGroup=function(){if(null!=$scope.head.printerGroupId&&""!=$scope.head.printerGroupId){var request={};request.printerGroupId=$scope.head.printerGroupId,api.dropdownList.printer(request).then(function(getPrinterListResponse){statusInfo.isSuccessAndShowMessage(getPrinterListResponse,FORM_NM)&&($scope.printerList=getPrinterListResponse.data)})}else $scope.head.printerId=null,$scope.printerList=null},$scope.initScreen()}]),angular.module("oneslogiWeb.ClassEdit",[]).factory("classEditApi",["AngularAPIClient",function(AngularAPIClient){return{dropdownList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),classEdit:AngularAPIClient.make([["initNew","GET","resources/master/classEdit/initNew"],["initUpdate","GET","resources/master/classEdit/initUpdate"],["inputCheck","POST","resources/master/classEdit/inputCheck"],["register","POST","resources/master/classEdit/register"],["update","POST","resources/master/classEdit/update"]])}}]).controller("ClassEdit",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","classEditApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.classEditCols=[{field:"classDtlCd",displayName:"区分値明細CD"},{field:"vdict.dictNm",displayName:"区分値明細名"},{field:"viewOrder",displayName:"表示順"},{field:"defaultFlg",displayName:"デフォルト"},{field:"delFlg",displayName:"削除"}];var bodyList;$scope.initScreen=function(){$scope.screenMode=$route.current.params.mode,$scope.gridOptions=owsCommon.mergeEntryGridOptions({data:"classEdit",columnDefs:"classEditCols"}),$scope.gridSelectOptions={delFlg:{key:"classCd",value:"classNm",listModel:"delFlgList"}},$scope.gridEventOptions={classDtlCd:{"ng-change":{eventFunction:"classDtlCdChange(row.rowIndex)"}},"vdict.dictNm":{"ng-change":{eventFunction:"dictNmChange(row.rowIndex)"}},viewOrder:{"ng-change":{eventFunction:"viewOrderChange(row.rowIndex)"}},defaultFlg:{"ng-click":{eventFunction:"defaultFlgChange(row.rowIndex)"}},delFlg:{"ng-change":{eventFunction:"delFlgChange(row.rowIndex)"}}},statusInfo.mappingGridErrorMessage($scope.gridOptions,"vdict.dictNm",7,2),$scope.initScreenHttp()},$scope.classDtlCdChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.dictNmChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.viewOrderChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.defaultFlgChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex);for(var i=0;i<$scope.classEdit.length;i++)i!=rowIndex&&($scope.classEdit[i].defaultFlg="0")},$scope.delFlgChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetDelFlg(),$scope.deferredSystemTypeList()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredSystemTypeList=function(){var deferred=$q.defer(),request={};return request.classCd="SYSTEM_TYPE",api.dropdownList.query(request).then(function(response){$scope.systemTypeList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetDelFlg=function(){var deferred=$q.defer(),request={};return request.classCd="PHYSICAL_DELETE",api.dropdownList.query(request).then(function(response){$scope.delFlgList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer();if($scope.screenMode==SCREEN_MODE.Update){var request={};request.classId=$route.current.params.classId,api.classEdit.initUpdate(request).then(function(response){if(!statusInfo.isSuccessAndShowMessage(response,"inputform"))return history.back(),void deferred.reject();updateRowNumber($scope.classEdit),$scope.head=response.data.head,$scope.classEdit=response.data.body,bodyList=response.data.body,$scope.blankRow=response.data.blankRow,directiveControl.editable($scope,"classCd",!1);for(var row=0;row<$scope.classEdit.length;row++)null!=$scope.classEdit[row].classDtlCd&&gridDirectiveControl.editable($scope.gridOptions,"classDtlCd",!1,row);owsCommon.setFirstFocus("inputform"),deferred.resolve()})}else api.classEdit.initNew().then(function(response){return statusInfo.isSuccessAndShowMessage(response,"inputform")?($scope.head=response.data.head,$scope.classEdit=response.data.body,bodyList=response.data.body,$scope.blankRow=response.data.blankRow,directiveControl.editable($scope,"delFlg",!1),$scope.head.delFlg="0",owsCommon.setFirstFocus(),void deferred.resolve()):void deferred.reject()});return deferred.promise},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.addRow=function(){$scope.blankRow.delFlg=owsCommon.getDefaultValue($scope.delFlgList),$scope.screenMode==SCREEN_MODE.Update?($scope.classEdit.push(angular.copy($scope.blankRow)),updateRowNumber($scope.classEdit)):($scope.classEdit.push(angular.copy($scope.blankRow)),updateRowNumber($scope.classEdit)),gridDirectiveControl.editable($scope.gridOptions,"delFlg",!1,$scope.classEdit.length-1)},$scope.removeRow=function(){if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("deleteRowErrNotSelect");if(!($scope.gridOptions.gridApi.selection.getSelectedRows().length>1)||owsCommon.viewConfirm("deleteRowMultipleConfirmation")){var i=0;if(angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){if($scope.classEdit.indexOf(row)>-1&&null!=row.classDtlId)return void(i+=1)}),i>0)return void alertMessage.setErrorMessageByCode("alreadyRegisteredCannotDeleteError");var flg=!1;1==$scope.gridOptions.gridApi.selection.getSelectedRows().length&&((""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].classDtlCd&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].classDtlCd||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].viewOrder&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].viewOrder||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].defaultFlg&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].defaultFlg&&"0"!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].defaultFlg||$scope.gridOptions.gridApi.selection.getSelectedRows()[0].delFlg!=owsCommon.getDefaultValue($scope.delFlgList))&&(flg=!0),""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict&&""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict.dictNm&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict.dictNm&&(flg=!0)),flg&&!owsCommon.viewConfirm("deleteRowAlreadyInputConfirmation")||(angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){$scope.classEdit.indexOf(row)>-1&&$scope.classEdit.splice($scope.classEdit.indexOf(row),1)}),updateRowNumber($scope.classEdit),owsCommon.toggleSelectAll($scope.gridOptions,!1))}},$scope.register=function(){optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions);var listBody=[],emptyBody=[];gridDirectiveControl.validity($scope.gridOptions,!1,gridDirectiveControl.blankRows($scope.gridOptions));for(var row=0;row<$scope.classEdit.length;row++)gridDirectiveControl.isBlankRow($scope.gridOptions,row)?emptyBody.push($scope.classEdit[row]):listBody.push($scope.classEdit[row]);var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.inputform)]);promiseAll.then(function(){owsCommon.syncExec(function(){$scope.inputform.$invalid;gridDirectiveControl.validity($scope.gridOptions,!0),angular.forEach(emptyBody,function(row){$scope.classEdit.splice($scope.classEdit.indexOf(row),1)}),updateRowNumber($scope.classEdit);for(var isBln=!1,j=0,rowIndex=new Array,row=(new Array,0);row<$scope.classEdit.length;row++)for(var classDtlCd=$scope.classEdit[row].classDtlCd,i=row+1;i<$scope.classEdit.length;i++)$scope.classEdit[i].classDtlCd==classDtlCd&&(rowIndex[j]=i,j++);if(j>0){isBln=!0;var messageCd="classDtlCdDuplicateError";gridOptionMessageControl.show($scope.gridOptions,"classDtlCd",$filter("owfMessage")(messageCd),rowIndex),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,rowIndex[0]),directiveControl.firstErrorOnFocus("inputform")}for(var j=0,rowIndex=new Array,row=(new Array,0);row<$scope.classEdit.length;row++)for(var viewOrder=$scope.classEdit[row].viewOrder,i=row+1;i<$scope.classEdit.length;i++)$scope.classEdit[i].viewOrder==viewOrder&&(rowIndex[j]=i,j++);if(j>0){isBln=!0;var messageCd="viewOrderDuplicateError";gridOptionMessageControl.show($scope.gridOptions,"viewOrder",$filter("owfMessage")(messageCd),rowIndex),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,rowIndex[0]),directiveControl.firstErrorOnFocus("inputform")}if(1!=isBln){var checkFunc,execFunc,successFunc;$scope.screenMode==SCREEN_MODE.Update?(checkFunc=api.classEdit.inputCheck,execFunc=api.classEdit.update,successFunc=function(response){owsCommon.viewInfoAndHistoryBack(response.status.messageCode,response.status.messageReplaceValue)}):(checkFunc=api.classEdit.inputCheck,execFunc=api.classEdit.register,successFunc=function(){$scope.initScreenHttp()});var request={};request.data={},request.data.head=$scope.head,bodyList=listBody,request.data.body=bodyList,checkFunc(request).then(function(checkResponse){if(null!=checkResponse.status.listStatus)for(var i=0;i<checkResponse.status.listStatus.length;i++)if(6==checkResponse.status.listStatus[i].status.statusCode)return void optionMessageControl.show($scope,"classCd",$filter("owfMessage")(checkResponse.status.listStatus[i].status.messageCode,checkResponse.status.listStatus[i].status.messageReplaceValue));statusInfo.isSuccessAndShowMessage(checkResponse,"inputform")&&execFunc(request).then(function(execResponse){if(execFunc==api.classEdit.register){if(null!=execResponse.status.listStatus)for(var i=0;i<execResponse.status.listStatus.length;i++)if(6==execResponse.status.listStatus[i].status.statusCode)return void optionMessageControl.show($scope,"classCd",$filter("owfMessage")(execResponse.status.listStatus[i].status.messageCode,execResponse.status.listStatus[i].status.messageReplaceValue));if(!statusInfo.isSuccessAndShowMessage(execResponse,"inputform"))return;owsCommon.toggleSelectAll($scope.gridOptions,!1)}else if(execFunc==api.classEdit.update){if(null!=execResponse.status.listStatus)for(var i=0;i<execResponse.status.listStatus.length;i++)if(6==execResponse.status.listStatus[i].status.statusCode)return void optionMessageControl.show($scope,"classCd",$filter("owfMessage")(execResponse.status.listStatus[i].status.messageCode,execResponse.status.listStatus[i].status.messageReplaceValue));if(!statusInfo.isSuccessAndShowMessage(execResponse,"inputform"))return}successFunc(execResponse)})})}})},function(){owsCommon.syncExec(function(){gridDirectiveControl.validity($scope.gridOptions,!0)})})};var updateRowNumber=function(body){var i=1;angular.forEach(body,function(row){row.lineNo=i++})};$scope.initScreen()}]),angular.module("oneslogiWeb.ClassGrpDtlEdit",[]).factory("classGrpDtlEditApi",["AngularAPIClient",function(AngularAPIClient){return{keyValueList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),classValueList:AngularAPIClient.make([["query","GET","resources/common/class/keyValueList"]]),classGrpValueList:AngularAPIClient.make([["query","GET","resources/common/classGrp/keyValueList"]]),classGrpDtlEdit:AngularAPIClient.make([["init","GET","resources/base/master/classGrpDtlEdit/init"],["search","GET","resources/base/master/classGrpDtlEdit/search"],["registerCheck","POST","resources/base/master/classGrpDtlEdit/registerCheck"],["register","POST","resources/base/master/classGrpDtlEdit/register"]])}}]).controller("ClassGrpDtlEdit",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","classGrpDtlEditApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){var classId;$scope.classGrpMasterEditCols=[{field:"bclassDtl.bclass.classCd",displayName:"区分値CD"},{field:"bclassDtl.bclass.classComment",displayName:"区分値解説"},{field:"bclassDtl.classDtlCd",displayName:"区分値明細CD"},{field:"bclassDtl.vidct.dictNm",displayName:"区分値明細名"},{field:"selectFlg",displayName:"選択"},{field:"defaultFlg",displayName:"デフォルト"}],$scope.initScreen=function(){$scope.isopen=!0,$scope.gridOptions=owsCommon.mergeEntryNonSelectGridOptions({data:"classGrpDtlList",columnDefs:"classGrpMasterEditCols"}),$scope.gridEventOptions={selectFlg:{"ng-click":{eventFunction:"selectFlgChange(row.rowIndex)"}},defaultFlg:{"ng-click":{eventFunction:"defaultFlgChange(row.rowIndex)"}}},classId=$route.current.params.classId,$scope.initScreenHttp()},$scope.selectFlgChange=function(rowIndex){owsCommon.syncExec(function(){var selectFlg=$scope.classGrpDtlList[rowIndex].selectFlg;"1"===selectFlg?gridDirectiveControl.editable($scope.gridOptions,"defaultFlg",!0,rowIndex):(gridDirectiveControl.editable($scope.gridOptions,"defaultFlg",!1,rowIndex),$scope.classGrpDtlList[rowIndex].defaultFlg="0")})},$scope.defaultFlgChange=function(rowIndex){for(var i=0;i<$scope.classGrpDtlList.length;i++)i!=rowIndex&&($scope.classGrpDtlList[i].defaultFlg="0")},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetClassCdList()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetClassCdList=function(){var deferred=$q.defer(),request={};return request.classId=null,api.classValueList.query(request).then(function(response){$scope.classCdList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetClassGrpCdList=function(){var deferred=$q.defer(),request={};return request.classCd=$scope.classGrpDtlEditSearch.bclassGrp.bclass.classCd,api.classGrpValueList.query(request).then(function(response){$scope.classGrpCdList=response.data,1==$scope.classGrpCdList.length?$scope.classGrpDtlEditSearch.bclassGrp.classGrpCd=$scope.classGrpCdList[0].classGrpCd:$scope.classGrpDtlEditSearch.bclassGrp.classGrpCd=null,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer(),request={};return request.classId=classId,api.classGrpDtlEdit.init(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchform"),$scope.deferredSetInitData(response),$scope.deferredGetClassGrpCdList(),owsCommon.setFirstFocus()}),deferred.promise},$scope.deferredSetInitData=function(response){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.classGrpDtlEditSearch=response.data.head,$scope.classGrpDtlList=response.data.body,owsHistory.replaceState($scope.classGrpEditSearch)},$scope.search=function(){$scope.getSearchData()},$scope.getSearchData=function(){var request={};request.data={},request.data.head=$scope.classGrpDtlEditSearch,api.classGrpDtlEdit.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform"),$scope.setSearchData(response)})},$scope.setSearchData=function(response){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.classGrpDtlList=response.data.body;for(var i=0;i<$scope.classGrpDtlList.length;i++){var selectFlg=$scope.classGrpDtlList[i].selectFlg;1==selectFlg?gridDirectiveControl.editable($scope.gridOptions,"defaultFlg",!0,i):gridDirectiveControl.editable($scope.gridOptions,"defaultFlg",!1,i)}owsHistory.replaceState($scope.classGrpDtlEditSearch)},$scope.register=function(){optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions);if(0==$scope.classGrpDtlList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.searchinputform)]);promiseAll.then(function(){owsCommon.syncExec(function(){var isError=$scope.searchinputform.$invalid;if(isError)return void directiveControl.firstErrorOnFocus("searchinputform");var request={};request.data={},request.data.head=$scope.classGrpDtlEditSearch,request.data.body=$scope.classGrpDtlList,api.classGrpDtlEdit.registerCheck(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&api.classGrpDtlEdit.register(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&($scope.classGrpDtlList=[])})})})})},$scope.initScreen()}]),angular.module("oneslogiWeb.ClassGrpEdit",[]).factory("classGrpEditApi",["AngularAPIClient",function(AngularAPIClient){return{keyValueList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),classGrpEdit:AngularAPIClient.make([["init","GET","resources/base/master/classGrpEdit/init"],["inputCheck","POST","resources/base/master/classGrpEdit/inputCheck"],["update","POST","resources/base/master/classGrpEdit/update"]])}}]).controller("ClassGrpEdit",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","classGrpEditApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){var classId;$scope.classGrpMasterEditCols=[{field:"classGrpCd",displayName:"区分値グループCD"},{field:"classGrpComment",displayName:"区分値グループ解説"},{field:"delFlg",displayName:"削除"}],$scope.initScreen=function(){$scope.isopen=!0,$scope.gridOptions=owsCommon.mergeEntryGridOptions({data:"classGrpMasterEdit",columnDefs:"classGrpMasterEditCols"}),$scope.gridSelectOptions={delFlg:{key:"classCd",value:"classNm",listModel:"delFlgList"}},$scope.gridEventOptions={classGrpCd:{"ng-change":{eventFunction:"classGrpCdChange(row.rowIndex)"}},classGrpComment:{"ng-change":{eventFunction:"classGrpCommentChange(row.rowIndex)"}},delFlg:{"ng-change":{eventFunction:"delFlgChange(row.rowIndex)"}}},classId=$route.current.params.classId,$scope.initScreenHttp()},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetSystemTypeList(),$scope.deferredGetDelFlg()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetSystemTypeList=function(){var deferred=$q.defer(),request={};return request.classCd="SYSTEM_TYPE",api.keyValueList.query(request).then(function(response){$scope.systemTypeList=response.data,deferred.resolve()}),deferred.promise},$scope.classGrpCdChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.classGrpCommentChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.delFlgChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.deferredGetDelFlg=function(){var deferred=$q.defer(),request={};return request.classCd="PHYSICAL_DELETE",api.keyValueList.query(request).then(function(response){$scope.delFlgList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer(),request={};return request.classId=classId,api.classGrpEdit.init(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchform"),$scope.deferredSetInitData(response),owsCommon.setFirstFocus()}),deferred.promise},$scope.deferredSetInitData=function(response){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.classGrpEditSearch=response.data.head,$scope.classGrpMasterEdit=response.data.body,$scope.blankRow=response.data.blankRow;for(var row=0;row<$scope.classGrpMasterEdit.length;row++)null!=$scope.classGrpMasterEdit[row].classGrpCd&&gridDirectiveControl.editable($scope.gridOptions,"classGrpCd",!1,row);owsHistory.replaceState($scope.classGrpEditSearch)},$scope.addRow=function(){$scope.blankRow.delFlg=owsCommon.getDefaultValue($scope.delFlgList),$scope.classGrpMasterEdit.push(angular.copy($scope.blankRow)),updateRowNumber($scope.classGrpMasterEdit),gridDirectiveControl.editable($scope.gridOptions,"delFlg",!1,$scope.classGrpMasterEdit.length-1)},$scope.removeRow=function(){if(0==$scope.classGrpMasterEdit.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");if(!($scope.gridOptions.gridApi.selection.getSelectedRows().length>1)||owsCommon.viewConfirm("deleteRowMultipleConfirmation")){var i=0;return angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){if($scope.classGrpMasterEdit.indexOf(row)>-1&&null!=row.classGrpId)return void(i+=1)}),i>0?void alertMessage.setErrorMessageByCode("alreadyRegisteredCannotDeleteError"):void(1==$scope.gridOptions.gridApi.selection.getSelectedRows().length&&(""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].classGrpCd&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].classGrpCd||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].classGrpComment&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].classGrpComment||$scope.gridOptions.gridApi.selection.getSelectedRows()[0].delFlg!=owsCommon.getDefaultValue($scope.delFlgList))&&!owsCommon.viewConfirm("deleteRowAlreadyInputConfirmation")||(angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){$scope.classGrpMasterEdit.indexOf(row)>-1&&$scope.classGrpMasterEdit.splice($scope.classGrpMasterEdit.indexOf(row),1)}),updateRowNumber($scope.classGrpMasterEdit),owsCommon.toggleSelectAll($scope.gridOptions,!1)))}};var updateRowNumber=function(body){var i=1;angular.forEach(body,function(row){row.lineNo=i++})};$scope.register=function(){optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions);var listBody=[],emptyBody=[];if(0==$scope.classGrpMasterEdit.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");gridDirectiveControl.validity($scope.gridOptions,!1,gridDirectiveControl.blankRows($scope.gridOptions));for(var row=0;row<$scope.classGrpMasterEdit.length;row++)gridDirectiveControl.isBlankRow($scope.gridOptions,row)?emptyBody.push($scope.classGrpMasterEdit[row]):listBody.push($scope.classGrpMasterEdit[row]);var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.searchinputform)]);promiseAll.then(function(){owsCommon.syncExec(function(){$scope.searchinputform.$invalid;if(gridDirectiveControl.validity($scope.gridOptions,!0),0==listBody.length)return void alertMessage.setErrorMessageByCode("noDetailsError");angular.forEach(emptyBody,function(row){$scope.classGrpMasterEdit.splice($scope.classGrpMasterEdit.indexOf(row),1)}),updateRowNumber($scope.classGrpMasterEdit);for(var j=0,rowIndex=new Array,row=(new Array,0);row<$scope.classGrpMasterEdit.length;row++)for(var classGrpCd=$scope.classGrpMasterEdit[row].classGrpCd,i=row+1;i<$scope.classGrpMasterEdit.length;i++)$scope.classGrpMasterEdit[i].classGrpCd==classGrpCd&&(rowIndex[j]=i,j++);if(j>0){var messageCd="classGrpCdDuplicateError";return gridOptionMessageControl.show($scope.gridOptions,"classGrpCd",$filter("owfMessage")(messageCd),rowIndex),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,rowIndex[0]),void directiveControl.firstErrorOnFocus("searchinputform")}var request={};request.data={},request.data.head={},request.data.head.classId=classId,request.data.body=$scope.classGrpMasterEdit,api.classGrpEdit.inputCheck(request).then(function(response){
statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&api.classGrpEdit.update(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&owsCommon.viewInfoAndHistoryBack(response.status.messageCode,response.status.messageReplaceValue)})})})},function(){owsCommon.syncExec(function(){gridDirectiveControl.validity($scope.gridOptions,!0)})})},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.initScreen()}]),angular.module("oneslogiWeb.ClassList",[]).factory("classListApi",["AngularAPIClient",function(AngularAPIClient){return{dropdownList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),classList:AngularAPIClient.make([["init","GET","resources/master/classList/init"],["search","GET","resources/master/classList/search"],["checkDelete","POST","resources/master/classList/checkDelete"],["delete","POST","resources/master/classList/delete"]])}}]).controller("ClassList",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","classListApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.classListCols=[{field:"classCd",displayName:"区分値CD"},{field:"classComment",displayName:"区分値解説"},{field:"systemType",displayName:"システム種別CD"},{field:"systemTypeNm",displayName:"システム種別名称"}],$scope.initScreen=function(){$scope.screenMode=$route.current.params.mode,$scope.isopen=!0,$scope.pagingOptions=owsCommon.getDefaultPagingOptions(),$scope.pagingOptions.setPageData=function(){$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.gridOptions=owsCommon.mergePagingMultiSelectGridOptions({data:"classList",columnDefs:"classListCols",pagingOptions:$scope.pagingOptions}),$scope.initScreenHttp()},$scope.initScreenHttp=function(response){$q.all([$scope.systemTypeList()]).then(function(response){return $scope.deferredGetInitData()})},$scope.systemTypeList=function(){var deferred=$q.defer(),request={};return request.classCd="SYSTEM_TYPE",api.dropdownList.query(request).then(function(response){$scope.systemTypeList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer();return api.classList.init().then(function(response){$scope.head=response.data.head,$scope.classList=response.data.body,$scope.paging=response.paging,owsHistory.hasState()&&($scope.head=owsHistory.popState(),$scope.search()),owsCommon.setFirstFocus(),deferred.resolve()}),deferred.promise},$scope.search=function(){owsCommon.clearPagingOptions($scope.gridOptions),$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.getPagedDataAsync=function(pageSize,page){var request={};request.data={},request.data.head=$scope.head,owsCommon.setPagingData(request,$scope.paging,pageSize,page),api.classList.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchform"),$scope.setPagingData(response,page,pageSize)})},$scope.setPagingData=function(response,page,pageSize){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport[0].scrollTop=0,$scope.classList=response.data.body,$scope.gridOptions.totalItems=response.paging.allRecordCount,owsHistory.replaceState($scope.head)},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.gridDblClick=function(row){owsCommon.syncButtonExec("update",row)},$scope.deletedata=function(){var listBody=[];if(0==$scope.classList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");if(!($scope.gridOptions.gridApi.selection.getSelectedRows().length>1)||owsCommon.viewConfirm("confirmDeleteRow")){for(var row=0;row<$scope.gridOptions.gridApi.selection.getSelectedRows().length;row++)listBody.push($scope.gridOptions.gridApi.selection.getSelectedRows()[row]);var request={};request.data={},request.data.body=listBody,api.classList.checkDelete(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&api.classList.delete(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&$scope.search()})})}},$scope.register=function(){$location.path("base/master/ClassEdit").search({}).search("mode",SCREEN_MODE.Register)},$scope.initScreen(),$scope.update=function(){return 0==$scope.classList.length?void alertMessage.setErrorMessageByCode("detailLineNotDisplayError"):0==$scope.gridOptions.gridApi.selection.getSelectedRows().length?void alertMessage.setErrorMessageByCode("lineNotSelectError"):$scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):void $location.path("base/master/ClassEdit").search({}).search("mode",SCREEN_MODE.Update).search("classId",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].classId)},$scope.classGrpUpdate=function(){return 0==$scope.classList.length?void alertMessage.setErrorMessageByCode("detailLineNotDisplayError"):0==$scope.gridOptions.gridApi.selection.getSelectedRows().length?void alertMessage.setErrorMessageByCode("lineNotSelectError"):$scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):void $location.path("base/master/ClassGrpEdit").search({}).search("classId",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].classId)},$scope.classGrpDtlUpdate=function(){return 0==$scope.classList.length?void alertMessage.setErrorMessageByCode("detailLineNotDisplayError"):0==$scope.gridOptions.gridApi.selection.getSelectedRows().length?void alertMessage.setErrorMessageByCode("lineNotSelectError"):$scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):void $location.path("base/master/ClassGrpDtlEdit").search({}).search("classId",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].classId)}}]),angular.module("oneslogiWeb.DictCultureMaster",[]).factory("dictCultureMasterApi",["AngularAPIClient",function(AngularAPIClient){return{culture:AngularAPIClient.make([["keyValueList","GET","resources/common/cultureCD/cultureList"]]),dictCultureList:AngularAPIClient.make([["init","GET","resources/master/dictCultureMaster/init"],["search","GET","resources/master/dictCultureMaster/search"],["inputCheck","POST","resources/master/dictCultureMaster/inputCheck"],["register","POST","resources/master/dictCultureMaster/register"]])}}]).controller("DictCultureMaster",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","dictCultureMasterApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.dictCultureListCols=[{field:"bdictCultureList[0].bculture.vdict.dictNm",displayName:"カルチャ"},{field:"dictNm",displayName:"辞書名"},{field:"dictCultureNm",displayName:"カルチャ別 辞書名"}];$scope.initScreen=function(){$scope.isopen=!0,$scope.pagingOptions=owsCommon.getDefaultPagingOptions(),$scope.pagingOptions.setPageData=function(){$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.gridOptions=owsCommon.mergePagingMultiSelectGridOptions({data:"dictCultureList",columnDefs:"dictCultureListCols",pagingOptions:$scope.pagingOptions}),$scope.initScreenHttp()},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetCulture()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetCulture=function(){var deferred=$q.defer(),request={};return api.culture.keyValueList(request).then(function(response){$scope.cultureList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer();return api.dictCultureList.init().then(function(response){$scope.head=response.data.head,$scope.dictCultureList=response.data.body,$scope.paging=response.paging,owsHistory.hasState()&&($scope.head=owsHistory.popState(),$scope.search()),owsCommon.setFirstFocus(),deferred.resolve()}),deferred.promise},$scope.search=function(){owsCommon.clearPagingOptions($scope.gridOptions),$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.getPagedDataAsync=function(pageSize,page){var request={};request.data={},request.data.head=$scope.head,owsCommon.setPagingData(request,$scope.paging,pageSize,page),api.dictCultureList.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform"),$scope.setPagingData(response,page,pageSize)})},$scope.setPagingData=function(response,page,pageSize){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.dictCultureList=response.data.body,$scope.gridOptions.totalItems=response.paging.allRecordCount,owsHistory.replaceState($scope.head)},$scope.getSearchData=function(){var request={};request.data={},request.data.head=$scope.head,api.dictCultureList.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform"),$scope.setSearchData(response)})},$scope.setSearchData=function(response){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.dictCultureList=response.data.body,owsHistory.replaceState($scope.head)},$scope.register=function(){optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions);var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.searchinputform)]);promiseAll.then(function(){owsCommon.syncExec(function(){var isError=$scope.searchinputform.$invalid;if(isError)return void directiveControl.firstErrorOnFocus("searchinputform");if(0==$scope.dictCultureList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");var request={};request.data={},request.data.head=$scope.head,request.data.body=$scope.dictCultureList,api.dictCultureList.inputCheck(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&api.dictCultureList.register(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&($scope.dictCultureList=[])})})})})},$scope.initScreen()}]),angular.module("oneslogiWeb.DictMaster",[]).factory("dictMasterApi",["AngularAPIClient",function(AngularAPIClient){return{dropdownList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),limitToMessageCD:AngularAPIClient.make([["query","GET","resources/common/class/limitToMessageCD"]]),dictList:AngularAPIClient.make([["init","GET","resources/master/dictMaster/init"],["search","GET","resources/master/dictMaster/search"],["inputCheck","POST","resources/master/dictMaster/inputCheck"],["register","POST","resources/master/dictMaster/register"]])}}]).controller("DictMaster",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","dictMasterApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){var inputLimit=[];$scope.dictListCols=[{field:"oldDictNm",displayName:"辞書名（変更前）"},{field:"dictNm",displayName:"辞書名"},{field:"systemType",displayName:"システム種別"},{field:"dataType",displayName:"データ型"},{field:"bdictValidAsOne.inputLimit",displayName:"入力文字制限"},{field:"bdictValidAsOne.limitMessageCd",displayName:"制限メッセージCD"},{field:"bdictValidAsOne.minChars",displayName:"最小文字数"},{field:"bdictValidAsOne.maxChars",displayName:"最大文字数"},{field:"bdictValidAsOne.minNumber",displayName:"最小値"},{field:"bdictValidAsOne.maxNumber",displayName:"最大値"},{field:"bdictValidAsOne.integerLength",displayName:"整数桁数"},{field:"bdictValidAsOne.decimalLength",displayName:"小数桁数"},{field:"delFlg",displayName:"削除フラグ"}],$scope.initScreen=function(){$scope.isopen=!0,$scope.pagingOptions=owsCommon.getDefaultPagingOptions(),$scope.pagingOptions.setPageData=function(){$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.gridOptions=owsCommon.mergePagingMultiSelectGridOptions({data:"dictList",columnDefs:"dictListCols",pagingOptions:$scope.pagingOptions}),$scope.gridSelectOptions={systemType:{key:"classCd",value:"classNm",listModel:"systemTypeList"},dataType:{key:"classCd",value:"classNm",listModel:"dataTypeList"},"bdictValidAsOne.inputLimit":{key:"classCd",value:"classNm",listModel:"inputLimitList"},delFlg:{key:"classCd",value:"classNm",listModel:"delFlgList"}},$scope.gridEventOptions={dictNm:{"ng-change":{eventFunction:"dictNmChange(row.rowIndex)"}},systemType:{"ng-change":{eventFunction:"systemTypeChange(row.rowIndex)"}},dataType:{"ng-change":{eventFunction:"dataTypeChange(row.rowIndex)"},"ng-blur":{eventFunction:"dataTypeBlur(row.rowIndex)"}},"bdictValidAsOne.inputLimit":{"ng-blur":{eventFunction:"inputLimitBlur(row.rowIndex)"},"ng-change":{eventFunction:"inputLimitChange(row.rowIndex)"}},"bdictValidAsOne.limitMessageCd":{"ng-change":{eventFunction:"limitMessageCdChange(row.rowIndex)"}},"bdictValidAsOne.minChars":{"ng-change":{eventFunction:"minCharsChange(row.rowIndex)"}},"bdictValidAsOne.maxChars":{"ng-change":{eventFunction:"maxCharsChange(row.rowIndex)"}},"bdictValidAsOne.minNumber":{"ng-change":{eventFunction:"minNumberChange(row.rowIndex)"}},"bdictValidAsOne.maxNumber":{"ng-change":{eventFunction:"maxNumberChange(row.rowIndex)"}},"bdictValidAsOne.integerLength":{"ng-change":{eventFunction:"integerLengthChange(row.rowIndex)"}},"bdictValidAsOne.decimalLength":{"ng-change":{eventFunction:"decimalLengthChange(row.rowIndex)"}},delFlg:{"ng-change":{eventFunction:"delFlgChange(row.rowIndex)"}}},$scope.initScreenHttp()},$scope.dictNmChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.systemTypeChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.dataTypeChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.inputLimitChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.limitMessageCdChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.minCharsChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.maxCharsChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.minNumberChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.maxNumberChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.integerLengthChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.decimalLengthChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.delFlgChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.inputLimitBlur=function(rowIndex){if(null==$scope.dictList[rowIndex].bdictValidAsOne.inputLimit)return void($scope.dictList[rowIndex].bdictValidAsOne.limitMessageCd=null);for(var i=0;i<inputLimit.length;i++)$scope.dictList[rowIndex].bdictValidAsOne.inputLimit==inputLimit[i].classCd&&$scope.deferredGetLimitMessageCd(rowIndex,inputLimit[i].viewOrder)},$scope.dataTypeBlur=function(rowIndex){$scope.DataTypeEditable($scope.dictList[rowIndex].dataType,rowIndex)},$scope.DataTypeEditable=function(dataType,rowIndex){"text"==dataType?(gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.inputLimit",!0,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.limitMessageCd",!0,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.minChars",!0,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.maxChars",!0,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.minNumber",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.maxNumber",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.integerLength",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.decimalLength",!1,rowIndex),null!=$scope.dictList[rowIndex].bdictValidAsOne&&($scope.dictList[rowIndex].bdictValidAsOne.minNumber=null,$scope.dictList[rowIndex].bdictValidAsOne.maxNumber=null,$scope.dictList[rowIndex].bdictValidAsOne.integerLength=null,$scope.dictList[rowIndex].bdictValidAsOne.decimalLength=null)):"number"==dataType?(gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.inputLimit",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.limitMessageCd",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.minChars",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.maxChars",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.minNumber",!0,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.maxNumber",!0,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.integerLength",!0,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.decimalLength",!0,rowIndex),null!=$scope.dictList[rowIndex].bdictValidAsOne&&($scope.dictList[rowIndex].bdictValidAsOne.inputLimit="",$scope.dictList[rowIndex].bdictValidAsOne.limitMessageCd="",$scope.dictList[rowIndex].bdictValidAsOne.minChars=null,$scope.dictList[rowIndex].bdictValidAsOne.maxChars=null)):"date"==dataType?(gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.inputLimit",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.limitMessageCd",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.minChars",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.maxChars",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.minNumber",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.maxNumber",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.integerLength",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.decimalLength",!1,rowIndex),null!=$scope.dictList[rowIndex].bdictValidAsOne&&($scope.dictList[rowIndex].bdictValidAsOne.inputLimit="",$scope.dictList[rowIndex].bdictValidAsOne.limitMessageCd="",$scope.dictList[rowIndex].bdictValidAsOne.minChars=null,$scope.dictList[rowIndex].bdictValidAsOne.maxChars=null,$scope.dictList[rowIndex].bdictValidAsOne.minNumber=null,$scope.dictList[rowIndex].bdictValidAsOne.maxNumber=null,$scope.dictList[rowIndex].bdictValidAsOne.integerLength=null,$scope.dictList[rowIndex].bdictValidAsOne.decimalLength=null)):"datetime"==dataType?(gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.inputLimit",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.limitMessageCd",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.minChars",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.maxChars",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.minNumber",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.maxNumber",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.integerLength",!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.decimalLength",!1,rowIndex),null!=$scope.dictList[rowIndex].bdictValidAsOne&&($scope.dictList[rowIndex].bdictValidAsOne.inputLimit="",$scope.dictList[rowIndex].bdictValidAsOne.limitMessageCd="",$scope.dictList[rowIndex].bdictValidAsOne.minChars=null,$scope.dictList[rowIndex].bdictValidAsOne.maxChars=null,$scope.dictList[rowIndex].bdictValidAsOne.minNumber=null,$scope.dictList[rowIndex].bdictValidAsOne.maxNumber=null,$scope.dictList[rowIndex].bdictValidAsOne.integerLength=null,$scope.dictList[rowIndex].bdictValidAsOne.decimalLength=null)):(gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.inputLimit",!0,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.limitMessageCd",!0,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.minChars",!0,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.maxChars",!0,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.minNumber",!0,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.maxNumber",!0,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.integerLength",!0,rowIndex),gridDirectiveControl.editable($scope.gridOptions,"bdictValidAsOne.decimalLength",!0,rowIndex))},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetSystemTypeList(),$scope.deferredGetDataType(),$scope.deferredGetInputLimitList(),$scope.deferredGetDelFlg()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetSystemTypeList=function(){var deferred=$q.defer(),request={};return request.classCd="SYSTEM_TYPE",api.dropdownList.query(request).then(function(response){$scope.systemTypeList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetDataType=function(){var deferred=$q.defer(),request={};return request.classCd="DATA_TYPE",api.dropdownList.query(request).then(function(response){$scope.dataTypeList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInputLimitList=function(){var deferred=$q.defer(),request={};return request.classCd="INPUT_LIMIT",api.limitToMessageCD.query(request).then(function(response){inputLimit=response.data,$scope.inputLimitList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetLimitMessageCd=function(rowIndex,viewOrder){var deferred=$q.defer(),request={};return request.classCd="LIMIT_MESSAGE_CD",request.viewOrder=viewOrder,api.limitToMessageCD.query(request).then(function(response){$scope.dictList[rowIndex].bdictValidAsOne.limitMessageCd=response.data[0].classCd,deferred.resolve()}),deferred.promise},$scope.deferredGetDelFlg=function(){var deferred=$q.defer(),request={};return request.classCd="PHYSICAL_DELETE",api.dropdownList.query(request).then(function(response){$scope.delFlgList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer();return api.dictList.init().then(function(response){$scope.head=response.data.head,$scope.dictList=response.data.body,$scope.blankRow=response.data.blankRow,$scope.head.delFlg=owsCommon.getDefaultValue($scope.delFlgList),$scope.head.systemType=owsCommon.getDefaultValue($scope.systemTypeList),$scope.paging=response.paging,owsHistory.hasState()&&($scope.head=owsHistory.popState(),$scope.search()),owsCommon.setFirstFocus(),deferred.resolve()}),deferred.promise},$scope.search=function(){owsCommon.clearPagingOptions($scope.gridOptions),$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.getPagedDataAsync=function(pageSize,page){var request={};request.data={},request.data.head=$scope.head,owsCommon.setPagingData(request,$scope.paging,pageSize,page),api.dictList.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform"),$scope.setSearchData(response)})},$scope.setSearchData=function(response){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.dictList=response.data.body;for(var row=0;row<$scope.dictList.length;row++)$scope.DataTypeEditable($scope.dictList[row].dataType,row);$scope.gridOptions.totalItems=response.paging.allRecordCount,owsHistory.replaceState($scope.head)},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.addRow=function(){$scope.blankRow.systemType=owsCommon.getDefaultValue($scope.systemTypeList),$scope.blankRow.dataType=owsCommon.getDefaultValue($scope.dataTypeList),$scope.blankRow.delFlg=owsCommon.getDefaultValue($scope.delFlgList),$scope.dictList.push(angular.copy($scope.blankRow)),gridDirectiveControl.editable($scope.gridOptions,"delFlg",!1,$scope.dictList.length-1),updateRowNumber($scope.dictList)},$scope.removeRow=function(){if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("deleteRowErrNotSelect");if(!($scope.gridOptions.gridApi.selection.getSelectedRows().length>1)||owsCommon.viewConfirm("deleteRowMultipleConfirmation")){var i=0;if(angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){if($scope.dictList.indexOf(row)>-1&&null!=row.dictId)return void(i+=1)}),i>0)return void alertMessage.setErrorMessageByCode("alreadyRegisteredCannotDeleteError");var flg=!1;1==$scope.gridOptions.gridApi.selection.getSelectedRows().length&&((""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].dictNm&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].dictNm||$scope.gridOptions.gridApi.selection.getSelectedRows()[0].systemType!=owsCommon.getDefaultValue($scope.systemTypeList)||$scope.gridOptions.gridApi.selection.getSelectedRows()[0].dataType!=owsCommon.getDefaultValue($scope.dataTypeList)||$scope.gridOptions.gridApi.selection.getSelectedRows()[0].delFlg!=owsCommon.getDefaultValue($scope.delFlgList))&&(flg=!0),""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne&&($scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.inputLimit!=owsCommon.getDefaultValue($scope.inputLimitList)||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.inputLimit&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.inputLimit||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.limitMessageCd&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.limitMessageCd||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.minChars&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.minChars||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.maxChars&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.maxChars||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.minNumber&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.minNumber||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.maxNumber&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.maxNumber||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.integerLength&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.integerLength||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.decimalLength&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.decimalLength)&&(flg=!0)),flg&&!owsCommon.viewConfirm("deleteRowAlreadyInputConfirmation")||(angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){$scope.dictList.indexOf(row)>-1&&$scope.dictList.splice($scope.dictList.indexOf(row),1)}),updateRowNumber($scope.dictList),owsCommon.toggleSelectAll($scope.gridOptions,!1))}};var updateRowNumber=function(body){var i=1;angular.forEach(body,function(row){row.lineNo=i++})};$scope.register=function(){optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions);var listBody=[],emptyBody=[];if(0==$scope.dictList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");gridDirectiveControl.validity($scope.gridOptions,!1,gridDirectiveControl.blankRows($scope.gridOptions));for(var allBody=$scope.gridOptions.gridApi.grid.rows,row=0;row<$scope.dictList.length;row++)gridDirectiveControl.isBlankRow($scope.gridOptions,row)?emptyBody.push($scope.dictList[row]):row<=allBody.length&&0==$scope.gridOptions.getSelection(allBody[row])?(gridDirectiveControl.validity($scope.gridOptions,!1,row),emptyBody.push($scope.dictList[row])):listBody.push($scope.dictList[row]);var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.searchinputform)]);promiseAll.then(function(){owsCommon.syncExec(function(){$scope.searchinputform.$invalid;if(gridDirectiveControl.validity($scope.gridOptions,!0),0==listBody.length)return void alertMessage.setErrorMessageByCode("noDetailsError");angular.forEach(emptyBody,function(row){$scope.dictList.splice($scope.dictList.indexOf(row),1)}),updateRowNumber($scope.dictList);for(var j=0,rowIndex=new Array,row=(new Array,0);row<$scope.dictList.length;row++)for(var dictNm=$scope.dictList[row].dictNm,i=row+1;i<$scope.dictList.length;i++)$scope.dictList[i].dictNm==dictNm&&(rowIndex[j]=i,j++);if(j>0){var messageCd="dictNmDuplicateError";return gridOptionMessageControl.show($scope.gridOptions,"dictNm",$filter("owfMessage")(messageCd),rowIndex),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,rowIndex[0]),void directiveControl.firstErrorOnFocus("searchinputform")}for(var charsReversalRowList=[],row=0;row<$scope.dictList.length;row++)if($scope.dictList[row].bdictValidAsOne){var minChars=$scope.dictList[row].bdictValidAsOne.minChars,maxChars=$scope.dictList[row].bdictValidAsOne.maxChars;minChars&&maxChars&&minChars>maxChars&&charsReversalRowList.push(row)}if(charsReversalRowList.length>0)return gridOptionMessageControl.show($scope.gridOptions,"bdictValidAsOne.minChars",$filter("owfMessage")("inputCharsCheckReversalError"),charsReversalRowList),gridOptionMessageControl.show($scope.gridOptions,"bdictValidAsOne.maxChars",$filter("owfMessage")("inputCharsCheckReversalError"),charsReversalRowList),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,charsReversalRowList[0]),void directiveControl.firstErrorOnFocus("searchinputform");for(var numberReversalRowList=[],row=0;row<$scope.dictList.length;row++)if($scope.dictList[row].bdictValidAsOne){var minNumber=$scope.dictList[row].bdictValidAsOne.minNumber,maxNumber=$scope.dictList[row].bdictValidAsOne.maxNumber;minNumber&&maxNumber&&minNumber>maxNumber&&numberReversalRowList.push(row)}if(numberReversalRowList.length>0)return gridOptionMessageControl.show($scope.gridOptions,"bdictValidAsOne.minNumber",$filter("owfMessage")("inputNumberCheckReversalError"),numberReversalRowList),gridOptionMessageControl.show($scope.gridOptions,"bdictValidAsOne.maxNumber",$filter("owfMessage")("inputNumberCheckReversalError"),numberReversalRowList),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,numberReversalRowList[0]),void directiveControl.firstErrorOnFocus("searchinputform");
var request={};request.data={},request.data.body=listBody,api.dictList.inputCheck(request).then(function(response){if(null!=response.status.listStatus){for(var firstErrIndex,isBln=!1,i=0;i<response.status.listStatus.length;i++)5==response.status.listStatus[i].status.statusCode&&(gridOptionMessageControl.show($scope.gridOptions,"dictNm",$filter("owfMessage")(response.status.listStatus[i].status.messageCode,response.status.listStatus[i].status.messageReplaceValue),response.status.listStatus[i].status.rowIndex),isBln=!0,firstErrIndex||(firstErrIndex=response.status.listStatus[i].status.rowIndex));if(isBln)return gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,firstErrIndex),void directiveControl.firstErrorOnFocus("searchinputform")}statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&api.dictList.register(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&($scope.dictList=[],owsCommon.toggleSelectAll($scope.gridOptions,!1))})})})},function(){owsCommon.syncExec(function(){gridDirectiveControl.validity($scope.gridOptions,!0)})})},$scope.initScreen()}]),angular.module("oneslogiWeb.InfoMaster",[]).factory("infoMasterApi",["AngularAPIClient",function(AngularAPIClient){return{dropdownList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),infoList:AngularAPIClient.make([["init","GET","resources/base/master/infoMaster/init"],["search","GET","resources/base/master/infoMaster/search"],["excel","GET","resources/base/master/infoMaster/search","excel"],["register","POST","resources/base/master/infoMaster/register"],["remove","POST","resources/base/master/infoMaster/delete"]])}}]).controller("InfoMaster",["$scope","$timeout","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","infoMasterApi",function($scope,$timeout,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.infoListCols=[{field:"infoNm",displayName:"お知らせ内容"},{field:"infoCd",displayName:"開始日付"},{field:"infoNm",displayName:"終了日付"}],$scope.initScreen=function(){$scope.isopen=!0,$scope.centerList=userInfo.centerList,$scope.pagingOptions=owsCommon.getDefaultPagingOptions(),$scope.pagingOptions.setPageData=function(){$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.gridOptions=owsCommon.mergePagingMultiSelectGridOptions({data:"infoList",columnDefs:"infoListCols",pagingOptions:$scope.pagingOptions}),$scope.fromToCheck=function(fromValue,toValue){var fromValueString=owsCommon.dateToString(fromValue),toValueString=owsCommon.dateToString(toValue);return!(null!=fromValueString&&fromValueString.length>0&&null!=toValueString&&toValueString.length>0&&fromValueString>toValueString)},$scope.fromToMessage=$filter("owfMessage")(FROM_TO_MESSAGE_CD),$scope.initScreenHttp()},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetInfoEnd()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetInfoEnd=function(){var deferred=$q.defer(),request={};return request.classCd="INFO_FLG",api.dropdownList.query(request).then(function(response){$scope.infoEndList=response.data,deferred.resolve()}),deferred.promise},$scope.gridDblClick=function(row){owsCommon.syncButtonExec("modRow",row)},$scope.deferredGetInitData=function(){var deferred=$q.defer();return api.infoList.init().then(function(response){$scope.infoMasterSearch=response.data.head,$scope.infoList=response.data.body,$scope.edit=response.data.edit,$scope.paging=response.paging;var myDate=new Date,now=myDate.getFullYear()+(myDate.getMonth()+1<10?"0":"")+(myDate.getMonth()+1)+(myDate.getDate()<10?"0":"")+myDate.getDate();$scope.infoMasterSearch.infoDtFrom=now,$scope.infoMasterSearch.infoEnd=owsCommon.getDefaultValue($scope.infoEndList),directiveControl.show($scope,"infoNm",!1),directiveControl.show($scope,"infoStartDt",!1),directiveControl.show($scope,"infoEndDt",!1),directiveControl.show($scope,"register",!1),owsHistory.hasState()&&($scope.infoMasterSearch=owsHistory.popState(),$scope.search()),owsCommon.setFirstFocus(),deferred.resolve()}),deferred.promise},$scope.search=function(){owsCommon.clearPagingOptions($scope.gridOptions),$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.getPagedDataAsync=function(pageSize,page){var request={};request.data={},request.data.head=$scope.infoMasterSearch,request.data.head.centerCd=userInfo.centerCd,request.data.head.clientCd=userInfo.clientCd,owsCommon.setPagingData(request,$scope.paging,pageSize,page),api.infoList.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchform"),$scope.setPagingData(response,page,pageSize)})},$scope.setPagingData=function(response,page,pageSize){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.infoList=response.data.body,$scope.gridOptions.totalItems=response.paging.allRecordCount,$scope.edit.infoNm=null,$scope.edit.infoStartDt=null,$scope.edit.infoEndDt=null,directiveControl.show($scope,"infoNm",!1),directiveControl.show($scope,"infoStartDt",!1),directiveControl.show($scope,"infoEndDt",!1),directiveControl.show($scope,"register",!1),owsHistory.replaceState($scope.infoMasterSearch)},$scope.excelOutput=function(){var request={};request.data={},request.data.head=$scope.infoMasterSearch,request.data.head.centerCd=userInfo.centerCd,request.data.head.clientCd=userInfo.clientCd,owsCommon.setOutputOptions(request,$scope.gridOptions,"body",document.title),api.infoList.excel(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")?location.href=response.output.downloadUrl:$scope.setSearchData(response)})},$scope.addRow=function(){directiveControl.show($scope,"infoNm",!0),directiveControl.show($scope,"infoStartDt",!0),directiveControl.show($scope,"infoEndDt",!0),directiveControl.show($scope,"register",!0),$scope.edit.infoNm=null,$scope.edit.infoStartDt=null,$scope.edit.infoEndDt=null,$scope.edit.infoId=null,directiveControl.firstErrorOnFocus("inputform");var top=angular.element("#inputform").offset().top;angular.element("html,body").animate({scrollTop:top},"normal")},$scope.modRow=function(){if(0==$scope.infoList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");if($scope.gridOptions.gridApi.selection.getSelectedRows().length>1)return void alertMessage.setErrorMessageByCode("onlyOneSelect");updateRowNumber($scope.infoList),directiveControl.show($scope,"infoNm",!0),directiveControl.show($scope,"infoStartDt",!0),directiveControl.show($scope,"infoEndDt",!0),directiveControl.show($scope,"register",!0),$scope.edit=angular.copy($scope.gridOptions.gridApi.selection.getSelectedRows()[0]),$timeout(function(){var ngForm=$("#inputform").find("ng-form");if(ngForm.length>0){var element=angular.element(ngForm[0]),input=element.find("textarea");input.length>0&&input[0].focus()}},100);var top=angular.element("#inputform").offset().top;angular.element("html,body").animate({scrollTop:top},"normal")},$scope.removeRow=function(){if(0==$scope.infoList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("deleteRowErrNotSelect");if(owsCommon.viewConfirm("processExecuteConfirmation")){var listBody=[],request={};angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){$scope.infoList.indexOf(row)>-1&&$scope.infoList.splice($scope.infoList.indexOf(row),1)});for(var row=0;row<$scope.gridOptions.gridApi.selection.getSelectedRows().length;row++)listBody.push($scope.gridOptions.gridApi.selection.getSelectedRows()[row]);request.data={},request.data.body=listBody,api.infoList.remove(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&$scope.search()})}};var updateRowNumber=function(body){var i=1;angular.forEach(body,function(row){row.lineNo=i++})};$scope.register=function(){optionMessageControl.hideAll($scope),owsCommon.syncExec(function(){var isError=$scope.inputform.$invalid;if(isError)return void directiveControl.firstErrorOnFocus("inputform");if(owsCommon.viewConfirm("dataRegisterConfirmation")){var request={};request.data={},request.data.edit=$scope.edit,api.infoList.register(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"inputform")&&$scope.search()})}})},$scope.initScreen()}]),angular.module("oneslogiWeb.LiteLoginPwdMgt",[]).factory("LiteLoginPwdMgtApi",["AngularAPIClient",function(AngularAPIClient){return{bClass:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),liteLoginPwdMgt:AngularAPIClient.make([["init","GET","resources/base/master/liteLoginPwdMgt/init"],["registerPreCheck","POST","resources/base/master/liteLoginPwdMgt/registerPreCheck"],["register","POST","resources/base/master/liteLoginPwdMgt/register"],["registerCopy","POST","resources/base/master/liteLoginPwdMgt/registerCopy"]])}}]).controller("LiteLoginPwdMgtCtrl",["$scope","$rootScope","$q","$route","$filter","$locale","owsCommon","statusInfo","alertMessage","directiveControl","LiteLoginPwdMgtApi","UserMgtShared","PasswordChangeDialog","VIEW_MODE_PASSWORD_CHANGE_BY_MGT","EVENT_NAME_PASSWORD_CHANGE_BY_MGT",function($scope,$rootScope,$q,$route,$filter,$locale,owsCommon,statusInfo,alertMessage,directiveControl,api,shared,passwordChangeDialog,VIEW_MODE_PASSWORD_CHANGE_BY_MGT,EVENT_NAME_PASSWORD_CHANGE_BY_MGT){var initScreen=function(){var input={};input.screenCd=$scope.screenCd,input.userCd="",input.passwordReset="",input.lockout="",input.availableStartDateYmd="",input.availableStartTime="",input.availableEndDateYmd="",input.availableEndTime="",$scope.input=input;var viewOnly={};viewOnly.userNm="",viewOnly.passwordModifiedDate="",viewOnly.lastLoginDate="",viewOnly.failedLoginAttempts="",viewOnly.lastFailedLoginDate="",viewOnly.lockoutDate="",$scope.viewOnly=viewOnly,initScreenHttp()},initScreenHttp=function(){$q.all([deferredGetClass("PASSWORD_RESET","passwordResetList"),deferredGetClass("LOCKOUT","lockoutList")]).then(function(response){return deferredGetInitData()})},deferredGetClass=function(classCd,targetItemCd){var deferred=$q.defer(),request={};return request.classCd=classCd,api.bClass.query(request).then(function(response){$scope[targetItemCd]=response.data,deferred.resolve()}),deferred.promise},deferredGetInitData=function(){var deferred=$q.defer(),request={};return request.userId=$route.current.params.userId,api.liteLoginPwdMgt.init(request).then(function(response){return statusInfo.isSuccessAndShowMessage(response,"inputform")?($scope.input.userCd=response.data.user.userCd,$scope.viewOnly.userNm=response.data.user.userNm,this.passwordPolicy=response.data.passwordPolicy,$scope.input.userAuth=response.data.userAuth,$scope.viewOnly.passwordModifiedDate=owsCommon.convertFromServerDateTimeToClientStrDateTime(response.data.userAuth.passwordModifiedDate),$scope.viewOnly.lastLoginDate=owsCommon.convertFromServerDateTimeToClientStrDateTime(response.data.userAuth.lastLoginDate),$scope.viewOnly.failedLoginAttempts=response.data.userAuth.failedLoginAttempts,$scope.viewOnly.lastFailedLoginDate=owsCommon.convertFromServerDateTimeToClientStrDateTime(response.data.userAuth.lastFailedLoginDate),$scope.viewOnly.lockoutDate=owsCommon.convertFromServerDateTimeToClientStrDateTime(response.data.userAuth.lockoutDate),$scope.input.availableStartDateYmd=owsCommon.convertFromServerDateTimeToClientStrDateTime(response.data.userAuth.availableStartDate,"yyyyMMdd"),$scope.input.availableStartTime=owsCommon.convertFromServerDateTimeToClientStrDateTime(response.data.userAuth.availableStartDate,"HH:mm:ss"),$scope.input.availableEndDateYmd=owsCommon.convertFromServerDateTimeToClientStrDateTime(response.data.userAuth.availableEndDate,"yyyyMMdd"),$scope.input.availableEndTime=owsCommon.convertFromServerDateTimeToClientStrDateTime(response.data.userAuth.availableEndDate,"HH:mm:ss"),$scope.input.passwordReset=response.data.userAuth.passwordReset,$scope.input.lockout=response.data.userAuth.lockout,response.data.passwordRestChangeable&&$("#passwordReset").prop("disabled",!0),"COPY"==$route.current.params.mode&&($scope.viewOnly.lastLoginDate=null,$scope.viewOnly.lastFailedLoginDate=null,$scope.viewOnly.failedLoginAttempts=0,$scope.viewOnly.lockoutDate=null,$scope.viewOnly.passwordModifiedDate=null,directiveControl.show($scope,"passwordChange",!1),directiveControl.show($scope,"register",!1)),void deferred.resolve()):void shared.error.errorOccurred(response)}),owsCommon.setFirstFocus(),deferred.promise};$scope.register=function(){var deferred=$q.defer(),request={};request.input={},request.input=$scope.input,api.liteLoginPwdMgt.registerPreCheck(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"inputform")&&(api.liteLoginPwdMgt.register(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"inputform")&&initScreen()}),deferred.resolve())})},$scope.copy=function(){var deferred=$q.defer(),user=shared.bUserDto.get();$scope.input.userCd=user.userCd;var request={};return request.input={},request.input=$scope.input,api.liteLoginPwdMgt.registerPreCheck(request).then(function(response){return statusInfo.isSuccess(response)?void api.liteLoginPwdMgt.registerCopy(request).then(function(response){return statusInfo.isSuccess(response)?void deferred.resolve():(statusInfo.isSuccessAndShowMessage(response,"inputform"),void deferred.reject())}):(statusInfo.isSuccessAndShowMessage(response,"inputform"),void deferred.reject())}),deferred.promise},$scope.blurTimeField=function($event){if(void 0!==$event.currentTarget.value&&null!=$event.currentTarget.value&&6==$event.currentTarget.value.length&&!isNaN($event.currentTarget.value.length)){var orig=String($event.currentTarget.value),tmp=orig.substring(0,2)+":"+orig.substring(2,4)+":"+orig.substring(4,6);$event.currentTarget.value=tmp,this.formCtl[$event.currentTarget.id+"form"][$event.currentTarget.id].$setViewValue(tmp)}},$scope.putFormCtl=function(formCtl){this.formCtl=formCtl},$scope.showPasswordChangeDialogForMgt=function(){passwordChangeDialog.show(shared.bUserDto.get().userCd,"",VIEW_MODE_PASSWORD_CHANGE_BY_MGT,$scope.$parent.culture.bCulture.cultureCd)},$scope.$on(EVENT_NAME_PASSWORD_CHANGE_BY_MGT,function(){var deferred=$q.defer(),request={};return request.userId=$route.current.params.userId,api.liteLoginPwdMgt.init(request).then(function(response){return statusInfo.isSuccessAndShowMessage(response,"inputform")?($scope.input.userCd=response.data.user.userCd,$scope.viewOnly.userNm=response.data.user.userNm,this.passwordPolicy=response.data.passwordPolicy,$scope.input.userAuth=response.data.userAuth,$scope.viewOnly.passwordModifiedDate=owsCommon.convertFromServerDateTimeToClientStrDateTime(response.data.userAuth.passwordModifiedDate),$scope.viewOnly.lastLoginDate=owsCommon.convertFromServerDateTimeToClientStrDateTime(response.data.userAuth.lastLoginDate),$scope.viewOnly.failedLoginAttempts=response.data.userAuth.failedLoginAttempts,$scope.viewOnly.lastFailedLoginDate=owsCommon.convertFromServerDateTimeToClientStrDateTime(response.data.userAuth.lastFailedLoginDate),$scope.viewOnly.lockoutDate=owsCommon.convertFromServerDateTimeToClientStrDateTime(response.data.userAuth.lockoutDate),$scope.input.passwordReset=response.data.userAuth.passwordReset,void deferred.resolve()):void shared.error.errorOccurred(response)}),owsCommon.setFirstFocus(),deferred.promise}),shared.userRegistered.get()&&initScreen(),"COPY"==$route.current.params.mode&&shared.copyMethods.push("LiteLoginPwdMgt",$scope.copy)}]),angular.module("oneslogiWeb.MenuGrpEdit",[]).factory("menuGrpEditApi",["AngularAPIClient",function(AngularAPIClient){return{parentMenuGrpList:AngularAPIClient.make([["query","GET","resources/common/oyaGrp/keyValueList"]]),screenList:AngularAPIClient.make([["query","GET","resources/common/display/keyValueList"]]),dropdownList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),menuGrpEdit:AngularAPIClient.make([["initNew","GET","resources/master/menuGrpEdit/initNew"],["initUpdate","GET","resources/master/menuGrpEdit/initUpdate"],["inputCheck","POST","resources/master/menuGrpEdit/inputCheck"],["register","POST","resources/master/menuGrpEdit/register"],["update","POST","resources/master/menuGrpEdit/update"]])}}]).controller("MenuGrpEdit",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","menuGrpEditApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.menuGrpEditCols=[{field:"bscreen.screenCd",displayName:"画面"},{field:"vdict.dictNm",displayName:"区分値明細名"},{field:"urlPath",displayName:"デフォルト"},{field:"viewOrder",displayName:"表示順"},{field:"delFlg",displayName:"削除"}];var bodyList;$scope.initScreen=function(){$scope.screenMode=$route.current.params.mode,$scope.gridOptions=owsCommon.mergeEntryGridOptions({data:"menuGrpEdit",columnDefs:"menuGrpEditCols"}),$scope.gridSelectOptions={"bscreen.screenCd":{key:"screenCd",value:"screenNm",listModel:"screenCdList"},targetWindow:{key:"classCd",value:"classNm",listModel:"targetWindowList"},delFlg:{key:"classCd",value:"classNm",listModel:"delFlgList"}},$scope.gridEventOptions={"bscreen.screenCd":{"ng-change":{eventFunction:"screenCdChange(row.rowIndex)"}},"vdict.dictNm":{"ng-change":{eventFunction:"dictNmChange(row.rowIndex)"}},urlPath:{"ng-change":{eventFunction:"urlPathChange(row.rowIndex)"}},targetWindow:{"ng-change":{eventFunction:"targetWindowChange(row.rowIndex)"}},viewOrder:{"ng-change":{eventFunction:"viewOrderChange(row.rowIndex)"}},delFlg:{"ng-change":{eventFunction:"delFlgChange(row.rowIndex)"}}},$scope.initScreenHttp()},$scope.screenCdChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.dictNmChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.urlPathChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.targetWindowChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.viewOrderChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.delFlgChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetDelFlg(),$scope.screenList(),$scope.parentMenuGrpList(),$scope.targetWindowList()]).then(function(response){return $scope.deferredGetInitData()})},$scope.parentMenuGrpList=function(){var deferred=$q.defer(),request={};return owsCommon.getDataCacheable(api.parentMenuGrpList,request).then(function(response){$scope.parentMenuGrpIdList=response.data,deferred.resolve()}),deferred.promise},$scope.screenList=function(){var deferred=$q.defer(),request={};return owsCommon.getDataCacheable(api.screenList,request).then(function(response){$scope.screenCdList=response.data,deferred.resolve()}),deferred.promise},$scope.targetWindowList=function(){var deferred=$q.defer(),request={};return request.classCd="TARGET_WINDOW",owsCommon.getDataCacheable(api.dropdownList,request).then(function(response){$scope.targetWindowList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetDelFlg=function(){var deferred=$q.defer(),request={};return request.classCd="PHYSICAL_DELETE",owsCommon.getDataCacheable(api.dropdownList,request).then(function(response){$scope.delFlgList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer();if($scope.screenMode==SCREEN_MODE.Update||$scope.screenMode==SCREEN_MODE.Copy){var request={};request.menuGrpId=$route.current.params.menuGrpId,api.menuGrpEdit.initUpdate(request).then(function(response){return statusInfo.isSuccessAndShowMessage(response,"inputform")?(updateRowNumber($scope.menuGrpEdit),$scope.head=response.data.head,$scope.menuGrpEdit=response.data.body,bodyList=response.data.body,$scope.blankRow=response.data.blankRow,$scope.screenMode==SCREEN_MODE.Update&&directiveControl.editable($scope,"menuGrpCd",!1),owsCommon.setFirstFocus("inputform"),void deferred.resolve()):(history.back(),void deferred.reject())})}else api.menuGrpEdit.initNew().then(function(response){return statusInfo.isSuccessAndShowMessage(response,"inputform")?($scope.head=response.data.head,$scope.menuGrpEdit=response.data.body,bodyList=response.data.body,$scope.blankRow=response.data.blankRow,owsCommon.setFirstFocus(),void deferred.resolve()):void deferred.reject()});return deferred.promise},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.addRow=function(){$scope.blankRow.delFlg=owsCommon.getDefaultValue($scope.delFlgList),$scope.screenMode==SCREEN_MODE.Update?($scope.menuGrpEdit.push(angular.copy($scope.blankRow)),updateRowNumber($scope.menuGrpEdit)):($scope.menuGrpEdit.push(angular.copy($scope.blankRow)),updateRowNumber($scope.menuGrpEdit)),gridDirectiveControl.editable($scope.gridOptions,"delFlg",!1,$scope.menuGrpEdit.length-1)},$scope.removeRow=function(){if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("deleteRowErrNotSelect");if(!($scope.gridOptions.gridApi.selection.getSelectedRows().length>1)||owsCommon.viewConfirm("deleteRowMultipleConfirmation")){if($scope.screenMode!=SCREEN_MODE.Copy){var i=0;if(angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){if($scope.menuGrpEdit.indexOf(row)>-1&&null!=row.menuId)return void(i+=1)}),i>0)return void alertMessage.setErrorMessageByCode("alreadyRegisteredCannotDeleteError")}var flg=!1;1==$scope.gridOptions.gridApi.selection.getSelectedRows().length&&((""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].urlPath&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].urlPath||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].viewOrder&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].viewOrder||$scope.gridOptions.gridApi.selection.getSelectedRows()[0].delFlg!=owsCommon.getDefaultValue($scope.delFlgList))&&(flg=!0),""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict&&""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict.dictNm&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict.dictNm&&(flg=!0),""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bscreen&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bscreen&&""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bscreen.screenCd&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bscreen.screenCd&&(flg=!0)),flg&&!owsCommon.viewConfirm("deleteRowAlreadyInputConfirmation")||(angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){$scope.menuGrpEdit.indexOf(row)>-1&&$scope.menuGrpEdit.splice($scope.menuGrpEdit.indexOf(row),1)}),updateRowNumber($scope.menuGrpEdit),owsCommon.toggleSelectAll($scope.gridOptions,!1))}},$scope.register=function(){optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions);var listBody=[],emptyBody=[];gridDirectiveControl.validity($scope.gridOptions,!1,gridDirectiveControl.blankRows($scope.gridOptions));for(var row=0;row<$scope.menuGrpEdit.length;row++)gridDirectiveControl.isBlankRow($scope.gridOptions,row)?emptyBody.push($scope.menuGrpEdit[row]):listBody.push($scope.menuGrpEdit[row]);var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.inputform)]);promiseAll.then(function(){owsCommon.syncExec(function(){$scope.inputform.$invalid;gridDirectiveControl.validity($scope.gridOptions,!0),angular.forEach(emptyBody,function(row){$scope.menuGrpEdit.splice($scope.menuGrpEdit.indexOf(row),1)}),updateRowNumber($scope.menuGrpEdit);for(var j=0,rowIndex=new Array,row=(new Array,0);row<$scope.menuGrpEdit.length;row++)for(var viewOrder=$scope.menuGrpEdit[row].viewOrder,i=row+1;i<$scope.menuGrpEdit.length;i++)$scope.menuGrpEdit[i].viewOrder==viewOrder&&(rowIndex[j]=i,j++);if(j>0){var messageCd="viewOrderDuplicateError";return gridOptionMessageControl.show($scope.gridOptions,"viewOrder",$filter("owfMessage")(messageCd),rowIndex),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,rowIndex[0]),void directiveControl.firstErrorOnFocus("inputform")}var checkFunc,execFunc,successFunc;$scope.screenMode==SCREEN_MODE.Update?(checkFunc=api.menuGrpEdit.inputCheck,execFunc=api.menuGrpEdit.update,successFunc=function(response){owsCommon.viewInfoAndHistoryBack(response.status.messageCode,response.status.messageReplaceValue)}):(checkFunc=api.menuGrpEdit.inputCheck,execFunc=api.menuGrpEdit.register,successFunc=function(){$scope.screenMode==SCREEN_MODE.Register&&$scope.initScreenHttp()});var firstErrIndex,isBln=!1,isBln1=!1,request={};request.data={},request.data.head=$scope.head,bodyList=listBody,request.data.body=bodyList,$scope.screenMode==SCREEN_MODE.Copy&&(request.data.head.menuGrpId=null),checkFunc(request).then(function(checkResponse){if(null!=checkResponse.status.listStatus)for(var i=0;i<checkResponse.status.listStatus.length;i++)6==checkResponse.status.listStatus[i].status.statusCode&&(optionMessageControl.show($scope,"menuGrpCd",$filter("owfMessage")(checkResponse.status.listStatus[i].status.messageCode,checkResponse.status.listStatus[i].status.messageReplaceValue)),isBln=!0),7==checkResponse.status.listStatus[i].status.statusCode&&(optionMessageControl.show($scope,"dictNm",$filter("owfMessage")(checkResponse.status.listStatus[i].status.messageCode,checkResponse.status.listStatus[i].status.messageReplaceValue)),isBln=!0),9==checkResponse.status.listStatus[i].status.statusCode&&(optionMessageControl.show($scope,"viewOrder",$filter("owfMessage")(checkResponse.status.listStatus[i].status.messageCode,checkResponse.status.listStatus[i].status.messageReplaceValue)),isBln=!0),2==checkResponse.status.listStatus[i].status.statusCode&&(gridOptionMessageControl.show($scope.gridOptions,"vdict.dictNm",$filter("owfMessage")(checkResponse.status.listStatus[i].status.messageCode,checkResponse.status.listStatus[i].status.messageReplaceValue),checkResponse.status.listStatus[i].status.rowIndex),isBln=!0,isBln1=!0,firstErrIndex||(firstErrIndex=checkResponse.status.listStatus[i].status.rowIndex)),8==checkResponse.status.listStatus[i].status.statusCode&&(gridOptionMessageControl.show($scope.gridOptions,"bscreen.screenCd",$filter("owfMessage")(checkResponse.status.listStatus[i].status.messageCode,checkResponse.status.listStatus[i].status.messageReplaceValue),checkResponse.status.listStatus[i].status.rowIndex),isBln=!0,isBln1=!0,firstErrIndex||(firstErrIndex=checkResponse.status.listStatus[i].status.rowIndex)),10==checkResponse.status.listStatus[i].status.statusCode&&(gridOptionMessageControl.show($scope.gridOptions,"bscreen.screenCd",$filter("owfMessage")(checkResponse.status.listStatus[i].status.messageCode,checkResponse.status.listStatus[i].status.messageReplaceValue),checkResponse.status.listStatus[i].status.rowIndex),isBln=!0,isBln1=!0,firstErrIndex||(firstErrIndex=checkResponse.status.listStatus[i].status.rowIndex));return 1==isBln?void(isBln1&&(gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,firstErrIndex),directiveControl.firstErrorOnFocus("inputform"))):void(statusInfo.isSuccessAndShowMessage(checkResponse,"inputform")&&execFunc(request).then(function(execResponse){(execFunc!=api.menuGrpEdit.register||statusInfo.isSuccessAndShowMessage(execResponse,"inputform"))&&(successFunc(execResponse),owsCommon.toggleSelectAll($scope.gridOptions,!1))}))})})},function(){owsCommon.syncExec(function(){gridDirectiveControl.validity($scope.gridOptions,!0)})})};var updateRowNumber=function(body){var i=1;angular.forEach(body,function(row){row.lineNo=i++})};$scope.initScreen()}]),angular.module("oneslogiWeb.MenuGrpList",[]).factory("menuGrpListApi",["AngularAPIClient",function(AngularAPIClient){return{menuGrpList:AngularAPIClient.make([["init","GET","resources/master/menuGrpList/init"],["search","GET","resources/master/menuGrpList/search"],["checkDelete","POST","resources/master/menuGrpList/checkDelete"],["delete","POST","resources/master/menuGrpList/delete"]])}}]).controller("MenuGrpList",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","menuGrpListApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.menuGrpListCols=[{field:"menuGrpCd",displayName:"メニューグループCD"},{field:"vdict.dictNm",displayName:"メニューグループ名"},{field:"bmenuGrpSelf.vdict.dictNm",displayName:"親メニューグループ"},{field:"visibleType",displayName:"表示種別"},{field:"viewOrder",displayName:"表示順"}],$scope.initScreen=function(){$scope.screenMode=$route.current.params.mode,$scope.isopen=!0,$scope.pagingOptions=owsCommon.getDefaultPagingOptions(),$scope.pagingOptions.setPageData=function(){$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.gridOptions=owsCommon.mergePagingMultiSelectGridOptions({data:"menuGrpList",columnDefs:"menuGrpListCols",pagingOptions:$scope.pagingOptions}),$scope.initScreenHttp()},$scope.initScreenHttp=function(response){$q.all([]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetInitData=function(){var deferred=$q.defer();return api.menuGrpList.init().then(function(response){$scope.head=response.data.head,$scope.menuGrpList=response.data.body,$scope.paging=response.paging,owsHistory.hasState()&&($scope.head=owsHistory.popState(),$scope.search()),owsCommon.setFirstFocus(),deferred.resolve()}),deferred.promise},$scope.search=function(){owsCommon.clearPagingOptions($scope.gridOptions),$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.getPagedDataAsync=function(pageSize,page){var request={};request.data={},request.data.head=$scope.head,owsCommon.setPagingData(request,$scope.paging,pageSize,page),api.menuGrpList.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchform"),$scope.setPagingData(response,page,pageSize)})},$scope.setPagingData=function(response,page,pageSize){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.menuGrpList=response.data.body,$scope.gridOptions.totalItems=response.paging.allRecordCount,owsHistory.replaceState($scope.head)},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.gridDblClick=function(row){owsCommon.syncButtonExec("update",row)},$scope.deletedata=function(){var listBody=[];if(0==$scope.menuGrpList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");
if(!($scope.gridOptions.gridApi.selection.getSelectedRows().length>1)||owsCommon.viewConfirm("confirmDeleteRow")){for(var row=0;row<$scope.gridOptions.gridApi.selection.getSelectedRows().length;row++)listBody.push($scope.gridOptions.gridApi.selection.getSelectedRows()[row]);var request={};request.data={},request.data.body=listBody,api.menuGrpList.checkDelete(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&api.menuGrpList.delete(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&$scope.search()})})}},$scope.copy=function(){return 0==$scope.menuGrpList.length?void alertMessage.setErrorMessageByCode("detailLineNotDisplayError"):0==$scope.gridOptions.gridApi.selection.getSelectedRows().length?void alertMessage.setErrorMessageByCode("lineNotSelectError"):$scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):void $location.path("base/master/MenuGrpEdit").search({}).search("mode",SCREEN_MODE.Copy).search("menuGrpId",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].menuGrpId)},$scope.register=function(){$location.path("base/master/MenuGrpEdit").search({}).search("mode",SCREEN_MODE.Register)},$scope.initScreen(),$scope.update=function(){return 0==$scope.menuGrpList.length?void alertMessage.setErrorMessageByCode("detailLineNotDisplayError"):0==$scope.gridOptions.gridApi.selection.getSelectedRows().length?void alertMessage.setErrorMessageByCode("lineNotSelectError"):$scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):void $location.path("base/master/MenuGrpEdit").search({}).search("mode",SCREEN_MODE.Update).search("menuGrpId",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].menuGrpId)}}]),angular.module("oneslogiWeb.MessageMaster",[]).factory("messageMasterApi",["AngularAPIClient",function(AngularAPIClient){return{keyValueList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),cultureCdList:AngularAPIClient.make([["query","GET","resources/common/cultureCD/cultureList"]]),messageMaster:AngularAPIClient.make([["init","GET","resources/base/master/messageMaster/init"],["search","GET","resources/base/master/messageMaster/search"],["inputCheck","POST","resources/base/master/messageMaster/inputCheck"],["register","POST","resources/base/master/messageMaster/register"]])}}]).controller("MessageMaster",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","messageMasterApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.MessageMasterCols=[{field:"messageCd",displayName:"メッセージCD"},{field:"messageNm",displayName:"メッセージ"},{field:"messageAbbr",displayName:"メッセージ略称"},{field:"messageType",displayName:"属性"},{field:"systemType",displayName:"システム種別"},{field:"cultureCd",displayName:"カルチャ"},{field:"delFlg",displayName:"削除"}],$scope.initScreen=function(){$scope.isopen=!0,userInfo.centerList,$scope.pagingOptions=owsCommon.getDefaultPagingOptions(),$scope.pagingOptions.setPageData=function(){$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.gridOptions=owsCommon.mergePagingMultiSelectGridOptions({data:"body",columnDefs:"MessageMasterCols",pagingOptions:$scope.pagingOptions}),$scope.gridSelectOptions={messageType:{key:"classCd",value:"classNm",listModel:"messageTypeList"},systemType:{key:"classCd",value:"classNm",listModel:"systemTypeList"},cultureCd:{key:"cultureCd",value:"cultureNm",listModel:"cultureCdList"},delFlg:{key:"classCd",value:"classNm",listModel:"delFlgList"}},$scope.gridEventOptions={messageCd:{"ng-change":{eventFunction:"messageCdChange(row.rowIndex)"}},messageNm:{"ng-change":{eventFunction:"messageNmChange(row.rowIndex)"}},messageAbbr:{"ng-change":{eventFunction:"messageAbbrChange(row.rowIndex)"}},messageType:{"ng-change":{eventFunction:"messageTypeChange(row.rowIndex)"}},systemType:{"ng-change":{eventFunction:"systemTypeChange(row.rowIndex)"}},cultureCd:{"ng-change":{eventFunction:"cultureCdChange(row.rowIndex)"}},delFlg:{"ng-change":{eventFunction:"delFlgChange(row.rowIndex)"}}},statusInfo.mappingGridErrorMessage($scope.gridOptions,"messageCd",7,5),$scope.initScreenHttp()},$scope.messageCdChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.messageNmChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.messageAbbrChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.messageTypeChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.systemTypeChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.cultureCdChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.delFlgChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetMessageTypeList(),$scope.deferredGetSystemTypeList(),$scope.deferredGetCultureCdList(),$scope.deferredGetDelFlgList()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetMessageTypeList=function(){var deferred=$q.defer(),request={};return request.classCd="MESSAGE_TYPE",api.keyValueList.query(request).then(function(response){$scope.messageTypeList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetSystemTypeList=function(){var deferred=$q.defer(),request={};return request.classCd="SYSTEM_TYPE",api.keyValueList.query(request).then(function(response){$scope.systemTypeList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetCultureCdList=function(){var deferred=$q.defer();return api.cultureCdList.query().then(function(response){$scope.cultureCdList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetDelFlgList=function(){var deferred=$q.defer(),request={};return request.classCd="PHYSICAL_DELETE",api.keyValueList.query(request).then(function(response){$scope.delFlgList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer(),request={};return request.data={},request.data.head=$scope.head,request.data.body=$scope.body,request.paging=$scope.paging,api.messageMaster.init(request).then(function(response){return statusInfo.isSuccessAndShowMessage(response,"searchinputform")?($scope.head=response.data.head,$scope.body=response.data.body,$scope.blankRow=response.data.blankRow,$scope.paging=response.paging,owsCommon.setFirstFocus(),void deferred.resolve()):void deferred.reject()}),deferred.promise},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.addRow=function(){$scope.body.push(angular.copy($scope.blankRow)),updateRowNumber($scope.body)},$scope.removeRow=function(){if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("deleteRowErrNotSelect");if(!($scope.gridOptions.gridApi.selection.getSelectedRows().length>1)||owsCommon.viewConfirm("deleteRowMultipleConfirmation")){var i=0;return angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){if($scope.body.indexOf(row)>-1&&null!=row.messageId)return void(i+=1)}),i>0?void alertMessage.setErrorMessageByCode("registeredLineCannotDeleteError"):void(1==$scope.gridOptions.gridApi.selection.getSelectedRows().length&&(""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].messageCd&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].messageCd||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].messageNm&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].messageNm||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].messageAbbr&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].messageAbbr||$scope.gridOptions.gridApi.selection.getSelectedRows()[0].messageType!=owsCommon.getDefaultValue($scope.messageTypeList)||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].systemType&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].systemType||$scope.gridOptions.gridApi.selection.getSelectedRows()[0].cultureCd!=owsCommon.getDefaultValue($scope.cultureCdList)||$scope.gridOptions.gridApi.selection.getSelectedRows()[0].delFlg!=owsCommon.getDefaultValue($scope.delFlgList))&&!owsCommon.viewConfirm("deleteRowAlreadyInputConfirmation")||(angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){$scope.body.indexOf(row)>-1&&$scope.body.splice($scope.body.indexOf(row),1)}),updateRowNumber($scope.body),owsCommon.toggleSelectAll($scope.gridOptions,!1)))}},$scope.search=function(){owsCommon.clearPagingOptions($scope.gridOptions),$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.getPagedDataAsync=function(pageSize,page){var request={};request.data={},request.data.head=$scope.head,owsCommon.setPagingData(request,$scope.paging,pageSize,page),api.messageMaster.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform"),$scope.setSearchData(response)})},$scope.setSearchData=function(response){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.body=response.data.body;for(var row=0;row<$scope.body.length;row++)null!=$scope.body[row].messageCd&&gridDirectiveControl.editable($scope.gridOptions,"messageCd",!1,row);$scope.gridOptions.totalItems=response.paging.allRecordCount,owsHistory.replaceState($scope.head)},$scope.register=function(){optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions);var listBody=[],emptyBody=[];if(0==$scope.body.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");gridDirectiveControl.validity($scope.gridOptions,!1,gridDirectiveControl.blankRows($scope.gridOptions));for(var allBody=$scope.gridOptions.gridApi.grid.rows,row=0;row<$scope.body.length;row++)gridDirectiveControl.isBlankRow($scope.gridOptions,row)?emptyBody.push($scope.body[row]):row<=allBody.length&&0==$scope.gridOptions.getSelection(allBody[row])?emptyBody.push($scope.body[row]):listBody.push($scope.body[row]);var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.searchinputform)]);promiseAll.then(function(){owsCommon.syncExec(function(){$scope.searchinputform.$invalid;if(gridDirectiveControl.validity($scope.gridOptions,!0),0==listBody.length)return void alertMessage.setErrorMessageByCode("noDetailsError");angular.forEach(emptyBody,function(row){$scope.body.splice($scope.body.indexOf(row),1)}),updateRowNumber($scope.body);for(var j=0,rowIndex=new Array,row=(new Array,0);row<$scope.body.length;row++)for(var uniqueKey=$scope.body[row].messageCd+"\t"+$scope.body[row].cultureCd,i=row+1;i<$scope.body.length;i++)$scope.body[i].messageCd+"\t"+$scope.body[i].cultureCd==uniqueKey&&(rowIndex[j]=i,j++);if(j>0){var messageCd="messageCdDuplicateError";return gridOptionMessageControl.show($scope.gridOptions,"messageCd",$filter("owfMessage")(messageCd),rowIndex),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,rowIndex[0]),void directiveControl.firstErrorOnFocus("searchinputform")}var request={};request.data={},request.data.head=$scope.head,request.data.body=listBody,api.messageMaster.inputCheck(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&api.messageMaster.register(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&($scope.body=[],owsCommon.toggleSelectAll($scope.gridOptions,!1))})})})},function(){owsCommon.syncExec(function(){gridDirectiveControl.validity($scope.gridOptions,!0)})})};var updateRowNumber=function(body){var i=1;angular.forEach(body,function(row){row.lineNo=i++})};$scope.initScreen()}]),angular.module("oneslogiWeb.BaseMaster",["oneslogiWeb.InfoMaster","oneslogiWeb.RoleList","oneslogiWeb.ClassList","oneslogiWeb.ClassEdit","oneslogiWeb.ClassGrpEdit","oneslogiWeb.ClassGrpDtlEdit","oneslogiWeb.MenuGrpList","oneslogiWeb.MenuGrpEdit","oneslogiWeb.RoleGrpList","oneslogiWeb.RoleGrpEdit","oneslogiWeb.ReportLayoutList","oneslogiWeb.ReportLayoutEdit","oneslogiWeb.ReportLayoutCopy","oneslogiWeb.ScreenRoleEdit","oneslogiWeb.ScreenItemRoleEdit","oneslogiWeb.ScreenColRoleEdit","oneslogiWeb.DictMaster","oneslogiWeb.DictCultureMaster","oneslogiWeb.UserList","oneslogiWeb.ScreenList","oneslogiWeb.ScreenItemEdit","oneslogiWeb.ScreenColEdit","oneslogiWeb.MessageMaster","oneslogiWeb.LiteLoginPwdMgt","oneslogiWeb.UserMgt","oneslogiWeb.SystemEdit","oneslogiWeb.PrinterGroupList","oneslogiWeb.PrinterList","oneslogiWeb.PrinterAttributeList","oneslogiWeb.PrintServiceList","oneslogiWeb.PrintServiceEdit","oneslogiWeb.AutoPrintBulkPrinterChangeList","oneslogiWeb.AutoPrintBulkPrinterChangeEdit","oneslogiWeb.ScreenListMasterCopy","oneslogiWeb.RoleListCopy","oneslogiWeb.PropertyMaster","oneslogiWeb.ReportMaster"]),angular.module("oneslogiWeb.PrinterAttributeList",[]).factory("printerAttributeListApi",["AngularAPIClient",function(AngularAPIClient){return{keyValueList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),printerGroup:AngularAPIClient.make([["selectAll","GET","resources/common/printerGroup/selectAll"]]),printerAttributeList:AngularAPIClient.make([["init","GET","resources/base/master/printerAttributeList/init"],["search","POST","resources/base/master/printerAttributeList/search"],["update","POST","resources/base/master/printerAttributeList/update"],["inputCheck","POST","resources/base/master/printerAttributeList/inputCheck"],["remove","POST","resources/base/master/printerAttributeList/remove"]])}}]).controller("PrinterAttributeList",["$scope","$route","$filter","$location","$q","$window","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","printerAttributeListApi",function($scope,$route,$filter,$location,$q,$window,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.PrinterAttributeListCols=[{field:"printerNm",displayName:"プリンタ名"},{field:"visible",displayName:"表示可否"},{field:"printerGroupId",displayName:"プリンタグループ"}],$scope.initScreen=function(){$scope.isopen=!0,$scope.pagingOptions=owsCommon.getDefaultPagingOptions(),$scope.pagingOptions.setPageData=function(){$scope.getSearchData($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.gridOptions=owsCommon.mergePagingMultiSelectGridOptions({data:"printerAttributeList",columnDefs:"PrinterAttributeListCols",pagingOptions:$scope.pagingOptions}),$scope.gridSelectOptions={visible:{key:"classCd",value:"classNm",listModel:"visibleList"}},$scope.gridEventOptions={visible:{"ng-change":{eventFunction:"setSelectionOn(row.rowIndex)"}}},$scope.initScreenHttp()},$scope.setSelectionOn=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetClass("VISIBLE","visibleList"),$scope.deferredGetPrinterGroup()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetClass=function(classCd,listName){var deferred=$q.defer(),request={};return request.classCd=classCd,api.keyValueList.query(request).then(function(response){$scope[listName]=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetPrinterGroup=function(){var deferred=$q.defer(),request={};return api.printerGroup.selectAll(request).then(function(response){$scope.printerGroupList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer(),request={};return request.data={},request.data.head=$scope.head,request.data.body=$scope.printerAttributeList,api.printerAttributeList.init(request).then(function(response){return statusInfo.isSuccessAndShowMessage(response,"searchform")?($scope.head=response.data.head,$scope.printerAttributeList=response.data.body,$scope.blankRow=response.data.blankRow,$scope.paging=response.paging,owsHistory.hasState()&&($scope.head=owsHistory.popState(),$scope.search()),owsCommon.setFirstFocus(),void deferred.resolve()):void deferred.reject()}),deferred.promise},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.search=function(){owsCommon.clearPagingOptions($scope.gridOptions),$scope.getSearchData($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.getSearchData=function(pageSize,page){var request={};request.data={},request.data.head=$scope.head,owsCommon.setPagingData(request,$scope.paging,pageSize,page),api.printerAttributeList.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchform"),$scope.setSearchData(response)})},$scope.setSearchData=function(response){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.printerAttributeList=response.data.body,$scope.gridOptions.totalItems=response.paging.allRecordCount,owsHistory.replaceState($scope.head)},$scope.register=function(){if(optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions),0==$scope.printerAttributeList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");gridDirectiveControl.validity($scope.gridOptions,!1,gridDirectiveControl.blankRows($scope.gridOptions));for(var listBody=[],emptyBody=[],allBody=$scope.gridOptions.gridApi.grid.rows,row=0;row<$scope.printerAttributeList.length;row++)gridDirectiveControl.isBlankRow($scope.gridOptions,row)?emptyBody.push($scope.printerAttributeList[row]):row<=allBody.length&&0==$scope.gridOptions.getSelection(allBody[row])?emptyBody.push($scope.printerAttributeList[row]):listBody.push($scope.printerAttributeList[row]);var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.searchform)]);promiseAll.then(function(){owsCommon.syncExec(function(){$scope.searchform.$invalid;if(gridDirectiveControl.validity($scope.gridOptions,!0),0==listBody.length)return void alertMessage.setErrorMessageByCode("noDetailsError");angular.forEach(emptyBody,function(row){$scope.printerAttributeList.splice($scope.printerAttributeList.indexOf(row),1)});var request={};request.data={},request.data.head=$scope.head,request.data.body=listBody,api.printerAttributeList.inputCheck(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchform")&&api.printerAttributeList.update(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchform")&&($scope.printerAttributeList=[],owsCommon.toggleSelectAll($scope.gridOptions,!1))})})})},function(){owsCommon.syncExec(function(){gridDirectiveControl.validity($scope.gridOptions,!0)})})},$scope.remove=function(){if(optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions),0==$scope.printerAttributeList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");gridDirectiveControl.validity($scope.gridOptions,!1,gridDirectiveControl.blankRows($scope.gridOptions));for(var listBody=[],emptyBody=[],allBody=$scope.gridOptions.gridApi.grid.rows,row=0;row<$scope.printerAttributeList.length;row++)gridDirectiveControl.isBlankRow($scope.gridOptions,row)?emptyBody.push($scope.printerAttributeList[row]):row<=allBody.length&&0==$scope.gridOptions.getSelection(allBody[row])?emptyBody.push($scope.printerAttributeList[row]):listBody.push($scope.printerAttributeList[row]);if(owsCommon.viewConfirm("dataDeleteConfirmation")){var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.searchform)]);promiseAll.then(function(){owsCommon.syncExec(function(){$scope.searchform.$invalid;gridDirectiveControl.validity($scope.gridOptions,!0),angular.forEach(emptyBody,function(row){$scope.printerAttributeList.splice($scope.printerAttributeList.indexOf(row),1)});var removeList=[];for(var row in listBody)null!=listBody[row].printerId&&""!=listBody[row].printerId&&removeList.push(listBody[row]);if(0!=removeList.length){var request={};request.data={},request.data.head=$scope.head,request.data.body=removeList,api.printerAttributeList.remove(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchform")&&($scope.printerAttributeList=[],owsCommon.toggleSelectAll($scope.gridOptions,!1))})}})},function(){owsCommon.syncExec(function(){gridDirectiveControl.validity($scope.gridOptions,!0)})})}},$scope.initScreen()}]),angular.module("oneslogiWeb.PrinterGroupList",[]).factory("printerGroupListApi",["AngularAPIClient",function(AngularAPIClient){return{printerGroupList:AngularAPIClient.make([["init","GET","resources/base/master/printerGroupList/init"],["search","POST","resources/base/master/printerGroupList/search"],["inputCheck","POST","resources/base/master/printerGroupList/inputCheck"],["register","POST","resources/base/master/printerGroupList/register"],["remove","POST","resources/base/master/printerGroupList/remove"]])}}]).controller("PrinterGroupList",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","printerGroupListApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.PrinterGroupListCols=[{field:"printerGroupNm",displayName:"プリンタグループ名称"},{field:"attribute1",displayName:"属性1"},{field:"attribute2",displayName:"属性2"},{field:"attribute3",displayName:"属性3"},{field:"attribute4",displayName:"属性4"},{field:"attribute5",displayName:"属性5"}],$scope.initScreen=function(){$scope.isopen=!0,userInfo.centerList,$scope.gridOptions=owsCommon.mergeEntryGridOptions({data:"printerGroupList",columnDefs:"PrinterGroupListCols"}),$scope.gridEventOptions={printerGroupNm:{"ng-change":{eventFunction:"setSelectionOn(row.rowIndex)"}},attribute1:{"ng-change":{eventFunction:"setSelectionOn(row.rowIndex)"}},attribute2:{"ng-change":{eventFunction:"setSelectionOn(row.rowIndex)"}},attribute3:{"ng-change":{eventFunction:"setSelectionOn(row.rowIndex)"}},attribute4:{"ng-change":{eventFunction:"setSelectionOn(row.rowIndex)"}},attribute5:{"ng-change":{eventFunction:"setSelectionOn(row.rowIndex)"}}},$scope.initScreenHttp()},$scope.setSelectionOn=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.initScreenHttp=function(){return $scope.deferredGetInitData()},$scope.deferredGetInitData=function(){var deferred=$q.defer(),request={};return request.data={},request.data.head=$scope.head,request.data.body=$scope.printerGroupList,api.printerGroupList.init(request).then(function(response){return statusInfo.isSuccessAndShowMessage(response,"searchform")?($scope.head=response.data.head,$scope.printerGroupList=response.data.body,$scope.blankRow=response.data.blankRow,owsCommon.setFirstFocus(),void deferred.resolve()):void deferred.reject()}),deferred.promise},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.addRow=function(){$scope.printerGroupList.push(angular.copy($scope.blankRow)),updateRowNumber($scope.printerGroupList)},$scope.removeRow=function(){var registeredCt=0;if(angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){if($scope.printerGroupList.indexOf(row)>-1&&null!=row.printerGroupId)return void(registeredCt+=1)}),registeredCt>0)return void alertMessage.setErrorMessageByCode("registeredLineCannotDeleteError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("deleteRowErrNotSelect");for(var noBlankCt=0,row=0;row<$scope.gridOptions.gridApi.selection.getSelectedRows().length;row++)gridDirectiveControl.isBlankRowByEntity($scope.gridOptions,$scope.gridOptions.gridApi.selection.getSelectedRows()[row])||noBlankCt++;noBlankCt>0&&!owsCommon.viewConfirm("deleteRowAlreadyInputConfirmation")||$scope.gridOptions.gridApi.selection.getSelectedRows().length>1&&!owsCommon.viewConfirm("deleteRowMultipleConfirmation")||(angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){$scope.printerGroupList.indexOf(row)>-1&&$scope.printerGroupList.splice($scope.printerGroupList.indexOf(row),1)}),updateRowNumber($scope.printerGroupList),owsCommon.toggleSelectAll($scope.gridOptions,!1))},$scope.search=function(){$scope.getSearchData()},$scope.getSearchData=function(){var request={};request.data={},request.data.head=$scope.head,api.printerGroupList.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchform"),$scope.setSearchData(response)})},$scope.setSearchData=function(response){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.printerGroupList=response.data.body;for(var row=0;row<$scope.printerGroupList.length;row++)null!=$scope.printerGroupList[row].printerGroupId&&gridDirectiveControl.editable($scope.gridOptions,"printerGroupNm",!1,row);owsHistory.replaceState($scope.head)},$scope.register=function(){if(optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions),0==$scope.printerGroupList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");gridDirectiveControl.validity($scope.gridOptions,!1,gridDirectiveControl.blankRows($scope.gridOptions));for(var listBody=[],emptyBody=[],allBody=$scope.gridOptions.gridApi.grid.rows,row=0;row<$scope.printerGroupList.length;row++)gridDirectiveControl.isBlankRow($scope.gridOptions,row)?emptyBody.push($scope.printerGroupList[row]):row<=allBody.length&&0==$scope.gridOptions.getSelection(allBody[row])?emptyBody.push($scope.printerGroupList[row]):listBody.push($scope.printerGroupList[row]);var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.searchinputform)]);promiseAll.then(function(){owsCommon.syncExec(function(){$scope.searchinputform.$invalid;if(gridDirectiveControl.validity($scope.gridOptions,!0),0==listBody.length)return void alertMessage.setErrorMessageByCode("noDetailsError");angular.forEach(emptyBody,function(row){$scope.printerGroupList.splice($scope.printerGroupList.indexOf(row),1)}),updateRowNumber($scope.printerGroupList);for(var j=0,rowIndex=new Array,row=(new Array,0);row<$scope.printerGroupList.length;row++)for(var printerGroupNm=$scope.printerGroupList[row].printerGroupNm,i=row+1;i<$scope.printerGroupList.length;i++)$scope.printerGroupList[i].printerGroupNm==printerGroupNm&&(rowIndex[j]=i,j++);if(j>0){var messageCd="printerGroupNmDuplicateError";return gridOptionMessageControl.show($scope.gridOptions,"printerGroupNm",$filter("owfMessage")(messageCd),rowIndex),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,rowIndex[0]),void directiveControl.firstErrorOnFocus("searchinputform")}var request={};request.data={},request.data.head=$scope.head,request.data.body=listBody,api.printerGroupList.inputCheck(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&api.printerGroupList.register(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&($scope.printerGroupList=[],owsCommon.toggleSelectAll($scope.gridOptions,!1))})})})},function(){owsCommon.syncExec(function(){gridDirectiveControl.validity($scope.gridOptions,!0)})})},$scope.remove=function(){if(optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions),0==$scope.printerGroupList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");gridDirectiveControl.validity($scope.gridOptions,!1,gridDirectiveControl.blankRows($scope.gridOptions));for(var listBody=[],emptyBody=[],allBody=$scope.gridOptions.gridApi.grid.rows,row=0;row<$scope.printerGroupList.length;row++)gridDirectiveControl.isBlankRow($scope.gridOptions,row)?emptyBody.push($scope.printerGroupList[row]):row<=allBody.length&&0==$scope.gridOptions.getSelection(allBody[row])?emptyBody.push($scope.printerGroupList[row]):listBody.push($scope.printerGroupList[row]);if(owsCommon.viewConfirm("dataDeleteConfirmation")){var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.searchinputform)]);promiseAll.then(function(){owsCommon.syncExec(function(){$scope.searchinputform.$invalid;gridDirectiveControl.validity($scope.gridOptions,!0),angular.forEach(emptyBody,function(row){$scope.printerGroupList.splice($scope.printerGroupList.indexOf(row),1)}),updateRowNumber($scope.printerGroupList);var removeList=[];for(var row in listBody)null!=listBody[row].printerGroupId&&""!=listBody[row].printerGroupId&&removeList.push(listBody[row]);if(0!=removeList.length){var request={};request.data={},request.data.head=$scope.head,request.data.body=removeList,api.printerGroupList.remove(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&($scope.printerGroupList=[],owsCommon.toggleSelectAll($scope.gridOptions,!1))})}})},function(){owsCommon.syncExec(function(){gridDirectiveControl.validity($scope.gridOptions,!0)})})}};var updateRowNumber=function(printerGroupList){var i=1;angular.forEach(printerGroupList,function(row){row.lineNo=i++})};$scope.initScreen()}]),angular.module("oneslogiWeb.PrinterList",[]).factory("printerListApi",["AngularAPIClient",function(AngularAPIClient){return{keyValueList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),printerGroup:AngularAPIClient.make([["selectAll","GET","resources/common/printerGroup/selectAll"]]),printerList:AngularAPIClient.make([["init","GET","resources/base/master/printerList/init"],["search","POST","resources/base/master/printerList/search"],["update","POST","resources/base/master/printerList/update"],["inputCheck","POST","resources/base/master/printerList/inputCheck"],["remove","POST","resources/base/master/printerList/remove"]])}}]).controller("PrinterList",["$scope","$route","$filter","$location","$q","$window","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","printerListApi",function($scope,$route,$filter,$location,$q,$window,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.PrinterListCols=[{field:"printerNm",displayName:"プリンタ名"
},{field:"visible",displayName:"表示可否"},{field:"printerGroupId",displayName:"プリンタグループ"}],$scope.initScreen=function(){$scope.isopen=!0,$scope.pagingOptions=owsCommon.getDefaultPagingOptions(),$scope.pagingOptions.setPageData=function(){$scope.getSearchData($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.gridOptions=owsCommon.mergePagingMultiSelectGridOptions({data:"printerList",columnDefs:"PrinterListCols",pagingOptions:$scope.pagingOptions}),$scope.gridSelectOptions={visible:{key:"classCd",value:"classNm",listModel:"visibleList"},printerGroupId:{key:"printerGroupId",value:"printerGroupNm",listModel:"printerGroupList"}},$scope.gridEventOptions={visible:{"ng-change":{eventFunction:"setSelectionOn(row.rowIndex)"}},printerGroupId:{"ng-change":{eventFunction:"setSelectionOn(row.rowIndex)"}}},$scope.initScreenHttp()},$scope.setSelectionOn=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetClass("VISIBLE","visibleList"),$scope.deferredGetPrinterGroup()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetClass=function(classCd,listName){var deferred=$q.defer(),request={};return request.classCd=classCd,api.keyValueList.query(request).then(function(response){$scope[listName]=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetPrinterGroup=function(){var deferred=$q.defer(),request={};return api.printerGroup.selectAll(request).then(function(response){$scope.printerGroupList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer(),request={};return request.data={},request.data.head=$scope.head,request.data.body=$scope.printerList,api.printerList.init(request).then(function(response){return statusInfo.isSuccessAndShowMessage(response,"searchform")?($scope.head=response.data.head,$scope.printerList=response.data.body,$scope.blankRow=response.data.blankRow,$scope.paging=response.paging,owsHistory.hasState()&&($scope.head=owsHistory.popState(),$scope.search()),owsCommon.setFirstFocus(),void deferred.resolve()):void deferred.reject()}),deferred.promise},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.search=function(){owsCommon.clearPagingOptions($scope.gridOptions),$scope.getSearchData($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.getSearchData=function(pageSize,page){var request={};request.data={},request.data.head=$scope.head,owsCommon.setPagingData(request,$scope.paging,pageSize,page),api.printerList.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchform"),$scope.setSearchData(response)})},$scope.setSearchData=function(response){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.printerList=response.data.body,$scope.gridOptions.totalItems=response.paging.allRecordCount,owsHistory.replaceState($scope.head)},$scope.register=function(){if(optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions),0==$scope.printerList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");gridDirectiveControl.validity($scope.gridOptions,!1,gridDirectiveControl.blankRows($scope.gridOptions));for(var listBody=[],emptyBody=[],allBody=$scope.gridOptions.gridApi.grid.rows,row=0;row<$scope.printerList.length;row++)gridDirectiveControl.isBlankRow($scope.gridOptions,row)?emptyBody.push($scope.printerList[row]):row<=allBody.length&&0==$scope.gridOptions.getSelection(allBody[row])?emptyBody.push($scope.printerList[row]):listBody.push($scope.printerList[row]);var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.searchform)]);promiseAll.then(function(){owsCommon.syncExec(function(){$scope.searchform.$invalid;if(gridDirectiveControl.validity($scope.gridOptions,!0),0==listBody.length)return void alertMessage.setErrorMessageByCode("noDetailsError");angular.forEach(emptyBody,function(row){$scope.printerList.splice($scope.printerList.indexOf(row),1)});var request={};request.data={},request.data.head=$scope.head,request.data.body=listBody,api.printerList.inputCheck(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchform")&&api.printerList.update(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchform")&&($scope.printerList=[],owsCommon.toggleSelectAll($scope.gridOptions,!1))})})})},function(){owsCommon.syncExec(function(){gridDirectiveControl.validity($scope.gridOptions,!0)})})},$scope.remove=function(){if(optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions),0==$scope.printerList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");gridDirectiveControl.validity($scope.gridOptions,!1,gridDirectiveControl.blankRows($scope.gridOptions));for(var listBody=[],emptyBody=[],allBody=$scope.gridOptions.gridApi.grid.rows,row=0;row<$scope.printerList.length;row++)gridDirectiveControl.isBlankRow($scope.gridOptions,row)?emptyBody.push($scope.printerList[row]):row<=allBody.length&&0==$scope.gridOptions.getSelection(allBody[row])?emptyBody.push($scope.printerList[row]):listBody.push($scope.printerList[row]);if(owsCommon.viewConfirm("dataDeleteConfirmation")){var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.searchform)]);promiseAll.then(function(){owsCommon.syncExec(function(){$scope.searchform.$invalid;gridDirectiveControl.validity($scope.gridOptions,!0),angular.forEach(emptyBody,function(row){$scope.printerList.splice($scope.printerList.indexOf(row),1)});var removeList=[];for(var row in listBody)null!=listBody[row].printerId&&""!=listBody[row].printerId&&removeList.push(listBody[row]);if(0!=removeList.length){var request={};request.data={},request.data.head=$scope.head,request.data.body=removeList,api.printerList.remove(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchform")&&($scope.printerList=[],owsCommon.toggleSelectAll($scope.gridOptions,!1))})}})},function(){owsCommon.syncExec(function(){gridDirectiveControl.validity($scope.gridOptions,!0)})})}},$scope.initScreen()}]),angular.module("oneslogiWeb.PrintServiceEdit",[]).factory("printServiceEditApi",["AngularAPIClient",function(AngularAPIClient){return{dropdownList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"],["printerGroup","GET","resources/common/printerGroup/selectAll"]]),printServiceEdit:AngularAPIClient.make([["initUpdate","GET","resources/base/master/printServiceEdit/initUpdate"],["inputCheck","POST","resources/base/master/printServiceEdit/inputCheck"],["register","POST","resources/base/master/printServiceEdit/register"],["update","POST","resources/base/master/printServiceEdit/update"]])}}]).controller("PrintServiceEdit",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","printServiceEditApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.initScreen=function(){$scope.initScreenHttp()},$scope.initScreenHttp=function(){$q.all([$scope.deferredPrinterGroupList(),$scope.deferredGetClass("SELECT_PRINT_SERVICE_STATUS","selectPrintServiceStatusList")]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetClass=function(classCd,listName){var deferred=$q.defer(),request={};return request.classCd=classCd,api.dropdownList.query(request).then(function(response){$scope[listName]=response.data,deferred.resolve()}),deferred.promise},$scope.deferredPrinterGroupList=function(){var deferred=$q.defer(),request={};return api.dropdownList.printerGroup(request).then(function(response){$scope.printerGroupList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer(),request={};return request.printServiceId=$route.current.params.printServiceId,api.printServiceEdit.initUpdate(request).then(function(response){return statusInfo.isSuccessAndShowMessage(response,"inputform")?($scope.pPrintService=response.data.pPrintService,void deferred.resolve()):(owsCommon.viewInfoAndHistoryBack(response.status.messageCode,response.status.messageReplaceValue),void deferred.reject())}),deferred.promise},$scope.register=function(){optionMessageControl.hideAll($scope);var findPrinterGroup=($scope.inputform.$invalid,!1);if(null!=$scope.pPrintService.printerGroupId&&""!=$scope.pPrintService.printerGroupId)for(var i in $scope.printerGroupList){var printerGroup=$scope.printerGroupList[i];if(printerGroup.printerGroupId==$scope.pPrintService.printerGroupId){findPrinterGroup=!0;break}}findPrinterGroup||($scope.pPrintService.printerGroupId=null);var request={};request.data={},request.data.pPrintService=$scope.pPrintService,api.printServiceEdit.inputCheck(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"inputform")&&api.printServiceEdit.update(request).then(function(response){owsCommon.viewInfoAndHistoryBack(response.status.messageCode,response.status.messageReplaceValue)})})},$scope.initScreen()}]),angular.module("oneslogiWeb.PrintServiceList",[]).factory("printServiceListApi",["AngularAPIClient",function(AngularAPIClient){return{keyValueList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),printerGroup:AngularAPIClient.make([["selectAll","GET","resources/common/printerGroup/selectAll"]]),printServiceList:AngularAPIClient.make([["init","GET","resources/base/master/printServiceList/init"],["search","POST","resources/base/master/printServiceList/search"],["inputCheck","POST","resources/base/master/printServiceList/inputCheck"],["update","POST","resources/base/master/printServiceList/update"],["remove","POST","resources/base/master/printServiceList/remove"]])}}]).controller("PrintServiceList",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","printServiceListApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.PrintServiceListCols=[{field:"printServiceNm",displayName:"印刷サービス名称"},{field:"terminalNm",displayName:"端末名称"},{field:"macAddress",displayName:"MACアドレス"},{field:"printerGroupId",displayName:"プリンタグループ"},{field:"printServiceStatus",displayName:"印刷サービスステータス"}],$scope.initScreen=function(){$scope.isopen=!0,$scope.pagingOptions=owsCommon.getDefaultPagingOptions(),$scope.pagingOptions.setPageData=function(){$scope.getSearchData($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.gridOptions=owsCommon.mergePagingMultiSelectGridOptions({data:"printServiceList",columnDefs:"PrintServiceListCols",pagingOptions:$scope.pagingOptions}),$scope.initScreenHttp()},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetClass("PRINT_SERVICE_STATUS","printServiceStatusList"),$scope.deferredGetPrinterGroup()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetClass=function(classCd,listName){var deferred=$q.defer(),request={};return request.classCd=classCd,api.keyValueList.query(request).then(function(response){$scope[listName]=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetPrinterGroup=function(){var deferred=$q.defer(),request={};return api.printerGroup.selectAll(request).then(function(response){$scope.printerGroupList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer(),request={};return request.data={},request.data.head=$scope.head,request.data.body=$scope.printServiceList,api.printServiceList.init(request).then(function(response){return statusInfo.isSuccessAndShowMessage(response,"searchinputform")?($scope.head=response.data.head,$scope.printServiceList=response.data.body,$scope.blankRow=response.data.blankRow,$scope.paging=response.paging,owsHistory.hasState()&&($scope.head=owsHistory.popState(),$scope.search()),owsCommon.setFirstFocus(),void deferred.resolve()):void deferred.reject()}),deferred.promise},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.search=function(){owsCommon.clearPagingOptions($scope.gridOptions),$scope.getSearchData($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.getSearchData=function(pageSize,page){var request={};request.data={},request.data.head=$scope.head,owsCommon.setPagingData(request,$scope.paging,pageSize,page),api.printServiceList.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform"),$scope.setSearchData(response)})},$scope.setSearchData=function(response){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.printServiceList=response.data.body,$scope.gridOptions.totalItems=response.paging.allRecordCount,owsHistory.replaceState($scope.head)},$scope.update=function(){return 0==$scope.printServiceList.length?void alertMessage.setErrorMessageByCode("detailLineNotDisplayError"):0==$scope.gridOptions.gridApi.selection.getSelectedRows().length?void alertMessage.setErrorMessageByCode("lineNotSelectError"):$scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):void $location.path("base/master/PrintServiceEdit").search({}).search("printServiceId",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].printServiceId)},$scope.gridDblClick=function(row){owsCommon.syncButtonExec("update",row)},$scope.remove=function(){if(optionMessageControl.hideAll($scope),0==$scope.printServiceList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");for(var listBody=[],emptyBody=[],allBody=$scope.gridOptions.gridApi.grid.rows,row=0;row<$scope.printServiceList.length;row++)row<=allBody.length&&0==$scope.gridOptions.getSelection(allBody[row])?emptyBody.push($scope.printServiceList[row]):listBody.push($scope.printServiceList[row]);if(owsCommon.viewConfirm("dataDeleteConfirmation")){var promiseAll=$q.all();promiseAll.then(function(){owsCommon.syncExec(function(){$scope.searchinputform.$invalid;angular.forEach(emptyBody,function(row){$scope.printServiceList.splice($scope.printServiceList.indexOf(row),1)}),updateRowNumber($scope.printServiceList);var removeList=[];for(var row in listBody)null!=listBody[row].printServiceId&&""!=listBody[row].printServiceId&&removeList.push(listBody[row]);if(0!=removeList.length){var request={};request.data={},request.data.head=$scope.head,request.data.body=removeList,api.printServiceList.remove(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&($scope.printServiceList=[],owsCommon.toggleSelectAll($scope.gridOptions,!1))})}})})}};var updateRowNumber=function(body){var i=1;angular.forEach(body,function(row){row.lineNo=i++})};$scope.initScreen()}]),angular.module("oneslogiWeb.PropertyMaster",[]).factory("propertyMasterApi",["AngularAPIClient",function(AngularAPIClient){return{dropdownList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),propertyList:AngularAPIClient.make([["init","GET","resources/master/propertyMaster/init"],["search","GET","resources/master/propertyMaster/search"],["excel","GET","resources/master/propertyMaster/search","excel"],["inputCheck","POST","resources/master/propertyMaster/inputCheck"],["register","POST","resources/master/propertyMaster/register"]])}}]).controller("PropertyMaster",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","propertyMasterApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.propertyListCols=[{field:"propertyNm",displayName:"項目名"},{field:"propertyValue",displayName:"項目値"},{field:"propertyComment",displayName:"項目値解説"},{field:"delFlg",displayName:"削除フラグ"}],$scope.initScreen=function(){$scope.isopen=!0,$scope.pagingOptions=owsCommon.getDefaultPagingOptions(),$scope.pagingOptions.setPageData=function(){$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.gridOptions=owsCommon.mergePagingMultiSelectGridOptions({data:"propertyList",columnDefs:"propertyListCols",pagingOptions:$scope.pagingOptions}),$scope.gridSelectOptions={delFlg:{key:"classCd",value:"classNm",listModel:"delFlgList"}},$scope.gridEventOptions={propertyNm:{"ng-change":{eventFunction:"propertyNmBlur(row.rowIndex)"}},propertyValue:{"ng-change":{eventFunction:"propertyNmBlur(row.rowIndex)"}},propertyComment:{"ng-change":{eventFunction:"propertyNmBlur(row.rowIndex)"}},delFlg:{"ng-change":{eventFunction:"delFlgChange(row.rowIndex)"}}},$scope.initScreenHttp()},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetDelFlg()]).then(function(response){return $scope.deferredGetInitData()})},$scope.propertyNmBlur=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.propertyValueBlur=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.propertyCommentBlur=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.delFlgChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.deferredGetDelFlg=function(){var deferred=$q.defer(),request={};return request.classCd="PHYSICAL_DELETE",owsCommon.getDataCacheable(api.dropdownList,request).then(function(response){$scope.delFlgList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer();return api.propertyList.init().then(function(response){$scope.head=response.data.head,$scope.propertyList=response.data.body,$scope.paging=response.paging,$scope.blankRow=response.data.blankRow,$scope.head.delFlg=owsCommon.getDefaultValue($scope.delFlgList),owsHistory.hasState()&&($scope.head=owsHistory.popState(),$scope.search()),owsCommon.setFirstFocus(),deferred.resolve()}),deferred.promise},$scope.search=function(){owsCommon.clearPagingOptions($scope.gridOptions),$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.getPagedDataAsync=function(pageSize,page){var request={};request.data={},request.data.head=$scope.head,owsCommon.setPagingData(request,$scope.paging,pageSize,page),api.propertyList.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform"),$scope.setPagingData(response,page,pageSize)})},$scope.setPagingData=function(response,page,pageSize){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.propertyList=response.data.body;for(var row=0;row<$scope.propertyList.length;row++)gridDirectiveControl.editable($scope.gridOptions,"propertyNm",!1,row);$scope.gridOptions.totalItems=response.paging.allRecordCount,owsHistory.replaceState($scope.head)},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.excelOutput=function(){var request={};request.data={},request.data.head=$scope.head,owsCommon.setOutputOptions(request,$scope.gridOptions,"body",document.title),api.propertyList.excel(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&(location.href=response.output.downloadUrl)})},$scope.addRow=function(){$scope.blankRow.delFlg=owsCommon.getDefaultValue($scope.delFlgList),$scope.propertyList.push(angular.copy($scope.blankRow)),gridDirectiveControl.editable($scope.gridOptions,"delFlg",!1,$scope.propertyList.length-1)},$scope.removeRow=function(){var i=0;if(angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){if($scope.propertyList.indexOf(row)>-1&&null!=row.propertyId)return void(i+=1)}),i>0)return void alertMessage.setErrorMessageByCode("alreadyRegisteredCannotDeleteError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("deleteRowErrNotSelect");for(var item=0,row=0;row<$scope.gridOptions.gridApi.selection.getSelectedRows().length;row++)(""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[row].propertyNm&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[row].propertyNm||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[row].propertyValue&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[row].propertyValue||$scope.gridOptions.gridApi.selection.getSelectedRows()[row].delFlg!=owsCommon.getDefaultValue($scope.delFlgList))&&item++;if(item>0){if(!owsCommon.viewConfirm("deleteRowAlreadyInputConfirmation"))return}else if($scope.gridOptions.gridApi.selection.getSelectedRows().length>1&&!owsCommon.viewConfirm("deleteRowMultipleConfirmation"))return;angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){$scope.propertyList.indexOf(row)>-1&&$scope.propertyList.splice($scope.propertyList.indexOf(row),1)}),owsCommon.toggleSelectAll($scope.gridOptions,!1)},$scope.register=function(){optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions);var listBody=[],emptyBody=[];if(0==$scope.propertyList.length)return void alertMessage.setErrorMessageByCode("noDetailsError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");var allBody=$scope.gridOptions.gridApi.grid.rows;gridDirectiveControl.validity($scope.gridOptions,!1,gridDirectiveControl.blankRows($scope.gridOptions));for(var row=0;row<$scope.propertyList.length;row++)gridDirectiveControl.isBlankRow($scope.gridOptions,row)?emptyBody.push($scope.propertyList[row]):row<=allBody.length&&0==$scope.gridOptions.getSelection(allBody[row])?(gridDirectiveControl.validity($scope.gridOptions,!1,row),emptyBody.push($scope.propertyList[row])):listBody.push($scope.propertyList[row]);var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.searchinputform)]);promiseAll.then(function(){owsCommon.syncExec(function(){$scope.searchinputform.$invalid;if(0==listBody.length)return void alertMessage.setErrorMessageByCode("noDetailsError");for(var j=0,rowIndex=new Array,allBodyNo=(new Array,$scope.gridOptions.gridApi.grid.rows),row=0;row<$scope.propertyList.length;row++)if(row<=allBodyNo.length&&1==$scope.gridOptions.getSelection(allBodyNo[row]))for(var propertyNm=$scope.propertyList[row].propertyNm,i=row+1;i<$scope.propertyList.length;i++)i<=allBodyNo.length&&1==$scope.gridOptions.getSelection(allBodyNo[i])&&$scope.propertyList[i].propertyNm==propertyNm&&(rowIndex[j]=i,j++);if(j>0){var messageCd="propertyNmDuplicateError";return gridOptionMessageControl.show($scope.gridOptions,"propertyNm",$filter("owfMessage")(messageCd),rowIndex),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,rowIndex[0]),void directiveControl.firstErrorOnFocus("searchinputform")}gridDirectiveControl.validity($scope.gridOptions,!0),angular.forEach(emptyBody,function(row){$scope.propertyList.splice($scope.propertyList.indexOf(row),1)});var request={};request.data={},request.data.body=listBody,api.propertyList.inputCheck(request).then(function(response){if(1!=response.status.statusCode){if(null!=response.status.listStatus){for(var i=0;i<response.status.listStatus.length;i++)if(7==response.status.listStatus[i].status.statusCode&&(gridOptionMessageControl.show($scope.gridOptions,"propertyNm",$filter("owfMessage")(response.status.listStatus[i].status.messageCode,response.status.listStatus[i].status.messageReplaceValue),response.status.listStatus[i].status.rowIndex),isBln=!0,firstErrIndex||(firstErrIndex=response.status.listStatus[i].status.rowIndex),isBln))return gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,firstErrIndex),void directiveControl.firstErrorOnFocus("searchinputform");return}}else if(!statusInfo.isSuccessAndShowMessage(response,"searchinputform"))return;api.propertyList.register(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&$scope.initScreenHttp()}),owsCommon.toggleSelectAll($scope.gridOptions,!1)})})})},$scope.initScreen()}]),angular.module("oneslogiWeb.ReportLayoutCopy",[]).factory("reportLayoutCopyApi",["AngularAPIClient",function(AngularAPIClient){return{dropdownList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"],["printerGroup","GET","resources/common/printerGroup/selectAll"],["printer","GET","resources/common/printer/selectByPrinterGroupId"],["printerAttribute","GET","resources/common/printerAttribute/selectByPrinterId"]]),reportLayoutCopy:AngularAPIClient.make([["initUpdate","GET","resources/master/reportLayoutCopy/initUpdate"],["inputCheck","POST","resources/master/reportLayoutCopy/inputCheck"],["update","POST","resources/master/reportLayoutCopy/update"]])}}]).controller("ReportLayoutCopy",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","reportLayoutCopyApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.reportLayoutEditCols=[{field:"itemCd",displayName:"項目CD"},{field:"vdict.dictNm",displayName:"項目名"},{field:"itemType",displayName:"項目型"},{field:"visible",displayName:"表示可否"},{field:"itemFormat",displayName:"項目書式"}];var bodyList,displayFlg;$scope.initScreen=function(){$scope.screenMode=$route.current.params.mode,$scope.gridOptions=owsCommon.mergeEntryGridOptions({data:"reportLayoutEdit",columnDefs:"reportLayoutEditCols"}),$scope.gridSelectOptions={itemType:{key:"classCd",value:"classNm",listModel:"itemTypeList"},visible:{key:"classCd",value:"classNm",listModel:"visibleList"}},$scope.gridEventOptions={itemCd:{"ng-change":{eventFunction:"itemCdChange(row.rowIndex)"}},"vdict.dictNm":{"ng-change":{eventFunction:"dictNmChange(row.rowIndex)"}},itemType:{"ng-change":{eventFunction:"itemTypeChange(row.rowIndex)"}},visible:{"ng-click":{eventFunction:"visibleChange(row.rowIndex)"}},itemFormat:{"ng-change":{eventFunction:"itemFormatChange(row.rowIndex)"}}};var uploadParam={};uploadParam.data={},uploadParam.data.input={},uploadParam.data.input.inputField="reportLayoutEdit",uploadParam.data.input.columnDefs=$scope.gridOptions,$scope.fileOptions={formData:uploadParam},statusInfo.mappingGridErrorMessage($scope.gridOptions,"vdict.dictNm",5,2),statusInfo.mappingGridErrorMessage($scope.gridOptions,"vdict.dictNm",5,6),$scope.initScreenHttp()},$scope.itemCdChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.dictNmChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.itemTypeChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex);var itemType=$scope.reportLayoutEdit[rowIndex].itemType;"1"==itemType?gridDirectiveControl.editable($scope.gridOptions,"itemFormat",!0,rowIndex):(gridDirectiveControl.editable($scope.gridOptions,"itemFormat",!1,rowIndex),$scope.reportLayoutEdit[rowIndex].itemFormat=null)},$scope.visibleChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.itemFormatChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.initScreenHttp=function(){$q.all([$scope.deferredVisibleList(),$scope.deferredItemTypeList(),,$scope.deferredUpdatableList(),$scope.deferredPrinterGroupList(),$scope.deferredSheetCollateList(),$scope.deferredAutoPrintTargetFlgList()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredItemTypeList=function(){var deferred=$q.defer(),request={};return request.classCd="REPORT_LAYOUT_ITEM_TYPE",api.dropdownList.query(request).then(function(response){$scope.itemTypeList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredVisibleList=function(){var deferred=$q.defer(),request={};return request.classCd="VISIBLE",api.dropdownList.query(request).then(function(response){$scope.visibleList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredUpdatableList=function(){var deferred=$q.defer(),request={};return request.classCd="UPDATABLE",api.dropdownList.query(request).then(function(response){$scope.updatableList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredSheetCollateList=function(){var deferred=$q.defer(),request={};return request.classCd="SHEET_COLLATE",api.dropdownList.query(request).then(function(response){$scope.sheetCollateList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredPrinterGroupList=function(){var deferred=$q.defer(),request={};return api.dropdownList.printerGroup(request).then(function(response){$scope.printerGroupList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredAutoPrintTargetFlgList=function(){var deferred=$q.defer(),request={};return request.classCd="AUTO_PRINT_TARGET_FLG",api.dropdownList.query(request).then(function(response){$scope.autoPrintTargetFlgList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer(),request={};return request.displayFlg=$route.current.params.displayFlg,displayFlg=$route.current.params.displayFlg,request.reportLayoutId=$route.current.params.reportLayoutId,api.reportLayoutCopy.initUpdate(request).then(function(response){if(!statusInfo.isSuccessAndShowMessage(response,"inputform"))return owsCommon.viewInfoAndHistoryBack(response.status.messageCode,response.status.messageReplaceValue),void deferred.reject();updateRowNumber($scope.reportLayoutEdit),$scope.head=response.data.head,$scope.reportLayoutEdit=response.data.body,$scope.displayFlg=response.data.displayFlg,bodyList=response.data.body,$scope.blankRow=response.data.blankRow,$scope.pLayoutPrintSetting=response.data.pLayoutPrintSetting,directiveControl.editable($scope,"reportCd",!1),directiveControl.editable($scope,"reportNm",!1),"2"==displayFlg&&directiveControl.editable($scope,"reportLayoutNm",!1);for(var row=0;row<$scope.reportLayoutEdit.length;row++)1==$scope.reportLayoutEdit[row].itemType?gridDirectiveControl.editable($scope.gridOptions,"itemFormat",!0,row):gridDirectiveControl.editable($scope.gridOptions,"itemFormat",!1,row);owsCommon.setFirstFocus("inputform"),$scope.changePrinterGroup(),$scope.changePrinter(),owsCommon.syncExec(function(){owsCommon.toggleSelectAll($scope.gridOptions,!0)}),deferred.resolve()}),deferred.promise},$scope.getClassForRow=function(row){return""},$scope.beforeUpload=function(){$scope.fileOptions.url="resources/reportLayoutUpload/layoutFileUpload?type=main";
},$scope.uploadSuccess=function(e,data){$scope.reportLayoutNm=data.originalFiles[0].name},$scope.addRow=function(){$scope.blankRow.visible=owsCommon.getDefaultValue($scope.visibleList),$scope.reportLayoutEdit.push(angular.copy($scope.blankRow)),updateRowNumber($scope.reportLayoutEdit)},$scope.removeRow=function(){return 0==$scope.gridOptions.gridApi.selection.getSelectedRows().length?void alertMessage.setErrorMessageByCode("deleteRowErrNotSelect"):void($scope.gridOptions.gridApi.selection.getSelectedRows().length>1&&!owsCommon.viewConfirm("deleteRowMultipleConfirmation")||(angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){$scope.reportLayoutEdit.indexOf(row)>-1&&$scope.reportLayoutEdit.splice($scope.reportLayoutEdit.indexOf(row),1)}),updateRowNumber($scope.reportLayoutEdit),owsCommon.toggleSelectAll($scope.gridOptions,!1)))},$scope.register=function(){optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions);var listBody=[],emptyBody=[],allBody=$scope.gridOptions.gridApi.grid.rows;gridDirectiveControl.validity($scope.gridOptions,!1,gridDirectiveControl.blankRows($scope.gridOptions));for(var row=0;row<$scope.reportLayoutEdit.length;row++)gridDirectiveControl.isBlankRow($scope.gridOptions,row)?emptyBody.push($scope.reportLayoutEdit[row]):row<=allBody.length&&0==$scope.gridOptions.getSelection(allBody[row])?(gridDirectiveControl.validity($scope.gridOptions,!1,row),emptyBody.push($scope.reportLayoutEdit[row])):listBody.push($scope.reportLayoutEdit[row]);var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.inputform)]);promiseAll.then(function(){owsCommon.syncExec(function(){$scope.inputform.$invalid;gridDirectiveControl.validity($scope.gridOptions,!0),angular.forEach(emptyBody,function(row){$scope.reportLayoutEdit.splice($scope.reportLayoutEdit.indexOf(row),1)}),updateRowNumber($scope.reportLayoutEdit);for(var isBln=!1,j=0,rowIndex=new Array,row=(new Array,0);row<$scope.reportLayoutEdit.length;row++)for(var itemCd=$scope.reportLayoutEdit[row].itemCd,i=row+1;i<$scope.reportLayoutEdit.length;i++)$scope.reportLayoutEdit[i].itemCd==itemCd&&(rowIndex[j]=i,j++);if(j>0){isBln=!0;var messageCd="itemCdDuplicateError";gridOptionMessageControl.show($scope.gridOptions,"itemCd",$filter("owfMessage")(messageCd),rowIndex),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,rowIndex[0]),directiveControl.firstErrorOnFocus("inputform")}if(1!=isBln){var checkFunc,execFunc,successFunc;checkFunc=api.reportLayoutCopy.inputCheck,execFunc=api.reportLayoutCopy.update,successFunc=function(response){owsCommon.viewInfoAndHistoryBack(response.status.messageCode,response.status.messageReplaceValue)};var request={};request.data={},request.data.head=$scope.head,request.data.head.displayFlg=displayFlg,bodyList=listBody,request.data.body=bodyList,request.data.pLayoutPrintSetting=$scope.pLayoutPrintSetting;var firstErrIndex,isBln=!1;checkFunc(request).then(function(checkResponse){if(null!=checkResponse.status.listStatus){for(var i=0;i<checkResponse.status.listStatus.length;i++){if(2==checkResponse.status.listStatus[i].status.statusCode||7==checkResponse.status.listStatus[i].status.statusCode)return void optionMessageControl.show($scope,"reportLayoutNm",$filter("owfMessage")(checkResponse.status.listStatus[i].status.messageCode,checkResponse.status.listStatus[i].status.messageReplaceValue));5==checkResponse.status.listStatus[i].status.statusCode?(gridOptionMessageControl.show($scope.gridOptions,"vdict.dictNm",$filter("owfMessage")(checkResponse.status.listStatus[i].status.messageCode,checkResponse.status.listStatus[i].status.messageReplaceValue),checkResponse.status.listStatus[i].status.rowIndex),isBln=!0,firstErrIndex||(firstErrIndex=checkResponse.status.listStatus[i].status.rowIndex)):6==checkResponse.status.listStatus[i].status.statusCode&&(gridOptionMessageControl.show($scope.gridOptions,"itemCd",$filter("owfMessage")(checkResponse.status.listStatus[i].status.messageCode,checkResponse.status.listStatus[i].status.messageReplaceValue),checkResponse.status.listStatus[i].status.rowIndex),isBln=!0,firstErrIndex||(firstErrIndex=checkResponse.status.listStatus[i].status.rowIndex))}if(isBln)return gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,firstErrIndex),void directiveControl.firstErrorOnFocus("inputform")}if(statusInfo.isSuccessAndShowMessage(checkResponse,"inputform")){if(null!=checkResponse.data.necessityPrintSettingTakeoverConfirm&&1==checkResponse.data.necessityPrintSettingTakeoverConfirm){var ret=owsCommon.viewConfirm(checkResponse.data.printSettingTakeoverConfirmMsgCd);request.data.selectPrintSettingTakeoverConfirm=ret}execFunc(request).then(function(execResponse){if(null!=execResponse.status.listStatus)for(var i=0;i<execResponse.status.listStatus.length;i++)if(2==execResponse.status.listStatus[i].status.statusCode||7==checkResponse.status.listStatus[i].status.statusCode)return void optionMessageControl.show($scope,"reportLayoutNm",$filter("owfMessage")(execResponse.status.listStatus[i].status.messageCode,execResponse.status.listStatus[i].status.messageReplaceValue));statusInfo.isSuccessAndShowMessage(execResponse,"inputform")&&successFunc(execResponse)})}})}})},function(){owsCommon.syncExec(function(){gridDirectiveControl.validity($scope.gridOptions,!0)})})};var updateRowNumber=function(body){var i=1;angular.forEach(body,function(row){row.lineNo=i++})};$scope.displayIsReportEdit=function(){return"1"==displayFlg},$scope.changePrinterGroup=function(){if(null==$scope.pLayoutPrintSetting.printerGroupId)return $scope.printerList=[],void($scope.printerAttributeList=[]);var request={};request.printerGroupId=$scope.pLayoutPrintSetting.printerGroupId,api.dropdownList.printer(request).then(function(response){$scope.printerList=response.data,$scope.changePrinter()})},$scope.changePrinter=function(){if(null==$scope.pLayoutPrintSetting.printerId)return void($scope.printerAttributeList=[]);var request={};request.printerId=$scope.pLayoutPrintSetting.printerId,api.dropdownList.printerAttribute(request).then(function(response){$scope.printerAttributeList=response.data})},$scope.initScreen()}]),angular.module("oneslogiWeb.ReportLayoutEdit",[]).factory("reportLayoutEditApi",["AngularAPIClient",function(AngularAPIClient){return{dropdownList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"],["printerGroup","GET","resources/common/printerGroup/selectAll"],["printer","GET","resources/common/printer/selectByPrinterGroupId"],["printerAttribute","GET","resources/common/printerAttribute/selectByPrinterId"]]),reportLayoutEdit:AngularAPIClient.make([["initUpdate","GET","resources/master/reportLayoutEdit/initUpdate"],["inputCheck","POST","resources/master/reportLayoutEdit/inputCheck"],["register","POST","resources/master/reportLayoutEdit/register"],["update","POST","resources/master/reportLayoutEdit/update"]])}}]).controller("ReportLayoutEdit",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","reportLayoutEditApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.reportLayoutEditCols=[{field:"itemCd",displayName:"項目CD"},{field:"vdict.dictNm",displayName:"項目名"},{field:"itemType",displayName:"項目型"},{field:"visible",displayName:"表示可否"},{field:"itemFormat",displayName:"項目書式"},{field:"delFlg",displayName:"削除"}];var bodyList,displayFlg;$scope.initScreen=function(){$scope.layoutUploadable=!1,$scope.screenMode=$route.current.params.mode,$scope.gridOptions=owsCommon.mergeEntryGridOptions({data:"reportLayoutEdit",columnDefs:"reportLayoutEditCols"}),$scope.gridSelectOptions={itemType:{key:"classCd",value:"classNm",listModel:"itemTypeList"},visible:{key:"classCd",value:"classNm",listModel:"visibleList"},delFlg:{key:"classCd",value:"classNm",listModel:"physicalDelFlg"}},$scope.gridEventOptions={itemCd:{"ng-change":{eventFunction:"itemCdChange(row.rowIndex)"}},"vdict.dictNm":{"ng-change":{eventFunction:"dictNmChange(row.rowIndex)"}},itemType:{"ng-change":{eventFunction:"itemTypeChange(row.rowIndex)"}},visible:{"ng-click":{eventFunction:"visibleChange(row.rowIndex)"}},itemFormat:{"ng-change":{eventFunction:"itemFormatChange(row.rowIndex)"}},delFlg:{"ng-change":{eventFunction:"delFlgChange(row.rowIndex)"}}};var uploadParam={};uploadParam.data={},uploadParam.data.input={},uploadParam.data.input.inputField="reportLayoutEdit",uploadParam.data.input.columnDefs=$scope.gridOptions,$scope.fileOptions={formData:uploadParam},statusInfo.mappingGridErrorMessage($scope.gridOptions,"vdict.dictNm",5,2),statusInfo.mappingGridErrorMessage($scope.gridOptions,"vdict.dictNm",5,6),$scope.initScreenHttp()},$scope.itemCdChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.dictNmChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.itemTypeChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex);var itemType=$scope.reportLayoutEdit[rowIndex].itemType;"1"==itemType?gridDirectiveControl.editable($scope.gridOptions,"itemFormat",!0,rowIndex):(gridDirectiveControl.editable($scope.gridOptions,"itemFormat",!1,rowIndex),$scope.reportLayoutEdit[rowIndex].itemFormat=null)},$scope.visibleChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.itemFormatChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.delFlgChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.initScreenHttp=function(){$q.all([$scope.deferredVisibleList(),$scope.deferredItemTypeList(),$scope.deferredGetPhysicalDelFlg(),$scope.deferredGetDelFlg(),$scope.deferredUpdatableList(),$scope.deferredPrinterGroupList(),$scope.deferredSheetCollateList(),$scope.deferredAutoPrintTargetFlgList()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredItemTypeList=function(){var deferred=$q.defer(),request={};return request.classCd="REPORT_LAYOUT_ITEM_TYPE",api.dropdownList.query(request).then(function(response){$scope.itemTypeList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredVisibleList=function(){var deferred=$q.defer(),request={};return request.classCd="VISIBLE",api.dropdownList.query(request).then(function(response){$scope.visibleList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetDelFlg=function(){var deferred=$q.defer(),request={};return request.classCd="DEL_FLG",api.dropdownList.query(request).then(function(response){$scope.delFlgList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetPhysicalDelFlg=function(){var deferred=$q.defer(),request={};return request.classCd="PHYSICAL_DELETE",api.dropdownList.query(request).then(function(response){$scope.physicalDelFlg=response.data,deferred.resolve()}),deferred.promise},$scope.deferredUpdatableList=function(){var deferred=$q.defer(),request={};return request.classCd="UPDATABLE",api.dropdownList.query(request).then(function(response){$scope.updatableList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredSheetCollateList=function(){var deferred=$q.defer(),request={};return request.classCd="SHEET_COLLATE",api.dropdownList.query(request).then(function(response){$scope.sheetCollateList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredPrinterGroupList=function(){var deferred=$q.defer(),request={};return api.dropdownList.printerGroup(request).then(function(response){$scope.printerGroupList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredAutoPrintTargetFlgList=function(){var deferred=$q.defer(),request={};return request.classCd="AUTO_PRINT_TARGET_FLG",api.dropdownList.query(request).then(function(response){$scope.autoPrintTargetFlgList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer(),request={};return request.displayFlg=$route.current.params.displayFlg,displayFlg=$route.current.params.displayFlg,request.reportLayoutId=$route.current.params.reportLayoutId,api.reportLayoutEdit.initUpdate(request).then(function(response){if(!statusInfo.isSuccessAndShowMessage(response,"inputform"))return owsCommon.viewInfoAndHistoryBack(response.status.messageCode,response.status.messageReplaceValue),void deferred.reject();updateRowNumber($scope.reportLayoutEdit),$scope.head=response.data.head,$scope.reportLayoutEdit=response.data.body,$scope.displayFlg=response.data.displayFlg,bodyList=response.data.body,$scope.blankRow=response.data.blankRow,$scope.pLayoutPrintSetting=response.data.pLayoutPrintSetting,$scope.layoutUploadable=response.data.layoutUploadable,directiveControl.editable($scope,"reportCd",!1),directiveControl.editable($scope,"reportNm",!1),"2"==displayFlg&&directiveControl.editable($scope,"reportLayoutNm",!1);for(var row=0;row<$scope.reportLayoutEdit.length;row++)null!=$scope.reportLayoutEdit[row].itemCd&&gridDirectiveControl.editable($scope.gridOptions,"itemCd",!1,row),1==$scope.reportLayoutEdit[row].itemType?gridDirectiveControl.editable($scope.gridOptions,"itemFormat",!0,row):gridDirectiveControl.editable($scope.gridOptions,"itemFormat",!1,row);owsCommon.setFirstFocus("inputform"),$scope.changePrinterGroup(),$scope.changePrinter(),deferred.resolve()}),deferred.promise},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.beforeUpload=function(){displayFlg=$route.current.params.displayFlg,reportLayoutId=$route.current.params.reportLayoutId,$scope.fileOptions.url="resources/master/reportLayoutEdit/reportLayoutUpload?displayFlg="+displayFlg+"&reportLayoutId="+reportLayoutId},$scope.uploadSuccess=function(e,data){statusInfo.isSuccessAndShowMessage(data.result,"inputform")&&null!=data.result.data.head.versionNo&&($scope.head=data.result.data.head)},$scope.addRow=function(){$scope.blankRow.delFlg=owsCommon.getDefaultValue($scope.delFlgList),$scope.blankRow.visible=owsCommon.getDefaultValue($scope.visibleList),$scope.reportLayoutEdit.push(angular.copy($scope.blankRow)),gridDirectiveControl.editable($scope.gridOptions,"delFlg",!1,$scope.reportLayoutEdit.length-1),updateRowNumber($scope.reportLayoutEdit)},$scope.removeRow=function(){if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("deleteRowErrNotSelect");if(!($scope.gridOptions.gridApi.selection.getSelectedRows().length>1)||owsCommon.viewConfirm("deleteRowMultipleConfirmation")){var i=0;if(angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){if($scope.reportLayoutEdit.indexOf(row)>-1&&null!=row.reportLayoutItemId)return void(i+=1)}),i>0)return void alertMessage.setErrorMessageByCode("alreadyRegisteredCannotDeleteError");var flg=!1;1==$scope.gridOptions.gridApi.selection.getSelectedRows().length&&((""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].itemCd&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].itemCd||$scope.gridOptions.gridApi.selection.getSelectedRows()[0].itemType!=owsCommon.getDefaultValue($scope.itemTypeList)||$scope.gridOptions.gridApi.selection.getSelectedRows()[0].visible!=owsCommon.getDefaultValue($scope.visibleList)||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].itemFormat&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].itemFormat||$scope.gridOptions.gridApi.selection.getSelectedRows()[0].delFlg!=owsCommon.getDefaultValue($scope.delFlgList))&&(flg=!0),""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict&&""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict.dictNm&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict.dictNm&&(flg=!0)),flg&&!owsCommon.viewConfirm("deleteRowAlreadyInputConfirmation")||(angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){$scope.reportLayoutEdit.indexOf(row)>-1&&$scope.reportLayoutEdit.splice($scope.reportLayoutEdit.indexOf(row),1)}),updateRowNumber($scope.reportLayoutEdit),owsCommon.toggleSelectAll($scope.gridOptions,!1))}},$scope.register=function(){optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions);var listBody=[],emptyBody=[],allBody=$scope.gridOptions.gridApi.grid.rows;gridDirectiveControl.validity($scope.gridOptions,!1,gridDirectiveControl.blankRows($scope.gridOptions));for(var row=0;row<$scope.reportLayoutEdit.length;row++)gridDirectiveControl.isBlankRow($scope.gridOptions,row)?emptyBody.push($scope.reportLayoutEdit[row]):row<=allBody.length&&0==$scope.gridOptions.getSelection(allBody[row])?(gridDirectiveControl.validity($scope.gridOptions,!1,row),emptyBody.push($scope.reportLayoutEdit[row])):listBody.push($scope.reportLayoutEdit[row]);var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.inputform)]);promiseAll.then(function(){owsCommon.syncExec(function(){$scope.inputform.$invalid;gridDirectiveControl.validity($scope.gridOptions,!0),angular.forEach(emptyBody,function(row){$scope.reportLayoutEdit.splice($scope.reportLayoutEdit.indexOf(row),1)}),updateRowNumber($scope.reportLayoutEdit);for(var isBln=!1,j=0,rowIndex=new Array,row=(new Array,0);row<$scope.reportLayoutEdit.length;row++)for(var itemCd=$scope.reportLayoutEdit[row].itemCd,i=row+1;i<$scope.reportLayoutEdit.length;i++)$scope.reportLayoutEdit[i].itemCd==itemCd&&(rowIndex[j]=i,j++);if(j>0){isBln=!0;var messageCd="itemCdDuplicateError";gridOptionMessageControl.show($scope.gridOptions,"itemCd",$filter("owfMessage")(messageCd),rowIndex),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,rowIndex[0]),directiveControl.firstErrorOnFocus("inputform")}if(1!=isBln){var checkFunc,execFunc,successFunc;checkFunc=api.reportLayoutEdit.inputCheck,execFunc=api.reportLayoutEdit.update,successFunc=function(response){owsCommon.viewInfoAndHistoryBack(response.status.messageCode,response.status.messageReplaceValue)};var request={};request.data={},request.data.head=$scope.head,request.data.head.displayFlg=displayFlg,bodyList=listBody,request.data.body=bodyList,request.data.pLayoutPrintSetting=$scope.pLayoutPrintSetting;var firstErrIndex,isBln=!1;checkFunc(request).then(function(checkResponse){if(null!=checkResponse.status.listStatus){for(var i=0;i<checkResponse.status.listStatus.length;i++){if(2==checkResponse.status.listStatus[i].status.statusCode||7==checkResponse.status.listStatus[i].status.statusCode)return void optionMessageControl.show($scope,"reportLayoutNm",$filter("owfMessage")(checkResponse.status.listStatus[i].status.messageCode,checkResponse.status.listStatus[i].status.messageReplaceValue));5==checkResponse.status.listStatus[i].status.statusCode?(gridOptionMessageControl.show($scope.gridOptions,"vdict.dictNm",$filter("owfMessage")(checkResponse.status.listStatus[i].status.messageCode,checkResponse.status.listStatus[i].status.messageReplaceValue),checkResponse.status.listStatus[i].status.rowIndex),isBln=!0,firstErrIndex||(firstErrIndex=checkResponse.status.listStatus[i].status.rowIndex)):6==checkResponse.status.listStatus[i].status.statusCode&&(gridOptionMessageControl.show($scope.gridOptions,"itemCd",$filter("owfMessage")(checkResponse.status.listStatus[i].status.messageCode,checkResponse.status.listStatus[i].status.messageReplaceValue),checkResponse.status.listStatus[i].status.rowIndex),isBln=!0,firstErrIndex||(firstErrIndex=checkResponse.status.listStatus[i].status.rowIndex))}if(isBln)return gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,firstErrIndex),void directiveControl.firstErrorOnFocus("inputform")}if(statusInfo.isSuccessAndShowMessage(checkResponse,"inputform")){if(null!=checkResponse.data.necessityPrintSettingTakeoverConfirm&&1==checkResponse.data.necessityPrintSettingTakeoverConfirm){var ret=owsCommon.viewConfirm(checkResponse.data.printSettingTakeoverConfirmMsgCd);request.data.selectPrintSettingTakeoverConfirm=ret}execFunc(request).then(function(execResponse){if(null!=execResponse.status.listStatus)for(var i=0;i<execResponse.status.listStatus.length;i++)if(2==execResponse.status.listStatus[i].status.statusCode||7==execResponse.status.listStatus[i].status.statusCode)return void optionMessageControl.show($scope,"reportLayoutNm",$filter("owfMessage")(execResponse.status.listStatus[i].status.messageCode,execResponse.status.listStatus[i].status.messageReplaceValue));statusInfo.isSuccessAndShowMessage(execResponse,"inputform")&&successFunc(execResponse)})}})}})},function(){owsCommon.syncExec(function(){gridDirectiveControl.validity($scope.gridOptions,!0)})})};var updateRowNumber=function(body){var i=1;angular.forEach(body,function(row){row.lineNo=i++})};$scope.displayIsReportEdit=function(){return"1"==displayFlg},$scope.changePrinterGroup=function(){if(null==$scope.pLayoutPrintSetting.printerGroupId)return $scope.printerList=[],void($scope.printerAttributeList=[]);var request={};request.printerGroupId=$scope.pLayoutPrintSetting.printerGroupId,api.dropdownList.printer(request).then(function(response){$scope.printerList=response.data,$scope.changePrinter()})},$scope.changePrinter=function(){if(null==$scope.pLayoutPrintSetting.printerId)return void($scope.printerAttributeList=[]);var request={};request.printerId=$scope.pLayoutPrintSetting.printerId,api.dropdownList.printerAttribute(request).then(function(response){$scope.printerAttributeList=response.data})},$scope.initScreen()}]),angular.module("oneslogiWeb.ReportLayoutList",[]).factory("reportLayoutListApi",["AngularAPIClient",function(AngularAPIClient){return{reportList:AngularAPIClient.make([["query","GET","resources/common/reportCD/keyValueList"]]),reportLayoutList:AngularAPIClient.make([["init","GET","resources/master/reportLayoutList/init"],["search","GET","resources/master/reportLayoutList/search"],["checkDelete","POST","resources/master/reportLayoutList/checkDelete"],["delete","POST","resources/master/reportLayoutList/delete"],["downloadLayout","POST","resources/master/reportLayoutList/downloadLayout"]])}}]).controller("ReportLayoutList",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","reportLayoutListApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.reportLayoutListCols=[{field:"preport.reportCd",displayName:"帳票CD"},{field:"preport.reportNm",displayName:"帳票名"},{field:"vdict.dictNm",displayName:"帳票レイアウト名"}],$scope.initScreen=function(){$scope.screenMode=$route.current.params.mode,$scope.isopen=!0,$scope.pagingOptions=owsCommon.getDefaultPagingOptions(),$scope.pagingOptions.setPageData=function(){$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.gridOptions=owsCommon.mergePagingMultiSelectGridOptions({data:"reportLayoutList",columnDefs:"reportLayoutListCols",pagingOptions:$scope.pagingOptions}),$scope.initScreenHttp()},$scope.initScreenHttp=function(response){$q.all([$scope.reportList()]).then(function(response){return $scope.deferredGetInitData()})},$scope.reportList=function(){var deferred=$q.defer(),request={};return api.reportList.query(request).then(function(response){$scope.reportCdList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer();return api.reportLayoutList.init().then(function(response){$scope.head=response.data.head,$scope.reportLayoutList=response.data.body,$scope.paging=response.paging,owsHistory.hasState()?($scope.head=owsHistory.popState(),$scope.search()):$route.current.params.reportCd&&($scope.head.reportCd=$route.current.params.reportCd,$scope.search()),owsCommon.setFirstFocus(),deferred.resolve()}),deferred.promise},$scope.search=function(){owsCommon.clearPagingOptions($scope.gridOptions),$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.getPagedDataAsync=function(pageSize,page){var request={};request.data={},request.data.head=$scope.head,owsCommon.setPagingData(request,$scope.paging,pageSize,page),api.reportLayoutList.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchform"),$scope.setPagingData(response,page,pageSize)})},$scope.setPagingData=function(response,page,pageSize){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.reportLayoutList=response.data.body,$scope.gridOptions.totalItems=response.paging.allRecordCount,owsHistory.replaceState($scope.head)},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.gridDblClick=function(row){owsCommon.syncButtonExec("update",row)},$scope.deletedata=function(){var listBody=[];if(0==$scope.reportLayoutList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");if(!($scope.gridOptions.gridApi.selection.getSelectedRows().length>1)||owsCommon.viewConfirm("confirmDeleteRow")){for(var row=0;row<$scope.gridOptions.gridApi.selection.getSelectedRows().length;row++)listBody.push($scope.gridOptions.gridApi.selection.getSelectedRows()[row]);var request={};request.data={},request.data.body=listBody,api.reportLayoutList.checkDelete(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&api.reportLayoutList.delete(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&$scope.search()})})}},$scope.register=function(){$location.path("base/common/ReportLayoutUpload").search({})},$scope.initScreen(),$scope.copy=function(){return 0==$scope.reportLayoutList.length?void alertMessage.setErrorMessageByCode("detailLineNotDisplayError"):0==$scope.gridOptions.gridApi.selection.getSelectedRows().length?void alertMessage.setErrorMessageByCode("lineNotSelectError"):$scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):void $location.path("base/master/ReportLayoutCopy").search({}).search("mode",SCREEN_MODE.Insert).search("displayFlg","1").search("reportLayoutId",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].reportLayoutId)},$scope.update=function(){return 0==$scope.reportLayoutList.length?void alertMessage.setErrorMessageByCode("detailLineNotDisplayError"):0==$scope.gridOptions.gridApi.selection.getSelectedRows().length?void alertMessage.setErrorMessageByCode("lineNotSelectError"):$scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):void $location.path("base/master/ReportLayoutEdit").search({}).search("mode",SCREEN_MODE.Update).search("displayFlg","1").search("reportLayoutId",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].reportLayoutId)},$scope.subRepUpdate=function(){return 0==$scope.reportLayoutList.length?void alertMessage.setErrorMessageByCode("detailLineNotDisplayError"):0==$scope.gridOptions.gridApi.selection.getSelectedRows().length?void alertMessage.setErrorMessageByCode("lineNotSelectError"):$scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):void $location.path("base/master/ReportLayoutEdit").search({}).search("mode",SCREEN_MODE.Update).search("displayFlg","2").search("reportLayoutId",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].reportLayoutId)},$scope.downloadLayout=function(){if($scope.gridOptions.gridApi.selection.getSelectedRows().length>1)return void alertMessage.setErrorMessageByCode("onlyOneSelect");for(var listBody=[],row=0;row<$scope.gridOptions.gridApi.selection.getSelectedRows().length;row++)listBody.push($scope.gridOptions.gridApi.selection.getSelectedRows()[row]);var request={};request.data={},request.data.body=listBody,api.reportLayoutList.downloadLayout(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&(location.href=response.output.downloadUrl)})}}]),angular.module("oneslogiWeb.ReportMaster",[]).factory("reportMasterApi",["AngularAPIClient",function(AngularAPIClient){return{dropdownList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),reportList:AngularAPIClient.make([["init","GET","resources/master/reportMaster/init"],["search","GET","resources/master/reportMaster/search"],["excel","GET","resources/master/reportMaster/search","excel"],["inputCheck","POST","resources/master/reportMaster/inputCheck"],["register","POST","resources/master/reportMaster/register"]])}}]).controller("ReportMaster",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","reportMasterApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.reportListCols=[{field:"reportCd",displayName:"帳票CD"},{field:"reportNm",displayName:"帳票名称"},{field:"delFlg",displayName:"削除フラグ"}],$scope.initScreen=function(){$scope.isopen=!0,$scope.pagingOptions=owsCommon.getDefaultPagingOptions(),$scope.pagingOptions.setPageData=function(){$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.gridOptions=owsCommon.mergePagingMultiSelectGridOptions({data:"reportList",columnDefs:"reportListCols",pagingOptions:$scope.pagingOptions}),$scope.gridSelectOptions={delFlg:{key:"classCd",value:"classNm",listModel:"delFlgList"}},$scope.gridEventOptions={reportCd:{"ng-change":{eventFunction:"reportCdBlur(row.rowIndex)"}},reportNm:{"ng-change":{eventFunction:"reportNmBlur(row.rowIndex)"}},delFlg:{"ng-change":{eventFunction:"delFlgChange(row.rowIndex)"}}},$scope.initScreenHttp()},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetDelFlg()]).then(function(response){return $scope.deferredGetInitData()})},$scope.reportCdBlur=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.reportNmBlur=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.delFlgChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.deferredGetDelFlg=function(){var deferred=$q.defer(),request={};return request.classCd="PHYSICAL_DELETE",api.dropdownList.query(request).then(function(response){$scope.delFlgList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer();return api.reportList.init().then(function(response){$scope.head=response.data.head,$scope.reportList=response.data.body,$scope.paging=response.paging,$scope.blankRow=response.data.blankRow,$scope.head.delFlg=owsCommon.getDefaultValue($scope.delFlgList),owsHistory.hasState()&&($scope.head=owsHistory.popState(),$scope.search()),owsCommon.setFirstFocus(),deferred.resolve()}),deferred.promise},$scope.search=function(){owsCommon.clearPagingOptions($scope.gridOptions),$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.getPagedDataAsync=function(pageSize,page){var request={};
request.data={},request.data.head=$scope.head,owsCommon.setPagingData(request,$scope.paging,pageSize,page),api.reportList.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform"),$scope.setPagingData(response,page,pageSize)})},$scope.setPagingData=function(response,page,pageSize){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.reportList=response.data.body;for(var row=0;row<$scope.reportList.length;row++)gridDirectiveControl.editable($scope.gridOptions,"reportCd",!1,row);$scope.gridOptions.totalItems=response.paging.allRecordCount,owsHistory.replaceState($scope.head)},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.excelOutput=function(){var request={};request.data={},request.data.head=$scope.head,owsCommon.setOutputOptions(request,$scope.gridOptions,"body",document.title),api.reportList.excel(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&(location.href=response.output.downloadUrl)})},$scope.addRow=function(){$scope.blankRow.delFlg=owsCommon.getDefaultValue($scope.delFlgList),$scope.reportList.push(angular.copy($scope.blankRow)),gridDirectiveControl.editable($scope.gridOptions,"delFlg",!1,$scope.reportList.length-1)},$scope.removeRow=function(){var i=0;if(angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){if($scope.reportList.indexOf(row)>-1&&null!=row.reportId)return void(i+=1)}),i>0)return void alertMessage.setErrorMessageByCode("alreadyRegisteredCannotDeleteError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("deleteRowErrNotSelect");for(var item=0,row=0;row<$scope.gridOptions.gridApi.selection.getSelectedRows().length;row++)(""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[row].reportCd&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[row].reportCd||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[row].reportNm&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[row].reportNm||$scope.gridOptions.gridApi.selection.getSelectedRows()[row].delFlg!=owsCommon.getDefaultValue($scope.delFlgList))&&item++;if(item>0){if(!owsCommon.viewConfirm("deleteRowAlreadyInputConfirmation"))return}else if($scope.gridOptions.gridApi.selection.getSelectedRows().length>1&&!owsCommon.viewConfirm("deleteRowMultipleConfirmation"))return;angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){$scope.reportList.indexOf(row)>-1&&$scope.reportList.splice($scope.reportList.indexOf(row),1)}),owsCommon.toggleSelectAll($scope.gridOptions,!1)},$scope.reportLayoutList=function(){return 0==$scope.gridOptions.gridApi.selection.getSelectedRows().length?void alertMessage.setErrorMessageByCode("lineNotSelectError"):$scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):null==$scope.gridOptions.gridApi.selection.getSelectedRows()[0].reportId?void alertMessage.setErrorMessageByCode("dataNotFoundTransitionError"):void $location.path("base/master/ReportLayoutList").search({}).search("reportCd",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].reportCd)},$scope.register=function(){optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions);var listBody=[],emptyBody=[];if(0==$scope.reportList.length)return void alertMessage.setErrorMessageByCode("noDetailsError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");var allBody=$scope.gridOptions.gridApi.grid.rows;gridDirectiveControl.validity($scope.gridOptions,!1,gridDirectiveControl.blankRows($scope.gridOptions));for(var row=0;row<$scope.reportList.length;row++)gridDirectiveControl.isBlankRow($scope.gridOptions,row)?emptyBody.push($scope.reportList[row]):row<=allBody.length&&0==$scope.gridOptions.getSelection(allBody[row])?(gridDirectiveControl.validity($scope.gridOptions,!1,row),emptyBody.push($scope.reportList[row])):listBody.push($scope.reportList[row]);var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.searchinputform)]);promiseAll.then(function(){owsCommon.syncExec(function(){$scope.searchinputform.$invalid;if(0==listBody.length)return void alertMessage.setErrorMessageByCode("noDetailsError");for(var j=0,rowIndex=new Array,allBodyNo=(new Array,$scope.gridOptions.gridApi.grid.rows),row=0;row<$scope.reportList.length;row++)if(row<=allBodyNo.length&&1==$scope.gridOptions.getSelection(allBodyNo[row]))for(var reportCd=$scope.reportList[row].reportCd,i=row+1;i<$scope.reportList.length;i++)i<=allBodyNo.length&&1==$scope.gridOptions.getSelection(allBodyNo[i])&&$scope.reportList[i].reportCd==reportCd&&(rowIndex[j]=i,j++);if(j>0){var messageCd="reportCdDuplicateError";return gridOptionMessageControl.show($scope.gridOptions,"reportCd",$filter("owfMessage")(messageCd),rowIndex),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,rowIndex[0]),void directiveControl.firstErrorOnFocus("searchinputform")}gridDirectiveControl.validity($scope.gridOptions,!0),angular.forEach(emptyBody,function(row){$scope.reportList.splice($scope.reportList.indexOf(row),1)});var request={};request.data={},request.data.body=listBody,api.reportList.inputCheck(request).then(function(response){if(1!=response.status.statusCode){if(null!=response.status.listStatus){for(var firstErrIndex,isBln=!1,i=0;i<response.status.listStatus.length;i++)if(7==response.status.listStatus[i].status.statusCode&&(gridOptionMessageControl.show($scope.gridOptions,"reportCd",$filter("owfMessage")(response.status.listStatus[i].status.messageCode,response.status.listStatus[i].status.messageReplaceValue),response.status.listStatus[i].status.rowIndex),isBln=!0,firstErrIndex||(firstErrIndex=response.status.listStatus[i].status.rowIndex),isBln))return gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,firstErrIndex),void directiveControl.firstErrorOnFocus("searchinputform");return}}else if(!statusInfo.isSuccessAndShowMessage(response,"searchinputform"))return;api.reportList.register(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&$scope.initScreenHttp()}),owsCommon.toggleSelectAll($scope.gridOptions,!1)})})})},$scope.initScreen()}]),angular.module("oneslogiWeb.RoleGrpEdit",[]).factory("roleGrpEditApi",["AngularAPIClient",function(AngularAPIClient){return{keyValueList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),roleGrpEdit:AngularAPIClient.make([["initNew","GET","resources/base/master/roleGrpEdit/initNew"],["initUpdate","GET","resources/base/master/roleGrpEdit/initUpdate"],["inputCheck","POST","resources/base/master/roleGrpEdit/inputCheck"],["register","POST","resources/base/master/roleGrpEdit/register"],["update","POST","resources/base/master/roleGrpEdit/update"]])}}]).controller("RoleGrpEdit",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","roleGrpEditApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.roleGrpEditCols=[{field:"roleCd",displayName:"権限CD"},{field:"vdict.dictNm",displayName:"権限名"},{field:"broleGrpDtlList[0].applyOrder",displayName:"適用順序"},{field:"roleControlClass",displayName:"権限制御区分"}];var bodyList;$scope.initScreen=function(){$scope.screenMode=$route.current.params.mode,$scope.gridOptions=owsCommon.mergeEntryNonSelectGridOptions({data:"roleGrpEdit",columnDefs:"roleGrpEditCols"}),$scope.initScreenHttp()},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetRoleControlClassList()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetRoleControlClassList=function(){var deferred=$q.defer(),request={};return request.classCd="ROLE_CONTROL_CLASS",api.keyValueList.query(request).then(function(response){$scope.roleControlClassList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer();if($scope.screenMode==SCREEN_MODE.Update||$scope.screenMode==SCREEN_MODE.Copy){var request={};request.roleGrpId=$route.current.params.roleGrpId,api.roleGrpEdit.initUpdate(request).then(function(response){return statusInfo.isSuccessAndShowMessage(response,"inputform")?($scope.head=response.data.head,$scope.roleGrpEdit=response.data.body,bodyList=response.data.body,$scope.screenMode==SCREEN_MODE.Update&&directiveControl.editable($scope,"roleGrpCd",!1),owsCommon.setFirstFocus("inputform"),void deferred.resolve()):(history.back(),void deferred.reject())})}else api.roleGrpEdit.initNew().then(function(response){return statusInfo.isSuccessAndShowMessage(response,"inputform")?($scope.head=response.data.head,$scope.roleGrpEdit=response.data.body,bodyList=response.data.body,owsCommon.setFirstFocus(),void deferred.resolve()):void deferred.reject()});return deferred.promise},$scope.register=function(){optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions);gridDirectiveControl.validity($scope.gridOptions,!1,gridDirectiveControl.blankRows($scope.gridOptions));for(var j=0,rowIndex=new Array,row=(new Array,0);row<$scope.roleGrpEdit.length;row++)if($scope.roleGrpEdit[row].broleGrpDtlList.length>0){var applyOrder=$scope.roleGrpEdit[row].broleGrpDtlList[0].applyOrder;if(null!=applyOrder)for(var i=row+1;i<$scope.roleGrpEdit.length;i++)$scope.roleGrpEdit[i].broleGrpDtlList.length>0&&$scope.roleGrpEdit[i].broleGrpDtlList[0].applyOrder==applyOrder&&""!=applyOrder&&(rowIndex[j]=i,j++)}if(j>0){var messageCd="applyOrderDuplicateError";return gridOptionMessageControl.show($scope.gridOptions,"broleGrpDtlList[0].applyOrder",$filter("owfMessage")(messageCd),rowIndex),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,rowIndex[0]),void directiveControl.firstErrorOnFocus("inputform")}var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.inputform)]);promiseAll.then(function(){owsCommon.syncExec(function(){var isError=$scope.inputform.$invalid;if(isError)return void directiveControl.firstErrorOnFocus("inputform");var checkFunc,execFunc,successFunc;$scope.screenMode==SCREEN_MODE.Update?(checkFunc=api.roleGrpEdit.inputCheck,execFunc=api.roleGrpEdit.update,successFunc=function(response){owsCommon.viewInfoAndHistoryBack(response.status.messageCode,response.status.messageReplaceValue)}):(checkFunc=api.roleGrpEdit.inputCheck,execFunc=api.roleGrpEdit.register,successFunc=function(){$scope.screenMode==SCREEN_MODE.Register&&$scope.initScreenHttp()});var request={};request.data={},request.data.head=$scope.head,request.data.body=bodyList,$scope.screenMode==SCREEN_MODE.Copy&&(request.data.head.roleGrpId=null),checkFunc(request).then(function(checkResponse){if(null!=checkResponse.status.listStatus)for(var i=0;i<checkResponse.status.listStatus.length;i++){if(6==checkResponse.status.listStatus[i].status.statusCode)return void optionMessageControl.show($scope,"roleGrpCd",$filter("owfMessage")(checkResponse.status.listStatus[i].status.messageCode,checkResponse.status.listStatus[i].status.messageReplaceValue));if(2==checkResponse.status.listStatus[i].status.statusCode)return void optionMessageControl.show($scope,"roleGrpNm",$filter("owfMessage")(checkResponse.status.listStatus[i].status.messageCode,checkResponse.status.listStatus[i].status.messageReplaceValue))}statusInfo.isSuccessAndShowMessage(checkResponse,"inputform")&&execFunc(request).then(function(execResponse){(execFunc!=api.roleGrpEdit.register||statusInfo.isSuccessAndShowMessage(execResponse,"inputform"))&&successFunc(execResponse)})})})},function(){owsCommon.syncExec(function(){gridDirectiveControl.validity($scope.gridOptions,!0)})})},$scope.initScreen()}]),angular.module("oneslogiWeb.RoleGrpList",[]).factory("roleGrpListApi",["AngularAPIClient",function(AngularAPIClient){return{keyValueList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),roleGrpList:AngularAPIClient.make([["init","GET","resources/base/master/roleGrpList/init"],["search","GET","resources/base/master/roleGrpList/search"],["checkDelete","POST","resources/base/master/roleGrpList/checkDelete"],["delete","POST","resources/base/master/roleGrpList/delete"]])}}]).controller("RoleGrpList",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","roleGrpListApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.roleGrpListCols=[{field:"roleGrpCd",displayName:"権限グループCD"},{field:"vdict.dictNm",displayName:"権限グループ名"},{field:"roleControlClass",displayName:"権限制御区分CD"},{field:"bclassDtlByRoleControlClass.vdict.dictNm",displayName:"権限制御区分名称"}],$scope.initScreen=function(){$scope.isopen=!0,$scope.pagingOptions=owsCommon.getDefaultPagingOptions(),$scope.pagingOptions.setPageData=function(){$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.gridOptions=owsCommon.mergePagingMultiSelectGridOptions({data:"roleGrpList",columnDefs:"roleGrpListCols",pagingOptions:$scope.pagingOptions}),$scope.initScreenHttp()},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetRoleControlClassList()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetRoleControlClassList=function(){var deferred=$q.defer(),request={};return request.classCd="ROLE_CONTROL_CLASS",api.keyValueList.query(request).then(function(response){$scope.roleControlClassList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer();return api.roleGrpList.init().then(function(response){$scope.searchCondition=response.data.head,$scope.roleGrpList=response.data.body,$scope.paging=response.paging,owsHistory.hasState()&&($scope.searchCondition=owsHistory.popState(),$scope.search()),owsCommon.setFirstFocus(),deferred.resolve()}),deferred.promise},$scope.search=function(){owsCommon.clearPagingOptions($scope.gridOptions),$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.getPagedDataAsync=function(pageSize,page){var request={};request.data={},request.data.head=$scope.searchCondition,owsCommon.setPagingData(request,$scope.paging,pageSize,page),api.roleGrpList.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform"),$scope.setPagingData(response,page,pageSize)})},$scope.setPagingData=function(response,page,pageSize){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.roleGrpList=response.data.body,$scope.gridOptions.totalItems=response.paging.allRecordCount,owsHistory.replaceState($scope.searchCondition)},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.gridDblClick=function(row){owsCommon.syncButtonExec("update",row)},$scope.deletedata=function(){var listBody=[];if(0==$scope.roleGrpList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");if(!($scope.gridOptions.gridApi.selection.getSelectedRows().length>1)||owsCommon.viewConfirm("confirmDeleteRow")){for(var row=0;row<$scope.gridOptions.gridApi.selection.getSelectedRows().length;row++)listBody.push($scope.gridOptions.gridApi.selection.getSelectedRows()[row]);var request={};request.data={},request.data.body=listBody,api.roleGrpList.checkDelete(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&api.roleGrpList.delete(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&$scope.search()})})}},$scope.copy=function(){return 0==$scope.roleGrpList.length?void alertMessage.setErrorMessageByCode("detailLineNotDisplayError"):0==$scope.gridOptions.gridApi.selection.getSelectedRows().length?void alertMessage.setErrorMessageByCode("lineNotSelectError"):$scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):void $location.path("base/master/RoleGrpEdit").search({}).search("mode",SCREEN_MODE.Copy).search("roleGrpId",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].roleGrpId)},$scope.register=function(){$location.path("base/master/RoleGrpEdit").search({}).search("mode",SCREEN_MODE.Register)},$scope.initScreen(),$scope.update=function(){return 0==$scope.roleGrpList.length?void alertMessage.setErrorMessageByCode("detailLineNotDisplayError"):0==$scope.gridOptions.gridApi.selection.getSelectedRows().length?void alertMessage.setErrorMessageByCode("lineNotSelectError"):$scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):void $location.path("base/master/RoleGrpEdit").search({}).search("mode",SCREEN_MODE.Update).search("roleGrpId",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].roleGrpId)}}]),angular.module("oneslogiWeb.RoleList",[]).factory("roleListApi",["AngularAPIClient",function(AngularAPIClient){return{roleList:AngularAPIClient.make([["init","GET","resources/base/master/roleListResource/init"],["search","GET","resources/base/master/roleListResource/search"],["checkDelete","POST","resources/base/master/roleListResource/checkDelete"],["delete","POST","resources/base/master/roleListResource/delete"]])}}]).controller("RoleList",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","roleListApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.roleListCols=[{field:"roleCd",displayName:"権限CD"},{field:"vdict.dictNm",displayName:"権限名"}],$scope.initScreen=function(){$scope.isopen=!0,$scope.roleList=userInfo.roleList,$scope.pagingOptions=owsCommon.getDefaultPagingOptions(),$scope.pagingOptions.setPageData=function(){$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.gridOptions=owsCommon.mergePagingMultiSelectGridOptions({data:"roleList",columnDefs:"roleListCols",pagingOptions:$scope.pagingOptions}),$scope.initScreenHttp()},$scope.initScreenHttp=function(response){$q.all([]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetInitData=function(){var deferred=$q.defer();return api.roleList.init().then(function(response){$scope.head=response.data.head,$scope.roleList=response.data.body,$scope.paging=response.paging,owsHistory.hasState()&&($scope.head=owsHistory.popState(),$scope.search()),owsCommon.setFirstFocus(),deferred.resolve()}),deferred.promise},$scope.search=function(){owsCommon.clearPagingOptions($scope.gridOptions),$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.getPagedDataAsync=function(pageSize,page){var request={};request.data={},request.data.head=$scope.head,owsCommon.setPagingData(request,$scope.paging,pageSize,page),api.roleList.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform"),$scope.setPagingData(response,page,pageSize)})},$scope.setPagingData=function(response,page,pageSize){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.roleList=response.data.body,$scope.gridOptions.totalItems=response.paging.allRecordCount,owsHistory.replaceState($scope.head)},$scope.gridDblClick=function(row){owsCommon.syncButtonExec("updateScreen",row)},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.deletedata=function(){var listBody=[];if(0==$scope.roleList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");if(!($scope.gridOptions.gridApi.selection.getSelectedRows().length>1)||owsCommon.viewConfirm("confirmDeleteRow")){for(var row=0;row<$scope.gridOptions.gridApi.selection.getSelectedRows().length;row++)listBody.push($scope.gridOptions.gridApi.selection.getSelectedRows()[row]);var request={};request.data={},request.data.body=listBody,api.roleList.checkDelete(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&api.roleList.delete(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&$scope.search()})})}},$scope.copy=function(){if(0==$scope.roleList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");if($scope.gridOptions.gridApi.selection.getSelectedRows().length>1)return void alertMessage.setErrorMessageByCode("onlyOneSelect");var items={roleId:$scope.gridOptions.gridApi.selection.getSelectedRows()[0].roleId,mode:SCREEN_MODE.Copy},modalInstance=modalFactory.modalRoleList(items);modalInstance.result.then(function(items){$scope.search()})},$scope.register=function(){$location.path("base/master/ScreenRoleEdit").search({}).search("mode",SCREEN_MODE.Register)},$scope.initScreen(),$scope.updateScreen=function(){return 0==$scope.roleList.length?void alertMessage.setErrorMessageByCode("detailLineNotDisplayError"):0==$scope.gridOptions.gridApi.selection.getSelectedRows().length?void alertMessage.setErrorMessageByCode("lineNotSelectError"):$scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):void $location.path("base/master/ScreenRoleEdit").search({}).search("mode",SCREEN_MODE.Update).search("roleId",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].roleId)},$scope.updateItem=function(){return 0==$scope.roleList.length?void alertMessage.setErrorMessageByCode("detailLineNotDisplayError"):0==$scope.gridOptions.gridApi.selection.getSelectedRows().length?void alertMessage.setErrorMessageByCode("lineNotSelectError"):$scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):void $location.path("base/master/ScreenItemRoleEdit").search({}).search("mode",SCREEN_MODE.Update).search("roleId",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].roleId)},$scope.updateScreenColRole=function(){return 0==$scope.roleList.length?void alertMessage.setErrorMessageByCode("detailLineNotDisplayError"):0==$scope.gridOptions.gridApi.selection.getSelectedRows().length?void alertMessage.setErrorMessageByCode("lineNotSelectError"):$scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):void $location.path("base/master/ScreenColRoleEdit").search({}).search("mode",SCREEN_MODE.Update).search("roleId",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].roleId)}}]),angular.module("oneslogiWeb.RoleListCopy",[]).factory("roleListCopyApi",["AngularAPIClient",function(AngularAPIClient){return{keyValueList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),limitToMessageCD:AngularAPIClient.make([["query","GET","resources/common/class/limitToMessageCD"]]),roleListCopy:AngularAPIClient.make([["copy","GET","resources/base/master/roleListCopy/copy"],["inputCheck","POST","resources/base/master/roleListCopy/inputCheck"],["register","POST","resources/base/master/roleListCopy/register"]])}}]).controller("RoleListCopy",["$scope","$route","$modalInstance","$route","$filter","$location","$q","alertMessage","directiveControl","optionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","roleListCopyApi","items",function($scope,$route,$modalInstance,$route,$filter,$location,$q,alertMessage,directiveControl,optionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api,items){$scope.initScreen=function(){$scope.isopen=!0,items&&$scope.initRoleListCopyHttp(items.roleId)},$scope.initRoleListCopyHttp=function(roleId){$q.all([]).then(function(response){return $scope.deferredGetInitData(roleId)})},$scope.deferredGetInitData=function(roleId){var deferred=$q.defer(),request={};return request.roleId=roleId,api.roleListCopy.copy(request).then(function(response){return statusInfo.isSuccessAndShowMessage(response,"inputform")?($scope.head=response.data.head,bodyList=response.data.body,owsCommon.setFirstFocus("inputform"),void deferred.resolve()):(history.back(),void deferred.reject())}),deferred.promise},$scope.clickOk=function(){var screenscope=angular.element($("div[owd-screen = 'RoleListCopy']")).scope();optionMessageControl.hideAll($scope),owsCommon.syncExec(function(){var checkFunc,execFunc,isError=screenscope.inputform.$invalid;checkFunc=api.roleListCopy.inputCheck,execFunc=api.roleListCopy.register;var request={};return request.data={},request.data.head=$scope.head,request.data.body=bodyList,isError?void directiveControl.firstErrorOnFocus("inputform"):void checkFunc(request).then(function(checkResponse){if(null!=checkResponse.status.listStatus)for(var i=0;i<checkResponse.status.listStatus.length;i++){if(6==checkResponse.status.listStatus[i].status.statusCode)return void optionMessageControl.show(screenscope,"roleCd",$filter("owfMessage")(checkResponse.status.listStatus[i].status.messageCode,checkResponse.status.listStatus[i].status.messageReplaceValue));if(2==checkResponse.status.listStatus[i].status.statusCode)return void optionMessageControl.show(screenscope,"roleNm",$filter("owfMessage")(checkResponse.status.listStatus[i].status.messageCode,checkResponse.status.listStatus[i].status.messageReplaceValue))}return isError?void directiveControl.firstErrorOnFocus("inputform"):void(statusInfo.isSuccessAndShowMessage(checkResponse,"inputform")&&execFunc(request).then(function(execResponse){$modalInstance.close(items.roleGrpId),!statusInfo.isSuccessAndShowMessage(execResponse,"inputform")}))})})},$scope.modalClose=function(){$modalInstance.dismiss()},$scope.initScreen()}]),angular.module("oneslogiWeb.ScreenColEdit",[]).factory("screenColEditEditApi",["AngularAPIClient",function(AngularAPIClient){return{screenList:AngularAPIClient.make([["query","GET","resources/common/display/screenValue"]]),gridList:AngularAPIClient.make([["query","GET","resources/common/screenItem/itemTypeValue"]]),keyValueList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),limitToMessageCD:AngularAPIClient.make([["query","GET","resources/common/class/limitToMessageCD"]]),screenColEdit:AngularAPIClient.make([["initNew","GET","resources/base/master/screenColEdit/initNew"],["search","GET","resources/base/master/screenColEdit/search"],["inputCheck","POST","resources/base/master/screenColEdit/inputCheck"],["update","POST","resources/base/master/screenColEdit/update"]])}}]).controller("ScreenColEdit",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","screenColEditEditApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){var screenId,inputLimit=[];$scope.ScreenColEditCols=[{field:"colCd",displayName:"列CD"},{field:"vdict.dictNm",displayName:"列名称"},{field:"colOrder",displayName:"列順序"},{field:"colType",displayName:"列型"},{field:"visible",displayName:"表示可否"},{field:"editable",displayName:"編集可否"},{field:"textAlign",displayName:"表示位置"},{field:"necessary",displayName:"必須"},{field:"colWidth",displayName:"列幅"},{field:"inColIndex",displayName:"入力ファイル列位置"},{field:"inColDefaultValue",displayName:"入力ファイル列規定値"},{field:"bcolValidAsOne.inputLimit",displayName:"入力文字制限"},{field:"bcolValidAsOne.limitMessageCd",displayName:"制限メッセージCD"},{field:"bcolValidAsOne.minChars",displayName:"最小文字数"},{field:"bcolValidAsOne.maxChars",displayName:"最大文字数"},{field:"bcolValidAsOne.minNumber",displayName:"最小値"},{field:"bcolValidAsOne.maxNumber",displayName:"最大値"},{field:"bcolValidAsOne.integerLength",displayName:"整数桁数"},{field:"bcolValidAsOne.decimalLength",displayName:"小数桁数"},{field:"delFlg",displayName:"削除"}],$scope.initScreen=function(){$scope.isopen=!0,screenId=$route.current.params.screenId,$scope.gridOptions=owsCommon.mergeEntryGridOptions({data:"body",columnDefs:"ScreenColEditCols"}),$scope.gridSelectOptions={colType:{key:"classCd",value:"classNm",listModel:"colTypeList"},visible:{key:"classCd",value:"classNm",listModel:"visibleList"},editable:{key:"classCd",value:"classNm",listModel:"editableList"},textAlign:{key:"classCd",value:"classNm",listModel:"textAlignList"},necessary:{key:"classCd",value:"classNm",listModel:"necessaryList"},"bcolValidAsOne.inputLimit":{key:"classCd",value:"classNm",listModel:"inputLimitList"},delFlg:{key:"classCd",value:"classNm",listModel:"delFlgList"}},$scope.gridEventOptions={colCd:{"ng-change":{eventFunction:"colCdChange(row.rowIndex)"}},"vdict.dictNm":{"ng-change":{eventFunction:"colNmChange(row.rowIndex)"}},colOrder:{"ng-change":{eventFunction:"colOrderChange(row.rowIndex)"}},colType:{"ng-blur":{eventFunction:"colTypeBlur(row.rowIndex)"},"ng-change":{eventFunction:"colTypeChange(row.rowIndex)"}},visible:{"ng-change":{eventFunction:"visibleChange(row.rowIndex)"}},editable:{"ng-change":{eventFunction:"editableChange(row.rowIndex)"}},textAlign:{"ng-change":{eventFunction:"textAlignChange(row.rowIndex)"}},necessary:{"ng-change":{eventFunction:"necessaryChange(row.rowIndex)"}},colWidth:{"ng-change":{eventFunction:"colWidthChange(row.rowIndex)"}},inColIndex:{"ng-change":{eventFunction:"inColIndexChange(row.rowIndex)"}},inColDefaultValue:{"ng-change":{eventFunction:"inColDefaultValueChange(row.rowIndex)"}},"bcolValidAsOne.inputLimit":{"ng-blur":{eventFunction:"inputLimitBlur(row.rowIndex)"},"ng-change":{eventFunction:"inputLimitChange(row.rowIndex)"}},"bcolValidAsOne.limitMessageCd":{"ng-change":{eventFunction:"limitMessageCdChange(row.rowIndex)"}},"bcolValidAsOne.minChars":{"ng-change":{eventFunction:"minCharsChange(row.rowIndex)"}},"bcolValidAsOne.maxChars":{"ng-change":{eventFunction:"maxCharsChange(row.rowIndex)"}},"bcolValidAsOne.minNumber":{"ng-change":{eventFunction:"minNumberChange(row.rowIndex)"}},"bcolValidAsOne.maxNumber":{"ng-change":{eventFunction:"maxNumberChange(row.rowIndex)"}},"bcolValidAsOne.integerLength":{"ng-change":{eventFunction:"integerLengthChange(row.rowIndex)"}},"bcolValidAsOne.decimalLength":{"ng-change":{eventFunction:"decimalLengthChange(row.rowIndex)"}},delFlg:{"ng-change":{eventFunction:"delFlgChange(row.rowIndex)"}}},statusInfo.mappingGridErrorMessage($scope.gridOptions,"vdict.dictNm",2,0),statusInfo.mappingGridErrorMessage($scope.gridOptions,"colOrder",7,0),$scope.initScreenHttp()},$scope.colTypeBlur=function(rowIndex){$scope.ColTypeEditable($scope.body[rowIndex].colType,rowIndex)},$scope.ColTypeEditable=function(colType,rowIndex){"text"==colType?($scope.textGridDirectiveControl(rowIndex),null!=$scope.body[rowIndex].bcolValidAsOne&&($scope.body[rowIndex].bcolValidAsOne.minNumber=null,
$scope.body[rowIndex].bcolValidAsOne.maxNumber=null,$scope.body[rowIndex].bcolValidAsOne.integerLength=null,$scope.body[rowIndex].bcolValidAsOne.decimalLength=null)):"number"==colType?($scope.numberGridDirectiveControl(rowIndex),null!=$scope.body[rowIndex].bcolValidAsOne&&($scope.body[rowIndex].bcolValidAsOne.inputLimit="",$scope.body[rowIndex].bcolValidAsOne.limitMessageCd="",$scope.body[rowIndex].bcolValidAsOne.minChars=null,$scope.body[rowIndex].bcolValidAsOne.maxChars=null)):($scope.otherGridDirectiveControl(rowIndex),null!=$scope.body[rowIndex].bcolValidAsOne&&($scope.body[rowIndex].bcolValidAsOne.inputLimit="",$scope.body[rowIndex].bcolValidAsOne.limitMessageCd="",$scope.body[rowIndex].bcolValidAsOne.minChars=null,$scope.body[rowIndex].bcolValidAsOne.maxChars=null,$scope.body[rowIndex].bcolValidAsOne.minNumber=null,$scope.body[rowIndex].bcolValidAsOne.maxNumber=null,$scope.body[rowIndex].bcolValidAsOne.integerLength=null,$scope.body[rowIndex].bcolValidAsOne.decimalLength=null))},$scope.textGridDirectiveControl=function(rowIndex){gridDirectiveControl.editable($scope.gridOptions,["bcolValidAsOne.inputLimit","bcolValidAsOne.limitMessageCd","bcolValidAsOne.minChars","bcolValidAsOne.maxChars"],!0,rowIndex),gridDirectiveControl.editable($scope.gridOptions,["bcolValidAsOne.minNumber","bcolValidAsOne.maxNumber","bcolValidAsOne.integerLength","bcolValidAsOne.decimalLength"],!1,rowIndex)},$scope.numberGridDirectiveControl=function(rowIndex){gridDirectiveControl.editable($scope.gridOptions,["bcolValidAsOne.inputLimit","bcolValidAsOne.limitMessageCd","bcolValidAsOne.minChars","bcolValidAsOne.maxChars"],!1,rowIndex),gridDirectiveControl.editable($scope.gridOptions,["bcolValidAsOne.minNumber","bcolValidAsOne.maxNumber","bcolValidAsOne.integerLength","bcolValidAsOne.decimalLength"],!0,rowIndex)},$scope.otherGridDirectiveControl=function(rowIndex){gridDirectiveControl.editable($scope.gridOptions,["bcolValidAsOne.inputLimit","bcolValidAsOne.limitMessageCd","bcolValidAsOne.minChars","bcolValidAsOne.maxChars","bcolValidAsOne.minNumber","bcolValidAsOne.maxNumber","bcolValidAsOne.integerLength","bcolValidAsOne.decimalLength"],!1,rowIndex)},$scope.inputLimitBlur=function(rowIndex){if(null==$scope.body[rowIndex].bcolValidAsOne.inputLimit)return void($scope.body[rowIndex].bcolValidAsOne.limitMessageCd=null);for(var i=0;i<inputLimit.length;i++)$scope.body[rowIndex].bcolValidAsOne.inputLimit==inputLimit[i].classCd&&$scope.deferredGetLimitMessageCd(rowIndex,inputLimit[i].viewOrder)},$scope.colCdChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.colNmChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.colOrderChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.colTypeChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.visibleChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.editableChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.textAlignChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.necessaryChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.colWidthChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.inColIndexChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.inColDefaultValueChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.inputLimitChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.limitMessageCdChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.minCharsChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.maxCharsChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.minNumberChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.maxNumberChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.integerLengthChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.decimalLengthChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.delFlgChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetScreenList(),$scope.deferredGetColTypeList(),$scope.deferredGetVisibleList(),$scope.deferredGetEditableList(),$scope.deferredGetTextAlignList(),$scope.deferredGetNecessaryList(),$scope.deferredGetInputLimitList(),$scope.deferredGetDelFlgList()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetScreenList=function(){var deferred=$q.defer(),request={};return request.screenId=screenId,api.screenList.query(request).then(function(response){$scope.screenList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetGirdList=function(){var deferred=$q.defer(),request={};return request.screenId=screenId,request.itemType="grid",api.gridList.query(request).then(function(response){$scope.gridList=response.data,1==$scope.gridList.length?$scope.head.itemCd=$scope.gridList[0].itemCd:$scope.head.itemCd=null,deferred.resolve()}),deferred.promise},$scope.deferredGetColTypeList=function(){var deferred=$q.defer(),request={};return request.classCd="COL_TYPE",api.keyValueList.query(request).then(function(response){$scope.colTypeList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetVisibleList=function(){var deferred=$q.defer(),request={};return request.classCd="VISIBLE",api.keyValueList.query(request).then(function(response){$scope.visibleList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetEditableList=function(){var deferred=$q.defer(),request={};return request.classCd="EDITABLE",api.keyValueList.query(request).then(function(response){$scope.editableList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetTextAlignList=function(){var deferred=$q.defer(),request={};return request.classCd="TEXT_ALIGN",api.keyValueList.query(request).then(function(response){$scope.textAlignList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetNecessaryList=function(){var deferred=$q.defer(),request={};return request.classCd="NECESSARY",api.keyValueList.query(request).then(function(response){$scope.necessaryList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInputLimitList=function(){var deferred=$q.defer(),request={};return request.classCd="INPUT_LIMIT",api.limitToMessageCD.query(request).then(function(response){inputLimit=response.data,$scope.inputLimitList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetDelFlgList=function(){var deferred=$q.defer(),request={};return request.classCd="PHYSICAL_DELETE",api.keyValueList.query(request).then(function(response){$scope.delFlgList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetLimitMessageCd=function(rowIndex,viewOrder){var deferred=$q.defer(),request={};return request.classCd="LIMIT_MESSAGE_CD",request.viewOrder=viewOrder,api.limitToMessageCD.query(request).then(function(response){$scope.body[rowIndex].bcolValidAsOne.limitMessageCd=response.data[0].classCd,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer();return api.screenColEdit.initNew().then(function(response){return statusInfo.isSuccessAndShowMessage(response,"searchinputform")?($scope.head=response.data.head,$scope.body=response.data.body,$scope.blankRow=response.data.blankRow,$scope.head.screenCd=$scope.screenList[0].screenCd,$scope.deferredGetGirdList(),directiveControl.editable($scope,"addRow",!1),directiveControl.editable($scope,"removeRow",!1),owsCommon.setFirstFocus(),void deferred.resolve()):void deferred.reject()}),deferred.promise},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.addRow=function(){$scope.body.push(angular.copy($scope.blankRow)),gridDirectiveControl.editable($scope.gridOptions,"delFlg",!1,$scope.body.length-1),updateRowNumber($scope.body)},$scope.removeRow=function(){if(0==$scope.body.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");if(!($scope.gridOptions.gridApi.selection.getSelectedRows().length>1)||owsCommon.viewConfirm("confirmDeleteRow")){var i=0;if(angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){if($scope.body.indexOf(row)>-1&&null!=row.itemId)return void(i+=1)}),i>0)return void alertMessage.setErrorMessageByCode("alreadyRegisteredCannotDeleteError");var flg=!1;1==$scope.gridOptions.gridApi.selection.getSelectedRows().length&&((""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].colCd&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].colCd||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].colOrder&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].colOrder||$scope.gridOptions.gridApi.selection.getSelectedRows()[0].colType!=owsCommon.getDefaultValue($scope.colTypeList)||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].visible&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].visible||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].editable&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].editable||$scope.gridOptions.gridApi.selection.getSelectedRows()[0].textAlign!=owsCommon.getDefaultValue($scope.textAlignList)||$scope.gridOptions.gridApi.selection.getSelectedRows()[0].necessary!=owsCommon.getDefaultValue($scope.necessaryList)||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].colWidth&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].colWidth||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].inColIndex&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].inColIndex||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].inColDefaultValue&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].inColDefaultValue||$scope.gridOptions.gridApi.selection.getSelectedRows()[0].delFlg!=owsCommon.getDefaultValue($scope.delFlgList))&&(flg=!0),""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict&&""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict.dictNm&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict.dictNm&&(flg=!0),""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne&&($scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne.inputLimit!=owsCommon.getDefaultValue($scope.inputLimitList)||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne.inputLimit&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne.inputLimit||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne.limitMessageCd&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne.limitMessageCd||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne.minChars&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne.minChars||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne.maxChars&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne.maxChars||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne.minNumber&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne.minNumber||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne.maxNumber&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne.maxNumber||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne.maxNumber&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne.maxNumber||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne.integerLength&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne.integerLength||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne.decimalLength&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bcolValidAsOne.decimalLength)&&(flg=!0)),flg&&!owsCommon.viewConfirm("deleteRowAlreadyInputConfirmation")||(angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){$scope.body.indexOf(row)>-1&&$scope.body.splice($scope.body.indexOf(row),1)}),updateRowNumber($scope.body),owsCommon.toggleSelectAll($scope.gridOptions,!1))}},$scope.search=function(){$scope.getSearchData(),directiveControl.editable($scope,"addRow",!0),directiveControl.editable($scope,"removeRow",!0)},$scope.getSearchData=function(){var request={};request.data={},request.data.head=$scope.head,request.data.head.screenId=screenId,api.screenColEdit.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform"),$scope.setSearchData(response)})},$scope.setSearchData=function(response){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.body=response.data.body;for(var textRow=[],numberRow=[],otherRow=[],row=0;row<$scope.body.length;row++)null!=$scope.body[row].colCd&&(gridDirectiveControl.editable($scope.gridOptions,"colCd",!1,row),"text"==$scope.body[row].colType?textRow.push(row):"number"==$scope.body[row].colType?numberRow.push(row):otherRow.push(row));$scope.textGridDirectiveControl(textRow),$scope.numberGridDirectiveControl(numberRow),$scope.otherGridDirectiveControl(otherRow),owsHistory.replaceState($scope.head),$scope.targetScreenId=$scope.head.screenId,$scope.targetItemCd=$scope.head.itemCd},$scope.update=function(){optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions);var listBody=[],emptyBody=[];if(0==$scope.body.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");gridDirectiveControl.validity($scope.gridOptions,!1,gridDirectiveControl.blankRows($scope.gridOptions));for(var allBody=$scope.gridOptions.gridApi.grid.rows,row=0;row<$scope.body.length;row++)gridDirectiveControl.isBlankRow($scope.gridOptions,row)?emptyBody.push($scope.body[row]):row<=allBody.length&&0==$scope.gridOptions.getSelection(allBody[row])?(gridDirectiveControl.validity($scope.gridOptions,!1,row),emptyBody.push($scope.body[row])):listBody.push($scope.body[row]);var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.searchinputform)]);promiseAll.then(function(){owsCommon.syncExec(function(){$scope.searchinputform.$invalid;if(gridDirectiveControl.validity($scope.gridOptions,!0),0==listBody.length)return void alertMessage.setErrorMessageByCode("noDetailsError");angular.forEach(emptyBody,function(row){$scope.body.splice($scope.body.indexOf(row),1)}),updateRowNumber($scope.body);var j=0,k=0,rowIndex={};rowIndex.colCd=new Array,rowIndex.colOrder=new Array;var errAry={};errAry.colCd=new Array,errAry.colOrder=new Array;for(var row=0;row<$scope.body.length;row++)for(var colCd=$scope.body[row].colCd,colOrder=$scope.body[row].colOrder,i=row+1;i<$scope.body.length;i++)$scope.body[i].colCd==colCd&&(rowIndex.colCd[j]=i,j++),$scope.body[i].colOrder!=colOrder||null==$scope.body[i].colOrder&&null==colOrder||(rowIndex.colOrder[k]=i,k++);if(j>0)return gridOptionMessageControl.show($scope.gridOptions,"colCd",$filter("owfMessage")("colCdDuplicateError"),rowIndex.colCd),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,rowIndex.colCd[0]),void directiveControl.firstErrorOnFocus("searchinputform");if(k>0)return gridOptionMessageControl.show($scope.gridOptions,"colOrder",$filter("owfMessage")("colOrderDuplicateError"),rowIndex.colOrder),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,rowIndex.colOrder[0]),void directiveControl.firstErrorOnFocus("searchinputform");for(var charsReversalRowList=[],row=0;row<$scope.body.length;row++)if($scope.body[row].bcolValidAsOne){var minChars=$scope.body[row].bcolValidAsOne.minChars,maxChars=$scope.body[row].bcolValidAsOne.maxChars;minChars&&maxChars&&minChars>maxChars&&charsReversalRowList.push(row)}if(charsReversalRowList.length>0)return gridOptionMessageControl.show($scope.gridOptions,"bcolValidAsOne.minChars",$filter("owfMessage")("inputCharsCheckReversalError"),charsReversalRowList),gridOptionMessageControl.show($scope.gridOptions,"bcolValidAsOne.maxChars",$filter("owfMessage")("inputCharsCheckReversalError"),charsReversalRowList),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,charsReversalRowList[0]),void directiveControl.firstErrorOnFocus("searchinputform");for(var numberReversalRowList=[],row=0;row<$scope.body.length;row++)if($scope.body[row].bcolValidAsOne){var minNumber=$scope.body[row].bcolValidAsOne.minNumber,maxNumber=$scope.body[row].bcolValidAsOne.maxNumber;minNumber&&maxNumber&&minNumber>maxNumber&&numberReversalRowList.push(row)}if(numberReversalRowList.length>0)return gridOptionMessageControl.show($scope.gridOptions,"bcolValidAsOne.minNumber",$filter("owfMessage")("inputNumberCheckReversalError"),numberReversalRowList),gridOptionMessageControl.show($scope.gridOptions,"bcolValidAsOne.maxNumber",$filter("owfMessage")("inputNumberCheckReversalError"),numberReversalRowList),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,numberReversalRowList[0]),void directiveControl.firstErrorOnFocus("searchinputform");var request={};request.data={},$scope.head.screenId=$scope.targetScreenId,$scope.head.itemCd=$scope.targetItemCd,request.data.head=$scope.head,request.data.head.screenId=screenId,request.data.body=listBody,api.screenColEdit.inputCheck(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&api.screenColEdit.update(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&(owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.body=[])})})})},function(){owsCommon.syncExec(function(){gridDirectiveControl.validity($scope.gridOptions,!0)})})};var updateRowNumber=function(body){var i=1;angular.forEach(body,function(row){row.lineNo=i++})};$scope.initScreen()}]),angular.module("oneslogiWeb.ScreenColRoleEdit",[]).factory("screenColRoleEditApi",["AngularAPIClient",function(AngularAPIClient){return{dropdownList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),roleCdList:AngularAPIClient.make([["keyValueList","GET","resources/common/role/keyValueList"]]),screenCdList:AngularAPIClient.make([["screenList","GET","resources/common/screenRoleEditDrownList/screenList"]]),itemCdList:AngularAPIClient.make([["keyValueList","GET","resources/common/item/keyValueList"]]),screenColRoleEdit:AngularAPIClient.make([["init","GET","resources/base/master/screenColRoleEdit/init"],["search","GET","resources/base/master/screenColRoleEdit/search"],["registerCheck","POST","resources/base/master/screenColRoleEdit/registerCheck"],["register","POST","resources/base/master/screenColRoleEdit/register"]])}}]).controller("ScreenColRoleEdit",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","screenColRoleEditApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.screenColRoleEditCols=[{field:"colCd",displayName:"列CD"},{field:"vdict.dictNm",displayName:"列名"},{field:"bclassDtlByVisible.vdict.dictNm",displayName:"表示可否"},{field:"bclassDtlByEditable.vdict.dictNm",displayName:"編集可否"},{field:"roleColVisible",displayName:"権限別 表示可否"},{field:"roleColEditable",displayName:"権限別 編集可否"}];var bodyList;$scope.initScreen=function(){$scope.isopen=!0,$scope.screenMode=$route.current.params.mode,$scope.screenCdFocus=function(){oldscreenCdFocus=$scope.head.screenCd},$scope.screenCdChange=function(){setItemCdList()},$scope.gridOptions=owsCommon.mergeEntryNonSelectGridOptions({data:"screenColRoleEdit",columnDefs:"screenColRoleEditCols"}),$scope.gridSelectOptions={roleColVisible:{key:"classCd",value:"classNm",listModel:"roleColVisibleList"},roleColEditable:{key:"classCd",value:"classNm",listModel:"roleColEditableList"}},$scope.initScreenHttp()},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetScreen(),$scope.deferredGetRole(),$scope.deferredGetroleColVisibleList(),$scope.deferredGetroleColEditableList()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetScreen=function(){var deferred=$q.defer(),request={};return api.screenCdList.screenList(request).then(function(response){$scope.screenCdList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetRole=function(){var deferred=$q.defer(),request={};return api.roleCdList.keyValueList(request).then(function(response){$scope.roleCdList=response.data,deferred.resolve()}),deferred.promise};var setItemCdList=function(){var deferred=$q.defer(),request={};return request.data={},request.screenCd=$scope.head.screenCd,request.screenCd?api.itemCdList.keyValueList(request).then(function(response){$scope.itemCdList=response.data,1==$scope.itemCdList.length?$scope.head.itemCd=$scope.itemCdList[0].itemCd:$scope.head.itemCd=null,deferred.resolve()}):($scope.head.itemCd=null,$scope.itemCdList={},deferred.resolve()),deferred.promise};$scope.deferredGetroleColVisibleList=function(){var deferred=$q.defer(),request={};return request.classCd="VISIBLE",api.dropdownList.query(request).then(function(response){$scope.roleColVisibleList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetroleColEditableList=function(){var deferred=$q.defer(),request={};return request.classCd="EDITABLE",api.dropdownList.query(request).then(function(response){newInputLimitList=response.data,$scope.roleColEditableList=newInputLimitList,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer();if($scope.screenMode==SCREEN_MODE.Update){var request={};request.roleId=$route.current.params.roleId,api.screenColRoleEdit.init(request).then(function(response){return statusInfo.isSuccessAndShowMessage(response,"inputform")?($scope.head=response.data.head,$scope.screenColRoleEdit=response.data.body,bodyList=response.data.body,$scope.head.roleCd=response.data.head.roleCd,directiveControl.editable($scope,"roleCd",!1),owsCommon.setFirstFocus(),void deferred.resolve()):(history.back(),void deferred.reject())})}return deferred.promise},$scope.search=function(){$scope.getSearchData()},$scope.getSearchData=function(){var request={};request.data={},request.data.head=$scope.head,api.screenColRoleEdit.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform"),$scope.setSearchData(response)})},$scope.setSearchData=function(response){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.screenColRoleEdit=response.data.body,bodyList=response.data.body,owsHistory.replaceState($scope.head)},$scope.register=function(){optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions);if(0==$scope.screenColRoleEdit.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");for(var j=0,i=0,rowIndex=new Array,rowIndex1=new Array,row=(new Array,0);row<$scope.screenColRoleEdit.length;row++)"0"==$scope.screenColRoleEdit[row].visible&&"1"==$scope.screenColRoleEdit[row].roleColVisible&&(rowIndex[i]=row,i++),"0"==$scope.screenColRoleEdit[row].editable&&"1"==$scope.screenColRoleEdit[row].roleColEditable&&(rowIndex1[j]=row,j++);if(i>0){var messageCd="itemVisibleCannotSelectExceptionError";return gridOptionMessageControl.show($scope.gridOptions,"roleColVisible",$filter("owfMessage")(messageCd),rowIndex),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,rowIndex[0]),void directiveControl.firstErrorOnFocus("searchinputform")}if(j>0){var messageCd1="itemEditableCannotSelectExceptionError";return gridOptionMessageControl.show($scope.gridOptions,"roleColEditable",$filter("owfMessage")(messageCd1),rowIndex1),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,rowIndex1[0]),void directiveControl.firstErrorOnFocus("searchinputform")}var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.searchinputform)]);promiseAll.then(function(){owsCommon.syncExec(function(){var isError=$scope.searchinputform.$invalid;if(isError)return void directiveControl.firstErrorOnFocus("searchinputform");var checkFunc,execFunc,successFunc;checkFunc=api.screenColRoleEdit.registerCheck,execFunc=api.screenColRoleEdit.register,successFunc=function(){$scope.screenColRoleEdit=null,owsHistory.replaceState($scope.head)};var request={};request.data={},request.data.head=$scope.head,request.data.body=bodyList,checkFunc(request).then(function(checkResponse){if(null!=checkResponse.status.listStatus)for(var i=0;i<checkResponse.status.listStatus.length;i++);statusInfo.isSuccessAndShowMessage(checkResponse,"inputform")&&execFunc(request).then(function(execResponse){(execFunc!=api.screenColRoleEdit.register||statusInfo.isSuccessAndShowMessage(execResponse,"inputform"))&&successFunc(execResponse)})})})})};$scope.initScreen()}]),angular.module("oneslogiWeb.ScreenItemEdit",[]).factory("screenItemEditApi",["AngularAPIClient",function(AngularAPIClient){return{keyValueList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),limitToMessageCD:AngularAPIClient.make([["query","GET","resources/common/class/limitToMessageCD"]]),screenItemEdit:AngularAPIClient.make([["initNew","GET","resources/base/master/screenItemEdit/initNew"],["initUpdate","GET","resources/base/master/screenItemEdit/initUpdate"],["inputCheck","POST","resources/base/master/screenItemEdit/inputCheck"],["register","POST","resources/base/master/screenItemEdit/register"],["update","POST","resources/base/master/screenItemEdit/update"]])}}]).controller("ScreenItemEdit",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","screenItemEditApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){var screenId,inputLimit=[];$scope.ScreenItemEditCols=[{field:"itemCd",displayName:"項目CD"},{field:"vdict.dictNm",displayName:"項目名称"},{field:"itemType",displayName:"項目型"},{field:"visible",displayName:"表示可否"},{field:"editable",displayName:"編集可否"},{field:"textAlign",displayName:"表示位置"},{field:"necessary",displayName:"必須"},{field:"displayRequired",displayName:"表示必須"},{field:"bitemValidAsOne.inputLimit",displayName:"入力文字制限"},{field:"bitemValidAsOne.limitMessageCd",displayName:"制限メッセージCD"},{field:"bitemValidAsOne.minChars",displayName:"最小文字数"},{field:"bitemValidAsOne.maxChars",displayName:"最大文字数"},{field:"bitemValidAsOne.minNumber",displayName:"最小値"},{field:"bitemValidAsOne.maxNumber",displayName:"最大値"},{field:"bitemValidAsOne.integerLength",displayName:"整数桁数"},{field:"bitemValidAsOne.decimalLength",displayName:"小数桁数"},{field:"delFlg",displayName:"削除"}],$scope.initScreen=function(){$scope.isopen=!0,screenId=$route.current.params.screenId,$scope.screenMode=$route.current.params.mode,$scope.gridOptions=owsCommon.mergeEntryGridOptions({data:"body",columnDefs:"ScreenItemEditCols"}),$scope.gridSelectOptions={itemType:{key:"classCd",value:"classNm",listModel:"itemTypeList"},visible:{key:"classCd",value:"classNm",listModel:"visibleList"},editable:{key:"classCd",value:"classNm",listModel:"editableList"},textAlign:{key:"classCd",value:"classNm",listModel:"textAlignList"},necessary:{key:"classCd",value:"classNm",listModel:"necessaryList"},displayRequired:{key:"classCd",value:"classNm",listModel:"displayRequiredList"},"bitemValidAsOne.inputLimit":{key:"classCd",value:"classNm",listModel:"inputLimitList"},delFlg:{key:"classCd",value:"classNm",listModel:"delFlgList"}},$scope.gridEventOptions={itemCd:{"ng-change":{eventFunction:"itemCdChange(row.rowIndex)"}},"vdict.dictNm":{"ng-change":{eventFunction:"itemNmChange(row.rowIndex)"}},itemType:{"ng-blur":{eventFunction:"itemTypeBlur(row.rowIndex)"},"ng-change":{eventFunction:"itemTypeChange(row.rowIndex)"}},visible:{"ng-change":{eventFunction:"visibleChange(row.rowIndex)"}},editable:{"ng-change":{eventFunction:"editableChange(row.rowIndex)"}},textAlign:{"ng-change":{eventFunction:"textAlignChange(row.rowIndex)"}},necessary:{"ng-change":{eventFunction:"necessaryChange(row.rowIndex)"}},displayRequired:{"ng-change":{eventFunction:"displayRequiredChange(row.rowIndex)"}},"bitemValidAsOne.inputLimit":{"ng-blur":{eventFunction:"inputLimitBlur(row.rowIndex)"},"ng-change":{eventFunction:"inputLimitChange(row.rowIndex)"}},"bitemValidAsOne.limitMessageCd":{"ng-change":{eventFunction:"limitMessageCdChange(row.rowIndex)"}},"bitemValidAsOne.minChars":{"ng-change":{eventFunction:"minCharsChange(row.rowIndex)"}},"bitemValidAsOne.maxChars":{"ng-change":{eventFunction:"maxCharsChange(row.rowIndex)"}},"bitemValidAsOne.minNumber":{"ng-change":{eventFunction:"minNumberChange(row.rowIndex)"}},"bitemValidAsOne.maxNumber":{"ng-change":{eventFunction:"maxNumberChange(row.rowIndex)"}},"bitemValidAsOne.integerLength":{"ng-change":{eventFunction:"integerLengthChange(row.rowIndex)"}},"bitemValidAsOne.decimalLength":{"ng-change":{eventFunction:"decimalLengthChange(row.rowIndex)"}},delFlg:{"ng-change":{eventFunction:"delFlgChange(row.rowIndex)"}}},statusInfo.mappingGridErrorMessage($scope.gridOptions,"itemCd",9,6),statusInfo.mappingGridErrorMessage($scope.gridOptions,"vdict.dictNm",9,8),$scope.initScreenHttp()},$scope.itemTypeBlur=function(rowIndex){var itemType=$scope.body[rowIndex].itemType;"text"==itemType?($scope.textGridDirectiveControl(rowIndex),null!=$scope.body[rowIndex].bitemValidAsOne&&($scope.body[rowIndex].bitemValidAsOne.minNumber=null,$scope.body[rowIndex].bitemValidAsOne.maxNumber=null,$scope.body[rowIndex].bitemValidAsOne.integerLength=null,$scope.body[rowIndex].bitemValidAsOne.decimalLength=null)):"number"==itemType?($scope.numberGridDirectiveControl(rowIndex),null!=$scope.body[rowIndex].bitemValidAsOne&&($scope.body[rowIndex].bitemValidAsOne.inputLimit="",$scope.body[rowIndex].bitemValidAsOne.limitMessageCd="",$scope.body[rowIndex].bitemValidAsOne.minChars=null,$scope.body[rowIndex].bitemValidAsOne.maxChars=null)):($scope.otherGridDirectiveControl(rowIndex),null!=$scope.body[rowIndex].bitemValidAsOne&&($scope.body[rowIndex].bitemValidAsOne.inputLimit="",$scope.body[rowIndex].bitemValidAsOne.limitMessageCd="",$scope.body[rowIndex].bitemValidAsOne.minChars=null,$scope.body[rowIndex].bitemValidAsOne.maxChars=null,$scope.body[rowIndex].bitemValidAsOne.minNumber=null,$scope.body[rowIndex].bitemValidAsOne.maxNumber=null,
$scope.body[rowIndex].bitemValidAsOne.integerLength=null,$scope.body[rowIndex].bitemValidAsOne.decimalLength=null))},$scope.textGridDirectiveControl=function(row){gridDirectiveControl.editable($scope.gridOptions,["bitemValidAsOne.inputLimit","bitemValidAsOne.limitMessageCd","bitemValidAsOne.minChars","bitemValidAsOne.maxChars"],!0,row),gridDirectiveControl.editable($scope.gridOptions,["bitemValidAsOne.minNumber","bitemValidAsOne.maxNumber","bitemValidAsOne.integerLength","bitemValidAsOne.decimalLength"],!1,row)},$scope.numberGridDirectiveControl=function(row){gridDirectiveControl.editable($scope.gridOptions,["bitemValidAsOne.inputLimit","bitemValidAsOne.limitMessageCd","bitemValidAsOne.minChars","bitemValidAsOne.maxChars"],!1,row),gridDirectiveControl.editable($scope.gridOptions,["bitemValidAsOne.minNumber","bitemValidAsOne.maxNumber","bitemValidAsOne.integerLength","bitemValidAsOne.decimalLength"],!0,row)},$scope.otherGridDirectiveControl=function(row){gridDirectiveControl.editable($scope.gridOptions,["bitemValidAsOne.inputLimit","bitemValidAsOne.limitMessageCd","bitemValidAsOne.minChars","bitemValidAsOne.maxChars","bitemValidAsOne.minNumber","bitemValidAsOne.maxNumber","bitemValidAsOne.integerLength","bitemValidAsOne.decimalLength"],!1,row)},$scope.inputLimitBlur=function(rowIndex){if(null==$scope.body[rowIndex].bitemValidAsOne.inputLimit)return void($scope.body[rowIndex].bitemValidAsOne.limitMessageCd=null);for(var i=0;i<inputLimit.length;i++)$scope.body[rowIndex].bitemValidAsOne.inputLimit==inputLimit[i].classCd&&$scope.deferredGetLimitMessageCd(rowIndex,inputLimit[i].viewOrder)},$scope.itemCdChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.itemNmChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.itemTypeChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.visibleChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.editableChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.textAlignChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.necessaryChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.displayRequiredChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.inputLimitChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.limitMessageCdChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.minCharsChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.maxCharsChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.minNumberChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.maxNumberChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.integerLengthChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.decimalLengthChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.delFlgChange=function(rowIndex){$scope.gridOptions.gridApi.selection.selectRowByVisibleIndex(rowIndex)},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetSystemTypeList(),$scope.deferredGetItemTypeList(),$scope.deferredGetVisibleList(),$scope.deferredGetEditableList(),$scope.deferredGetTextAlignList(),$scope.deferredGetNecessaryList(),$scope.deferredGetDisplayRequiredList(),$scope.deferredGetInputLimitList(),$scope.deferredGetDelFlgList()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetSystemTypeList=function(){var deferred=$q.defer(),request={};return request.classCd="SYSTEM_TYPE",api.keyValueList.query(request).then(function(response){$scope.systemTypeList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetItemTypeList=function(){var deferred=$q.defer(),request={};return request.classCd="ITEM_TYPE",api.keyValueList.query(request).then(function(response){$scope.itemTypeList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetVisibleList=function(){var deferred=$q.defer(),request={};return request.classCd="VISIBLE",api.keyValueList.query(request).then(function(response){$scope.visibleList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetEditableList=function(){var deferred=$q.defer(),request={};return request.classCd="EDITABLE",api.keyValueList.query(request).then(function(response){$scope.editableList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetTextAlignList=function(){var deferred=$q.defer(),request={};return request.classCd="TEXT_ALIGN",api.keyValueList.query(request).then(function(response){$scope.textAlignList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetNecessaryList=function(){var deferred=$q.defer(),request={};return request.classCd="NECESSARY",api.keyValueList.query(request).then(function(response){$scope.necessaryList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetDisplayRequiredList=function(){var deferred=$q.defer(),request={};return request.classCd="DISPLAY_REQUIRED",api.keyValueList.query(request).then(function(response){$scope.displayRequiredList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInputLimitList=function(){var deferred=$q.defer(),request={};return request.classCd="INPUT_LIMIT",api.limitToMessageCD.query(request).then(function(response){inputLimit=response.data,$scope.inputLimitList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetDelFlgList=function(){var deferred=$q.defer(),request={};return request.classCd="PHYSICAL_DELETE",api.keyValueList.query(request).then(function(response){$scope.delFlgList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetLimitMessageCd=function(rowIndex,viewOrder){var deferred=$q.defer(),request={};return request.classCd="LIMIT_MESSAGE_CD",request.viewOrder=viewOrder,api.limitToMessageCD.query(request).then(function(response){$scope.body[rowIndex].bitemValidAsOne.limitMessageCd=response.data[0].classCd,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer();if($scope.screenMode==SCREEN_MODE.Update){var request={};request.screenId=screenId,api.screenItemEdit.initUpdate(request).then(function(response){if(statusInfo.isSuccessAndShowMessage(response,"inputform")){updateRowNumber($scope.body),$scope.head=response.data.head,$scope.body=response.data.body,$scope.blankRow=response.data.blankRow,directiveControl.editable($scope,"screenCd",!1);for(var textRow=[],numberRow=[],otherRow=[],row=0;row<$scope.body.length;row++)null!=$scope.body[row].itemCd&&gridDirectiveControl.editable($scope.gridOptions,"itemCd",!1,row),"text"==$scope.body[row].itemType?textRow.push(row):"number"==$scope.body[row].itemType?numberRow.push(row):otherRow.push(row);$scope.textGridDirectiveControl(textRow),$scope.numberGridDirectiveControl(numberRow),$scope.otherGridDirectiveControl(otherRow),owsCommon.setFirstFocus(),deferred.resolve()}})}else api.screenItemEdit.initNew().then(function(response){return statusInfo.isSuccessAndShowMessage(response,"inputform")?($scope.head=response.data.head,$scope.body=response.data.body,$scope.blankRow=response.data.blankRow,owsCommon.setFirstFocus(),void deferred.resolve()):void deferred.reject()});return deferred.promise},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.addRow=function(){$scope.body.push(angular.copy($scope.blankRow)),gridDirectiveControl.editable($scope.gridOptions,"delFlg",!1,$scope.body.length-1),updateRowNumber($scope.body)},$scope.removeRow=function(){if(0==$scope.body.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");if(!($scope.gridOptions.gridApi.selection.getSelectedRows().length>1)||owsCommon.viewConfirm("deleteRowMultipleConfirmation")){var i=0;if(angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){if($scope.body.indexOf(row)>-1&&null!=row.itemId)return void(i+=1)}),i>0)return void alertMessage.setErrorMessageByCode("alreadyRegisteredCannotDeleteError");var checkFlg=!1;1==$scope.gridOptions.gridApi.selection.getSelectedRows().length&&((""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].itemCd&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].itemCd||$scope.gridOptions.gridApi.selection.getSelectedRows()[0].itemType!=owsCommon.getDefaultValue($scope.itemTypeList)||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].visible&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].visible||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].editable&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].editable||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].textAlign&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].textAlign||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].necessary&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].necessary||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].displayRequired&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].displayRequired)&&(checkFlg=!0),""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict&&""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict.dictNm&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].vdict.dictNm&&(checkFlg=!0),""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne&&($scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.inputLimit!=owsCommon.getDefaultValue($scope.inputLimitList)||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.inputLimit&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.inputLimit||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.limitMessageCd&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.limitMessageCd||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.minChars&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.minChars||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.maxChars&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.maxChars||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.minNumber&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.minNumber||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.maxNumber&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.maxNumber||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.maxNumber&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.maxNumber||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.integerLength&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.integerLength||""!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.decimalLength&&null!=$scope.gridOptions.gridApi.selection.getSelectedRows()[0].bitemValidAsOne.decimalLength)&&(checkFlg=!0)),checkFlg&&!owsCommon.viewConfirm("deleteRowAlreadyInputConfirmation")||(angular.forEach($scope.gridOptions.gridApi.selection.getSelectedRows(),function(row){$scope.body.indexOf(row)>-1&&$scope.body.splice($scope.body.indexOf(row),1)}),updateRowNumber($scope.body),owsCommon.toggleSelectAll($scope.gridOptions,!1))}},$scope.register=function(){optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions);var listBody=[],emptyBody=[];gridDirectiveControl.validity($scope.gridOptions,!1,gridDirectiveControl.blankRows($scope.gridOptions));for(var allBody=$scope.gridOptions.gridApi.grid.rows,row=0;row<$scope.body.length;row++)gridDirectiveControl.isBlankRow($scope.gridOptions,row)?emptyBody.push($scope.body[row]):row<=allBody.length&&0==$scope.gridOptions.getSelection(allBody[row])?(gridDirectiveControl.validity($scope.gridOptions,!1,row),emptyBody.push($scope.body[row])):listBody.push($scope.body[row]);var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.inputform)]);promiseAll.then(function(){owsCommon.syncExec(function(){$scope.inputform.$invalid;gridDirectiveControl.validity($scope.gridOptions,!0),angular.forEach(emptyBody,function(row){$scope.body.splice($scope.body.indexOf(row),1)}),updateRowNumber($scope.body);var j=0,rowIndex={};rowIndex.itemCd=new Array;var errAry={};errAry.itemCd=new Array;for(var row=0;row<$scope.body.length;row++)for(var itemCd=$scope.body[row].itemCd,i=row+1;i<$scope.body.length;i++)$scope.body[i].itemCd==itemCd&&(rowIndex.itemCd[j]=i,j++);if(j>0){var messageCd="itemCdDuplicateError";return gridOptionMessageControl.show($scope.gridOptions,"itemCd",$filter("owfMessage")(messageCd),rowIndex.itemCd),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,rowIndex.itemCd[0]),void directiveControl.firstErrorOnFocus("inputform")}for(var charsReversalRowList=[],row=0;row<$scope.body.length;row++)if($scope.body[row].bitemValidAsOne){var minChars=$scope.body[row].bitemValidAsOne.minChars,maxChars=$scope.body[row].bitemValidAsOne.maxChars;minChars&&maxChars&&minChars>maxChars&&charsReversalRowList.push(row)}if(charsReversalRowList.length>0)return gridOptionMessageControl.show($scope.gridOptions,"bitemValidAsOne.minChars",$filter("owfMessage")("inputCharsCheckReversalError"),charsReversalRowList),gridOptionMessageControl.show($scope.gridOptions,"bitemValidAsOne.maxChars",$filter("owfMessage")("inputCharsCheckReversalError"),charsReversalRowList),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,charsReversalRowList[0]),void directiveControl.firstErrorOnFocus("inputform");for(var numberReversalRowList=[],row=0;row<$scope.body.length;row++)if($scope.body[row].bitemValidAsOne){var minNumber=$scope.body[row].bitemValidAsOne.minNumber,maxNumber=$scope.body[row].bitemValidAsOne.maxNumber;minNumber&&maxNumber&&minNumber>maxNumber&&numberReversalRowList.push(row)}if(numberReversalRowList.length>0)return gridOptionMessageControl.show($scope.gridOptions,"bitemValidAsOne.minNumber",$filter("owfMessage")("inputNumberCheckReversalError"),numberReversalRowList),gridOptionMessageControl.show($scope.gridOptions,"bitemValidAsOne.maxNumber",$filter("owfMessage")("inputNumberCheckReversalError"),numberReversalRowList),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,numberReversalRowList[0]),void directiveControl.firstErrorOnFocus("inputform");var request={};request.data={},request.data.head=$scope.head,request.data.body=listBody,api.screenItemEdit.inputCheck(request).then(function(response){var err=!1;if(null!=response.status.listStatus)for(var i=0;i<response.status.listStatus.length;i++)2==response.status.listStatus[i].status.statusCode&&(optionMessageControl.show($scope,"screenNm",$filter("owfMessage")(response.status.listStatus[i].status.messageCode,response.status.listStatus[i].status.messageReplaceValue)),err=!0),7==response.status.listStatus[i].status.statusCode&&(optionMessageControl.show($scope,"screenCd",$filter("owfMessage")(response.status.listStatus[i].status.messageCode,response.status.listStatus[i].status.messageReplaceValue)),err=!0);err||statusInfo.isSuccessAndShowMessage(response,"inputform")&&($scope.screenMode==SCREEN_MODE.Update?api.screenItemEdit.update(request).then(function(response){var err1=!1;if(null!=response.status.listStatus)for(var i=0;i<response.status.listStatus.length;i++)2==response.status.listStatus[i].status.statusCode&&(optionMessageControl.show($scope,"screenNm",$filter("owfMessage")(response.status.listStatus[i].status.messageCode,response.status.listStatus[i].status.messageReplaceValue)),err1=!0),7==response.status.listStatus[i].status.statusCode&&(optionMessageControl.show($scope,"screenCd",$filter("owfMessage")(response.status.listStatus[i].status.messageCode,response.status.listStatus[i].status.messageReplaceValue)),err1=!0);err1||statusInfo.isSuccessAndShowMessage(response,"inputform")&&owsCommon.viewInfoAndHistoryBack(response.status.messageCode,response.status.messageReplaceValue)}):api.screenItemEdit.register(request).then(function(response){var err2=!1;if(null!=response.status.listStatus)for(var i=0;i<response.status.listStatus.length;i++)2==response.status.listStatus[i].status.statusCode&&(optionMessageControl.show($scope,"screenNm",$filter("owfMessage")(response.status.listStatus[i].status.messageCode,response.status.listStatus[i].status.messageReplaceValue)),err2=!0),7==response.status.listStatus[i].status.statusCode&&(optionMessageControl.show($scope,"screenCd",$filter("owfMessage")(response.status.listStatus[i].status.messageCode,response.status.listStatus[i].status.messageReplaceValue)),err2=!0);err2||statusInfo.isSuccessAndShowMessage(response,"inputform")&&(owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.initScreenHttp())}))})})},function(){owsCommon.syncExec(function(){gridDirectiveControl.validity($scope.gridOptions,!0)})})};var updateRowNumber=function(body){var i=1;angular.forEach(body,function(row){row.lineNo=i++})};$scope.initScreen()}]),angular.module("oneslogiWeb.ScreenItemRoleEdit",[]).factory("screenItemRoleEditApi",["AngularAPIClient",function(AngularAPIClient){return{dropdownList:AngularAPIClient.make([["roleCdList","GET","resources/common/screenRoleEditDrownList/roleCdList"],["screenList","GET","resources/common/screenRoleEditDrownList/screenList"],["query","GET","resources/class/keyValueList"]]),screenItemRoleList:AngularAPIClient.make([["init","GET","resources/base/master/screenItemRoleEditResource/init"],["search","GET","resources/base/master/screenItemRoleEditResource/search"],["registerCheck","POST","resources/base/master/screenItemRoleEditResource/registerCheck"],["register","POST","resources/base/master/screenItemRoleEditResource/register"]])}}]).controller("ScreenItemRoleEdit",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","screenItemRoleEditApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.screenItemRoleListCols=[{field:"itemCd",displayName:"項目CD"},{field:"vdict.dictNm",displayName:"項目名"},{field:"bclassDtlByVisible.vdict.dictNm",displayName:"表示可否"},{field:"bclassDtlByEditable.vdict.dictNm",displayName:"編集可否"},{field:"roleItemVisible",displayName:"権限別 表示可否"},{field:"roleItemEditable",displayName:"権限別 編集可否"}];var newInputLimitList;$scope.initScreen=function(){$scope.isopen=!0,$scope.gridOptions=owsCommon.mergeEntryNonSelectGridOptions({data:"screenItemRoleList",columnDefs:"screenItemRoleListCols"}),$scope.gridSelectOptions={roleItemVisible:{key:"classCd",value:"classNm",listModel:"roleItemVisibleList"},roleItemEditable:{key:"classCd",value:"classNm",listModel:"roleItemEditableList"}},statusInfo.mappingGridErrorMessage($scope.gridOptions,"clientCd",6,2),$scope.initScreenHttp()},$scope.initScreenHttp=function(){$scope.isopen=!0,$scope.centerMasterList=userInfo.centerMasterList,$scope.screenMode=$route.current.params.mode,$q.all([$scope.deferredGetroleItemVisibleList(),$scope.deferredGetroleItemEditableList(),$scope.deferredGetscreenCdList(),$scope.deferredGetShapCdList()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetShapCdList=function(){var deferred=$q.defer(),request={};return api.dropdownList.roleCdList(request).then(function(response){$scope.roleCdList=response.data,deferred.resolve(response)}),deferred.promise},$scope.deferredGetscreenCdList=function(){var deferred=$q.defer(),request={};return api.dropdownList.screenList(request).then(function(response){$scope.screenCdList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetroleItemVisibleList=function(){var deferred=$q.defer(),request={};return request.classCd="VISIBLE",api.dropdownList.query(request).then(function(response){$scope.roleItemVisibleList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetroleItemEditableList=function(){var deferred=$q.defer(),request={};return request.classCd="EDITABLE",api.dropdownList.query(request).then(function(response){newInputLimitList=response.data,$scope.roleItemEditableList=newInputLimitList,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer(),request={};return request.roleId=$route.current.params.roleId,api.screenItemRoleList.init(request).then(function(response){return statusInfo.isSuccessAndShowMessage(response,"searchinputform")?($scope.head=response.data.head,$scope.screenItemRoleList=response.data.body,owsCommon.setFirstFocus(),void deferred.resolve()):(history.back(),void deferred.reject())}),deferred.promise},$scope.search=function(){$scope.getSearchData()},$scope.getSearchData=function(){var request={};request.data={},request.data.head=$scope.head,api.screenItemRoleList.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform"),$scope.setSearchData(response)})},$scope.setSearchData=function(response){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.screenItemRoleList=response.data.body,owsHistory.replaceState($scope.head)},$scope.register=function(){var request={};request.data={},request.data.head=$scope.head;if(request.data.body=$scope.screenItemRoleList,optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions),0==$scope.screenItemRoleList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.searchform)]);promiseAll.then(function(){owsCommon.syncExec(function(){var checkFunc,execFunc,successFunc;$scope.searchform.$invalid;checkFunc=api.screenItemRoleList.registerCheck,execFunc=api.screenItemRoleList.register,successFunc=function(){$scope.screenItemRoleList=null,owsHistory.replaceState($scope.head)},checkFunc(request).then(function(response){for(var j=0,k=0,rowIndex=new Array,rowIndex1=(new Array,new Array),row=(new Array,0);row<$scope.screenItemRoleList.length;row++)0==$scope.screenItemRoleList[row].visible&&1==$scope.screenItemRoleList[row].roleItemVisible&&(rowIndex[j]=row,j++),0==$scope.screenItemRoleList[row].editable&&1==$scope.screenItemRoleList[row].roleItemEditable&&(rowIndex1[k]=row,k++);if(j>0){var messageCd="itemVisibleCannotSelectExceptionError";return gridOptionMessageControl.show($scope.gridOptions,"roleItemVisible",$filter("owfMessage")(messageCd),rowIndex),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,rowIndex[0]),void directiveControl.firstErrorOnFocus("searchform")}if(k>0){var messageCd1="itemEditableCannotSelectExceptionError";return gridOptionMessageControl.show($scope.gridOptions,"roleItemEditable",$filter("owfMessage")(messageCd1),rowIndex1),gridDirectiveControl.scrollingByRowIndex($scope.gridOptions,rowIndex1[0]),void directiveControl.firstErrorOnFocus("searchform")}statusInfo.isSuccessAndShowMessage(response,"searchform")&&execFunc(request).then(function(execResponse){statusInfo.isSuccessAndShowMessage(execResponse,"searchform")&&successFunc(execResponse)})})})})},$scope.initScreen()}]),angular.module("oneslogiWeb.ScreenList",[]).factory("screenListApi",["AngularAPIClient",function(AngularAPIClient){return{keyValueList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),screenList:AngularAPIClient.make([["init","GET","resources/base/master/screenList/init"],["search","GET","resources/base/master/screenList/search"],["checkDelete","POST","resources/base/master/screenList/checkDelete"],["delete","POST","resources/base/master/screenList/delete"]])}}]).controller("ScreenList",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","screenListApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.screenListCols=[{field:"screenCd",displayName:"画面CD"},{field:"vdict.dictNm",displayName:"画面名"},{field:"systemTypeNm",displayName:"システム種別"}],$scope.initScreen=function(){$scope.isopen=!0,$scope.pagingOptions=owsCommon.getDefaultPagingOptions(),$scope.pagingOptions.setPageData=function(){$scope.getPagingData($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.gridOptions=owsCommon.mergePagingMultiSelectGridOptions({data:"screenList",columnDefs:"screenListCols",pagingOptions:$scope.pagingOptions}),$scope.gridSelectOptions={systemType:{key:"classCd",value:"classNm",listModel:"systemTypeList"}},$scope.initScreenHttp()},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetSystemTypeList()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetSystemTypeList=function(){var deferred=$q.defer(),request={};return request.classCd="SYSTEM_TYPE",api.keyValueList.query(request).then(function(response){$scope.systemTypeList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer(),request={};return request.data={},request.data.head=$scope.head,request.data.body=$scope.screenList,api.screenList.init(request).then(function(response){$scope.deferredSetInitData(response),owsHistory.hasState()&&($scope.head=owsHistory.popState(),$scope.search()),owsCommon.setFirstFocus()}),deferred.promise},$scope.deferredSetInitData=function(response){$scope.paging=response.paging,$scope.head=response.data.head,$scope.screenList=response.data.body,owsHistory.replaceState($scope.head)},$scope.search=function(){owsCommon.clearPagingOptions($scope.gridOptions),$scope.getPagingData($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.getPagingData=function(pageSize,page){var request={};request.data={},request.data.head=$scope.head,owsCommon.setPagingData(request,$scope.paging,pageSize,page),api.screenList.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform"),$scope.setSearchData(response)})},$scope.setSearchData=function(response){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.screenList=response.data.body,$scope.gridOptions.totalItems=response.paging.allRecordCount,owsHistory.replaceState($scope.head)},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.deletedata=function(){if(0==$scope.screenList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");if(!($scope.gridOptions.gridApi.selection.getSelectedRows().length>1)||owsCommon.viewConfirm("confirmDeleteRow")){var listBody=[];listBody.push($scope.gridOptions.gridApi.selection.getSelectedRows());var request={};request.data={},request.data.body=$scope.gridOptions.gridApi.selection.getSelectedRows(),api.screenList.checkDelete(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform")&&api.screenList.delete(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchinputform"),$scope.initScreenHttp(),owsCommon.toggleSelectAll($scope.gridOptions,!1)})})}};$scope.register=function(){$location.path("base/master/ScreenItemEdit").search({}).search("mode",SCREEN_MODE.Register),$scope.initScreenHttp()},$scope.update=function(){return 0==$scope.screenList.length?void alertMessage.setErrorMessageByCode("detailLineNotDisplayError"):0==$scope.gridOptions.gridApi.selection.getSelectedRows().length?void alertMessage.setErrorMessageByCode("lineNotSelectError"):$scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):($location.path("base/master/ScreenItemEdit").search({}).search("mode",SCREEN_MODE.Update).search("screenId",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].screenId),void $scope.initScreenHttp())},$scope.copy=function(){if(0==$scope.screenList.length)return void alertMessage.setErrorMessageByCode("detailLineNotDisplayError");if(0==$scope.gridOptions.gridApi.selection.getSelectedRows().length)return void alertMessage.setErrorMessageByCode("lineNotSelectError");if($scope.gridOptions.gridApi.selection.getSelectedRows().length>1)return void alertMessage.setErrorMessageByCode("onlyOneSelect");var items={screenId:$scope.gridOptions.gridApi.selection.getSelectedRows()[0].screenId,mode:SCREEN_MODE.Copy},modalInstance=modalFactory.modalScreenList(items);modalInstance.result.then(function(items){$scope.search()})},$scope.gridUpdate=function(){return 0==$scope.screenList.length?void alertMessage.setErrorMessageByCode("detailLineNotDisplayError"):0==$scope.gridOptions.gridApi.selection.getSelectedRows().length?void alertMessage.setErrorMessageByCode("lineNotSelectError"):$scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):($location.path("base/master/ScreenColEdit").search({}).search("screenId",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].screenId),void $scope.initScreenHttp())},$scope.gridDblClick=function(row){owsCommon.syncButtonExec("update",row)},$scope.initScreen()}]),angular.module("oneslogiWeb.ScreenListMasterCopy",[]).factory("screenListMasterCopyApi",["AngularAPIClient",function(AngularAPIClient){return{keyValueList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),limitToMessageCD:AngularAPIClient.make([["query","GET","resources/common/class/limitToMessageCD"]]),screenListMasterCopy:AngularAPIClient.make([["copy","GET","resources/base/master/screenListMasterCopy/copy"],["inputCheck","POST","resources/base/master/screenListMasterCopy/inputCheck"],["register","POST","resources/base/master/screenListMasterCopy/register"]])}}]).controller("ScreenListMasterCopy",["$scope","$route","$modalInstance","$route","$filter","$location","$q","alertMessage","directiveControl","optionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","screenListMasterCopyApi","items",function($scope,$route,$modalInstance,$route,$filter,$location,$q,alertMessage,directiveControl,optionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api,items){$scope.initScreen=function(){$scope.isopen=!0,items&&$scope.initScreenListCopyHttp(items.screenId)},$scope.initScreenListCopyHttp=function(screenid){$q.all([]).then(function(response){return $scope.deferredGetInitData(screenid)})},$scope.deferredGetInitData=function(screenId){
var deferred=$q.defer(),request={};return request.screenId=screenId,api.screenListMasterCopy.copy(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"inputform")&&($scope.head=response.data.head,$scope.body=response.data.body,deferred.resolve())}),deferred.promise},$scope.clickOk=function(){optionMessageControl.hideAll($scope);var request={};request.data={},request.data.head=$scope.head,request.data.body=$scope.body;var screenscope=angular.element($("div[owd-screen = 'ScreenListMasterCopy']")).scope();api.screenListMasterCopy.inputCheck(request).then(function(response){var err=!1;if(null!=response.status.listStatus)for(var i=0;i<response.status.listStatus.length;i++)2==response.status.listStatus[i].status.statusCode&&(optionMessageControl.show(screenscope,"screenNm",$filter("owfMessage")(response.status.listStatus[i].status.messageCode,response.status.listStatus[i].status.messageReplaceValue)),err=!0),7==response.status.listStatus[i].status.statusCode&&(optionMessageControl.show(screenscope,"screenCd",$filter("owfMessage")(response.status.listStatus[i].status.messageCode,response.status.listStatus[i].status.messageReplaceValue)),err=!0);err||statusInfo.isSuccessAndShowMessage(response,"inputform")&&api.screenListMasterCopy.register(request).then(function(response){var err2=!1;if(null!=response.status.listStatus)for(var i=0;i<response.status.listStatus.length;i++)2==response.status.listStatus[i].status.statusCode&&(optionMessageControl.show(screenscope,"screenNm",$filter("owfMessage")(response.status.listStatus[i].status.messageCode,response.status.listStatus[i].status.messageReplaceValue)),err2=!0),7==response.status.listStatus[i].status.statusCode&&(optionMessageControl.show(screenscope,"screenCd",$filter("owfMessage")(response.status.listStatus[i].status.messageCode,response.status.listStatus[i].status.messageReplaceValue)),err2=!0),0==response.status.listStatus[i].status.statusCode&&($modalInstance.close(items.screenId),err2=!1);err2||!statusInfo.isSuccessAndShowMessage(response,"inputform")})})},$scope.modalClose=function(){$modalInstance.dismiss()},$scope.initScreen()}]),angular.module("oneslogiWeb.ScreenRoleEdit",[]).factory("screenRoleEditApi",["AngularAPIClient",function(AngularAPIClient){return{dropdownList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),screenRoleList:AngularAPIClient.make([["init","GET","resources/base/master/screenRoleEdit/initNew"],["initUpdate","GET","resources/base/master/screenRoleEdit/initUpdate"],["inputCheck","POST","resources/base/master/screenRoleEdit/inputCheck"],["register","POST","resources/base/master/screenRoleEdit/register"],["update","POST","resources/base/master/screenRoleEdit/update"]])}}]).controller("ScreenRoleEdit",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","screenRoleEditApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.screenRoleListCols=[{field:"screenCd",displayName:"画面CD"},{field:"vdict.dictNm",displayName:"画面名"},{field:"visible",displayName:"表示可否"}],$scope.initScreen=function(){$scope.isopen=!0,$scope.gridOptions=owsCommon.mergeEntryNonSelectGridOptions({data:"screenRoleList",columnDefs:"screenRoleListCols"}),$scope.gridSelectOptions={visible:{key:"classCd",value:"classNm",listModel:"colsVisibleList"}},statusInfo.mappingGridErrorMessage($scope.gridOptions,"clientCd",6,2),$scope.initScreenHttp()},$scope.initScreenHttp=function(){$scope.isopen=!0,$scope.centerMasterList=userInfo.centerMasterList,$scope.screenMode=$route.current.params.mode,$q.all([$scope.deferredGetSystemType()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetSystemType=function(){var deferred=$q.defer(),request={};return request.classCd="VISIBLE",owsCommon.getDataCacheable(api.dropdownList,request).then(function(response){$scope.colsVisibleList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetInitData=function(){var deferred=$q.defer();if($scope.screenMode==SCREEN_MODE.Update){var request={};request.roleId=$route.current.params.roleId,api.screenRoleList.initUpdate(request).then(function(response){return statusInfo.isSuccessAndShowMessage(response,"searchinputform")?($scope.head=response.data.head,$scope.screenRoleList=response.data.body,$scope.blankRow=response.data.blankRow,directiveControl.editable($scope,"roleCd",!1),owsCommon.setFirstFocus("searchform"),void deferred.resolve()):(history.back(),void deferred.reject())})}else api.screenRoleList.init().then(function(response){$scope.head=response.data.head,$scope.screenRoleList=response.data.body,$scope.blankRow=response.data.blankRow,owsHistory.hasState()&&($scope.head=owsHistory.popState(),$scope.search()),owsCommon.setFirstFocus(),deferred.resolve()});return deferred.promise},$scope.register=function(){if(optionMessageControl.hideAll($scope),gridOptionMessageControl.hideAll($scope.gridOptions),null!=$scope.head.roleCd&&null!=$scope.head.vdict.dictNm){var request={};request.data={},request.data.head=$scope.head,request.data.body=$scope.screenRoleList;var promiseAll=$q.all([gridDirectiveControl.isValidCheckAllRows($scope.gridOptions,$scope.searchform)]);promiseAll.then(function(){owsCommon.syncExec(function(){var isError=$scope.searchform.$invalid;if(isError)return void directiveControl.firstErrorOnFocus("searchform");var checkFunc,execFunc,successFunc;$scope.screenMode==SCREEN_MODE.Update?(checkFunc=api.screenRoleList.inputCheck,execFunc=api.screenRoleList.update,successFunc=function(response){owsCommon.viewInfoAndHistoryBack(response.status.messageCode,response.status.messageReplaceValue)}):(checkFunc=api.screenRoleList.inputCheck,execFunc=api.screenRoleList.register,successFunc=function(){$scope.initScreenHttp()}),checkFunc(request).then(function(response){if(null!=response.status.listStatus)for(var i=0;i<response.status.listStatus.length;i++){if(2==response.status.listStatus[i].status.statusCode)return void optionMessageControl.show($scope,"roleNm",$filter("owfMessage")(response.status.listStatus[i].status.messageCode,response.status.listStatus[i].status.messageReplaceValue));if(6==response.status.listStatus[i].status.statusCode)return void optionMessageControl.show($scope,"roleCd",$filter("owfMessage")(response.status.listStatus[i].status.messageCode,response.status.listStatus[i].status.messageReplaceValue))}statusInfo.isSuccessAndShowMessage(response,"searchform")&&execFunc(request).then(function(execResponse){(execFunc!=api.screenRoleList.register||statusInfo.isSuccessAndShowMessage(execResponse,"searchform"))&&successFunc(execResponse)})})})})}},$scope.initScreen()}]),angular.module("oneslogiWeb.SystemEdit",[]).factory("systemEditApi",["AngularAPIClient",function(AngularAPIClient){return{systemEdit:AngularAPIClient.make([["initScreenDto","GET","resources/base/master/systemEdit/initScreenDto"],["inputCheck","POST","resources/base/master/systemEdit/inputCheck"],["update","POST","resources/base/master/systemEdit/update"]])}}]).directive("systemPassword",["$rootScope",function($rootScope){return{restrict:"E",scope:!1,replace:!0,transclude:!0,template:function(element,attrs){var attrsHtml="";attrsHtml+=" ui-validate=\"{exterror:'!oneslogi."+attrs.id+".optionMessage.show'}\"",attrsHtml+=" ui-validate-watch=\"{exterror:'oneslogi."+attrs.id+".optionMessage.show'}\"";var html="";for(html+='<span><ng-form name="'+attrs.id+'form" novalidate>',html+='  <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3" ng-class="{ \'has-error\' : '+attrs.id+"form."+attrs.id+'.$invalid }" ng-disabled="{0}" ng-show="{1}">',html+='    <label id="'+attrs.id+'label" for="'+attrs.id+'" class="control-label" ng-disabled="{0}" >{{{4}}}</label>',html+='    <input type="password" owd-textvalid class="form-control" id="'+attrs.id+'" name="'+attrs.id+'" ng-trim="false" ng-model="'+attrs.ngModel+'" ng-disabled="{0}" ng-class="{3}" '+attrsHtml+"/>",html+='    <span class="help-block" ng-show="'+attrs.id+"form."+attrs.id+'.$error.required">{{"requiredError" | owfMessage}}</span>',html+='    <span class="help-block" ng-show="'+attrs.id+"form."+attrs.id+'.$error.pattern">{{item[screenCd]["'+attrs.id+'"].message}}</span>',html+='    <span class="help-block" ng-show="'+attrs.id+"form."+attrs.id+'.$error.minlength">{{"minlengthError" | owfMessage:item[screenCd]["'+attrs.id+'"].minChars}}</span>',html+='    <span class="help-block" ng-show="'+attrs.id+"form."+attrs.id+'.$error.maxlength">{{"maxlengthError" | owfMessage:item[screenCd]["'+attrs.id+'"].maxChars}}</span>',html+='    <span class="help-block" ng-show="'+attrs.id+"form."+attrs.id+'.$error.exterror" ng-bind-html="oneslogi.'+attrs.id+'.optionMessage.message"></span>',html+="    <div ng-transclude></div>",html+="  </div>",html+="</ng-form></span>";html!=html.replace("{0}","((!item[screenCd]['"+attrs.id+"'].editable) || (!oneslogi['"+attrs.id+"'].editable))");)html=html.replace("{0}","((!item[screenCd]['"+attrs.id+"'].editable) || (!oneslogi['"+attrs.id+"'].editable))");for(;html!=html.replace("{1}","((item[screenCd]['"+attrs.id+"'].visible) && (oneslogi['"+attrs.id+"'].show))");)html=html.replace("{1}","((item[screenCd]['"+attrs.id+"'].visible) && (oneslogi['"+attrs.id+"'].show))");return html=html.replace("{3}","item[screenCd]['"+attrs.id+"'].textAlign"),html=html.replace("{4}","item[screenCd]['"+attrs.id+"'].itemNm")},require:"^?owdScreen",controller:["$scope","$element","$rootScope","owsMaster",function($scope,$element,$rootScope,owsMaster){owsMaster.setMaster($scope,$element,$rootScope)}]}}]).controller("SystemEdit",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","userInfo","statusInfo","modalFactory","systemEditApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,userInfo,statusInfo,modalFactory,api){$scope.initScreen=function(){var deferred=$q.defer(),request={};return api.systemEdit.initScreenDto(request).then(function(response){$scope.bSystem=response.data.bSystem,deferred.resolve()}),deferred.promise},$scope.update=function(){var deferred=$q.defer(),request={};return request.data={},request.data.bSystem=$scope.bSystem,api.systemEdit.inputCheck(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"inputform")&&callUpdate(request)}),deferred.promise};var callUpdate=function(request){var deferred=$q.defer();return api.systemEdit.update(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"inputform")&&($scope.bSystem=response.data.bSystem,deferred.resolve())}),deferred.promise};$scope.initScreen()}]),angular.module("oneslogiWeb.UserList",[]).factory("userListApi",["AngularAPIClient",function(AngularAPIClient){return{culture:AngularAPIClient.make([["keyValueList","GET","resources/common/cultureCD/cultureList"]]),roleGrp:AngularAPIClient.make([["keyValueList","GET","resources/common/roleGrp/keyValueList"]]),dropdownList:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),userList:AngularAPIClient.make([["init","GET","resources/base/master/userList/init"],["search","GET","resources/base/master/userList/search"],["excel","GET","resources/base/master/userList/search","excel"]])}}]).controller("UserList",["$scope","$route","$filter","$location","$q","alertMessage","directiveControl","gridDirectiveControl","optionMessageControl","gridOptionMessageControl","owsHistory","owsCommon","owsSystem","userInfo","statusInfo","modalFactory","userListApi",function($scope,$route,$filter,$location,$q,alertMessage,directiveControl,gridDirectiveControl,optionMessageControl,gridOptionMessageControl,owsHistory,owsCommon,owsSystem,userInfo,statusInfo,modalFactory,api){$scope.userListCols=[{field:"userCd",displayName:"ユーザCD"},{field:"userNm",displayName:"ユーザ名"},{field:"bculture.cultureCd",displayName:"カルチャCD"},{field:"cultureNm",displayName:"カルチャ名"},{field:"broleGrp.roleGrpCd",displayName:"権限グループCD"},{field:"roleGrpNm",displayName:"権限グループ名"},{field:"delFlgNm",displayName:"削除フラグ"}],$scope.initScreen=function(){"2"==owsSystem.getAuthMode()?$scope.showPwdMgtBtn=!0:$scope.showPwdMgtBtn=!1,$scope.isopen=!0,$scope.pagingOptions=owsCommon.getDefaultPagingOptions(),$scope.pagingOptions.setPageData=function(){$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.gridOptions=owsCommon.mergePagingSingleSelectGridOptions({data:"userList",columnDefs:"userListCols",pagingOptions:$scope.pagingOptions}),$scope.initScreenHttp()},$scope.initScreenHttp=function(){$q.all([$scope.deferredGetCulture(),$scope.deferredGetRoleGrp(),$scope.deferredGetDelFlg()]).then(function(response){return $scope.deferredGetInitData()})},$scope.deferredGetCulture=function(){var deferred=$q.defer(),request={};return api.culture.keyValueList(request).then(function(response){$scope.cultureList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetRoleGrp=function(){var deferred=$q.defer(),request={};return api.roleGrp.keyValueList(request).then(function(response){$scope.roleGrpList=response.data,deferred.resolve()}),deferred.promise},$scope.deferredGetDelFlg=function(){var deferred=$q.defer(),request={};return request.classCd="DEL_FLG",api.dropdownList.query(request).then(function(response){$scope.delFlgList=response.data,deferred.resolve()}),deferred.promise},$scope.getClassForRow=function(row){return"1"==row.entity.delFlg?"baselegendred":""},$scope.deferredGetInitData=function(){$q.defer();api.userList.init().then(function(response){$scope.head=response.data.head,$scope.userList=response.data.body,$scope.paging=response.paging,$scope.head.delFlg=owsCommon.getDefaultValue($scope.delFlgList),owsHistory.hasState()&&($scope.head=owsHistory.popState(),$scope.search()),owsCommon.setFirstFocus()})},$scope.excelOutput=function(){var request={};request.data={},request.data.head=$scope.head,owsCommon.setOutputOptions(request,$scope.gridOptions,"body",document.title),api.userList.excel(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchform")?location.href=response.output.downloadUrl:$scope.setPagingData(response,$scope.gridOptions.paginationCurrentPage,$scope.gridOptions.paginationPageSize)})},$scope.search=function(){owsCommon.clearPagingOptions($scope.gridOptions),$scope.getPagedDataAsync($scope.gridOptions.paginationPageSize,$scope.gridOptions.paginationCurrentPage)},$scope.gridDblClick=function(row){owsCommon.syncButtonExec("update",row)},$scope.getPagedDataAsync=function(pageSize,page){var request={};request.data={},request.data.head=$scope.head,owsCommon.setPagingData(request,$scope.paging,pageSize,page),api.userList.search(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"searchform"),$scope.setPagingData(response,page,pageSize)})},$scope.setPagingData=function(response,page,pageSize){owsCommon.toggleSelectAll($scope.gridOptions,!1),$scope.gridOptions.gridViewport.scrollTop(0),$scope.userList=response.data.body,$scope.gridOptions.totalItems=response.paging.allRecordCount,owsHistory.replaceState($scope.head)},$scope.update=function(){return $scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):void $location.path("base/master/UserMgt").search({}).search("mode","UPDATE").search("userId",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].userId)},$scope.pwdMgt=function(){return $scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):void $location.path("base/master/LiteLoginPwdMgt").search({}).search("userId",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].userId)},$scope.copy=function(){return $scope.gridOptions.gridApi.selection.getSelectedRows().length>1?void alertMessage.setErrorMessageByCode("onlyOneSelect"):void $location.path("base/master/UserMgtCopy").search({}).search("mode","COPY").search("userId",$scope.gridOptions.gridApi.selection.getSelectedRows()[0].userId)},$scope.register=function(){$location.path("base/master/UserMgtRegisterNew").search({}).search("mode","NEW")},$scope.initScreen()}]),angular.module("oneslogiWeb.UserMgt",[]).constant("USER_MGT_MODE_COPY","COPY").constant("USER_MGT_MODE_NEW","NEW").constant("USER_MGT_MODE_UPDATE","UPDATE").constant("EVENT_NAME_CHANGE_USER","EVENT_NAME_CHANGE_USER").constant("EVENT_NAME_ERROR_OCCURRED","EVENT_NAME_ERROR_OCCURRED").value("NEXT_SCREEN_URL","base/master/UserMgt").factory("UserMgtShared",["$rootScope","owsCommon","EVENT_NAME_CHANGE_USER","EVENT_NAME_ERROR_OCCURRED",function($rootScope,owsCommon,EVENT_NAME_CHANGE_USER,EVENT_NAME_ERROR_OCCURRED){var bUserDto=null,bUserDtoLastChangeScreenCd=null,userRegistered=!1,errorOccurred=!1,copyMethods={};return{bUserDto:{get:function(){return bUserDto},init:function(_screenCd,_bUserDto){bUserDtoLastChangeScreenCd=_screenCd,bUserDto=_bUserDto},set:function(_screenCd,_bUserDto){bUserDto=_bUserDto,bUserDtoLastChangeScreenCd=_screenCd,$rootScope.$broadcast(EVENT_NAME_CHANGE_USER)},getLastChangeScreen:function(){return bUserDtoLastChangeScreenCd}},userRegistered:{get:function(){return userRegistered},set:function(_userRegistered){userRegistered=_userRegistered}},error:{errorOccurred:function(response){0==errorOccurred&&(errorOccurred=!0,owsCommon.viewAlert(response.status.messageCode,response.status.messageReplaceValue),$rootScope.$broadcast(EVENT_NAME_ERROR_OCCURRED))},reset:function(){errorOccurred=!1}},copyMethods:{get:function(){return copyMethods},push:function(_name,_method){copyMethods[_name]=_method}}}}]).factory("UserMgtApi",["AngularAPIClient",function(AngularAPIClient){return{bClass:AngularAPIClient.make([["query","GET","resources/class/keyValueList"]]),culture:AngularAPIClient.make([["keyValueList","GET","resources/common/cultureCD/cultureList"]]),roleGrp:AngularAPIClient.make([["keyValueList","GET","resources/common/roleGrp/keyValueList"]]),userMgt:AngularAPIClient.make([["initForUpdate","GET","resources/master/userMgt/initForUpdate"],["registerNewPreCheck","POST","resources/master/userMgt/registerNewPreCheck"],["registerNew","POST","resources/master/userMgt/registerNew"],["registerUpdPreCheck","POST","resources/master/userMgt/registerUpdPreCheck"],["registerUpd","POST","resources/master/userMgt/registerUpd"]])}}]).controller("UserMgtCtrl",["$scope","$rootScope","$q","$route","$filter","$locale","owsCommon","owsSystem","statusInfo","alertMessage","UserMgtApi","USER_MGT_MODE_COPY","USER_MGT_MODE_NEW","USER_MGT_MODE_UPDATE","EVENT_NAME_CHANGE_USER","EVENT_NAME_ERROR_OCCURRED","UserMgtShared","NEXT_SCREEN_URL",function($scope,$rootScope,$q,$route,$filter,$locale,owsCommon,owsSystem,statusInfo,alertMessage,api,USER_MGT_MODE_COPY,USER_MGT_MODE_NEW,USER_MGT_MODE_UPDATE,EVENT_NAME_CHANGE_USER,EVENT_NAME_ERROR_OCCURRED,shared,NEXT_SCREEN_URL){var initScreen=function(){$scope.mode=$route.current.params.mode,$scope.mode==USER_MGT_MODE_NEW?shared.userRegistered.set(!1):shared.userRegistered.set(!0),"2"==owsSystem.getAuthMode()||"1"==owsSystem.getShowLiteLoginPwdMgt()?$scope.showPwdMgtTab=!0:$scope.showPwdMgtTab=!1,shared.error.reset(),initScreenHttp()},initScreenHttp=function(){$q.all([deferredGetClass("DEL_FLG","delFlgList"),deferredGetCulture(),deferredGetRoleGrp()]).then(function(response){if($scope.mode==USER_MGT_MODE_NEW){var inputNew={};if(inputNew.userCd="",inputNew.userNm="",inputNew.cultureCd="",inputNew.roleGrpCd="",$scope.inputNew=inputNew,null!=$scope.cultureList)for(var i=0;i<$scope.cultureList.length;i++)if($scope.cultureList[i].shapeCd==$scope.$parent.culture.bCulture.cultureCd){$scope.inputNew.cultureCd=$scope.cultureList[i].shapeCd;break}var deferred=$q.defer();return deferred.promise}return deferredGetInitData()}),owsCommon.setFirstFocus()},deferredGetClass=function(classCd,targetItemCd){var deferred=$q.defer(),request={};return request.classCd=classCd,api.bClass.query(request).then(function(response){$scope[targetItemCd]=response.data,deferred.resolve()}),deferred.promise},deferredGetCulture=function(){var deferred=$q.defer(),request={};return api.culture.keyValueList(request).then(function(response){$scope.cultureList=response.data,deferred.resolve()}),deferred.promise},deferredGetRoleGrp=function(){var deferred=$q.defer(),request={};return api.roleGrp.keyValueList(request).then(function(response){$scope.roleGrpList=response.data,deferred.resolve()}),deferred.promise},deferredGetInitData=function(){var deferred=$q.defer(),request={};return request.userId=$route.current.params.userId,api.userMgt.initForUpdate(request).then(function(response){if(!statusInfo.isSuccessAndShowMessage(response,"inputform"))return owsCommon.viewInfoAndHistoryBack(response.status.messageCode,response.status.messageReplaceValue),void deferred.reject();if(shared.bUserDto.init($scope.screenCd,response.data.bUserDto),$scope.mode==USER_MGT_MODE_COPY){var inputNew={};inputNew.userCd="",inputNew.userNm="",inputNew.cultureCd=shared.bUserDto.get().bculture.cultureCd,inputNew.roleGrpCd=shared.bUserDto.get().broleGrp.roleGrpCd,$scope.inputNew=inputNew}else{var nowValue={};nowValue.userCd=shared.bUserDto.get().userCd,nowValue.userNm=shared.bUserDto.get().userNm,nowValue.cultureCd=shared.bUserDto.get().bculture.cultureCd,nowValue.roleGrpCd=shared.bUserDto.get().broleGrp.roleGrpCd,nowValue.delFlg=shared.bUserDto.get().delFlg,$scope.nowValue=nowValue}deferred.resolve()}),owsCommon.setFirstFocus(),deferred.promise};$scope.$on(EVENT_NAME_CHANGE_USER,function(){if(shared.bUserDto.getLastChangeScreen()!=$scope.screenCd){var nowValue={};nowValue.userCd=shared.bUserDto.get().userCd,nowValue.userNm=shared.bUserDto.get().userNm,nowValue.cultureCd=shared.bUserDto.get().bculture.cultureCd,nowValue.roleGrpCd=shared.bUserDto.get().broleGrp.roleGrpCd,nowValue.delFlg=shared.bUserDto.get().delFlg,$scope.nowValue=nowValue}}),$scope.$on(EVENT_NAME_ERROR_OCCURRED,function(){history.back()}),$scope.putFormCtl=function(formCtl){this.formCtl=formCtl},$scope.registerNew=function(){var deferred=$q.defer(),request={};request.input={},request.input=$scope.inputNew,api.userMgt.registerNewPreCheck(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"newform")&&(api.userMgt.registerNew(request).then(function(response){if(statusInfo.isSuccessAndShowMessage(response,"newform")){var param={};param.mode="UPDATE",param.userId=response.result.bUserDto.userId,shared.bUserDto.set($scope.screenCd,response.result.bUserDto),owsCommon.viewInfoAndMovePage(NEXT_SCREEN_URL,param,response.status.messageCode,response.status.messageReplaceValue)}}),deferred.resolve())})},$scope.registerCopy=function(){var deferred=$q.defer(),request={};return request.input={},request.input=$scope.inputNew,api.userMgt.registerNewPreCheck(request).then(function(response){return statusInfo.isSuccessAndShowMessage(response,"newform")?void api.userMgt.registerNew(request).then(function(response){if(!statusInfo.isSuccess(response))return statusInfo.isSuccessAndShowMessage(response,"newform"),void deferred.reject();shared.bUserDto.set($scope.screenCd,response.result.bUserDto);var promises=[],copyMethods=shared.copyMethods.get();for(name in copyMethods)promises.push(copyMethods[name]());$q.all(promises).then(function(qResponse){statusInfo.isSuccessAndShowMessage(response,"newform");var param={};param.mode="UPDATE",param.userId=response.result.bUserDto.userId,owsCommon.viewInfoAndMovePage(NEXT_SCREEN_URL,param,response.status.messageCode,response.status.messageReplaceValue),deferred.resolve()})}):void deferred.reject()}),deferred.promise},initScreen()}]).directive("usermgtInclude",["$http","$rootScope","$compile","$q","owsCommon","owsScreen","owsItem","owsColumn",function($http,$rootScope,$compile,$q,owsCommon,owsScreen,owsItem,owsColumn){return{scope:!0,link:function(scope,element,attr){$http.get(attr.usermgtInclude).then(function(responseData){var response=responseData.data,screenCd=attr.usermgtIncludeScreen;$q.all([owsScreen.getData(screenCd),owsItem.getData(screenCd),owsColumn.getData(screenCd)]).then(function(){element.html(response),$compile(element.contents())(scope)})})}}}]).controller("UserMgtUpdateCtrl",["$scope","$q","$route","owsCommon","owsScreen","owsItem","statusInfo","alertMessage","UserMgtApi","USER_MGT_MODE_NEW","USER_MGT_MODE_UPDATE","EVENT_NAME_CHANGE_USER","UserMgtShared",function($scope,$q,$route,owsCommon,owsScreen,owsItem,statusInfo,alertMessage,api,USER_MGT_MODE_NEW,USER_MGT_MODE_UPDATE,EVENT_NAME_CHANGE_USER,shared){var initScreen=function(){return deferredGetInitData()},deferredGetInitData=function(){var deferred=$q.defer(),request={};return request.userId=$route.current.params.userId,api.userMgt.initForUpdate(request).then(function(response){if(!statusInfo.isSuccessAndShowMessage(response,"updform"))return void deferred.reject();var updValue={};updValue.userCd=response.data.bUserDto.userCd,updValue.userNm=response.data.bUserDto.userNm,updValue.cultureCd=response.data.bUserDto.bculture.cultureCd,updValue.roleGrpCd=response.data.bUserDto.broleGrp.roleGrpCd,updValue.delFlg=response.data.bUserDto.delFlg,$scope.updValue=updValue,deferred.resolve()}),owsCommon.setFirstFocus(),deferred.promise};$scope.registerUpd=function(){var deferred=$q.defer(),request={};request.input={},request.input=$scope.updValue,request.data={},request.data.bUserDto=shared.bUserDto.get(),api.userMgt.registerUpdPreCheck(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"updform")&&(api.userMgt.registerUpd(request).then(function(response){statusInfo.isSuccessAndShowMessage(response,"updform")&&owsCommon.viewInfoAndHistoryBack(response.status.messageCode,response.status.messageReplaceValue)}),deferred.resolve())})},$scope.$on(EVENT_NAME_CHANGE_USER,function(){if(shared.bUserDto.getLastChangeScreen()!=$scope.screenCd){var updValue={};updValue.userCd=shared.bUserDto.get().userCd,updValue.userNm=shared.bUserDto.get().userNm,updValue.cultureCd=shared.bUserDto.get().bculture.cultureCd,updValue.roleGrpCd=shared.bUserDto.get().broleGrp.roleGrpCd,updValue.delFlg=shared.bUserDto.get().delFlg,$scope.updValue=updValue}}),$scope.mode!=USER_MGT_MODE_NEW&&initScreen()}]);