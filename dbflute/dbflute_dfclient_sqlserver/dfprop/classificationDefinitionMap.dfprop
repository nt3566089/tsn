# /---------------------------------------------------------------------------
# classificationDefinitionMap: (NotRequired - Default map:{})
#
# The definition of classification.
#
# Specification:
# map: {
#     [classification-name] = list:{
#         ; map:{
#             ; topComment=[comment]; codeType=[String(default) or Number or Boolean]
#             ; undefinedHandlingType=[EXCEPTION or LOGGING(default) or ALLOWED]
#             ; isUseDocumentOnly=[true or false(default)]
#             ; isSuppressAutoDeploy=[true or false(default)]
#             ; groupingMap = map:{
#                 ; [group-name] = map:{
#                     ; groupComment=[comment]
#                     ; elementList=list:{[the list of classification element's name]}
#                 }
#             }
#         }
#         # classification elements for implicit classification
#         ; map:{
#             ; code=[code]; name=[name]; alias=[alias]; comment=[comment]
#             ; sisterCode=[code or code-list]; subItemMap=map:{[free-map]}
#         }
#         # settings for table classification
#         ; map:{
#             ; table=[table-name]
#             ; code=[column-name for code]; name=[column-name for name]
#             ; alias=[column-name for alias]; comment=[column-name for comment]}
#             ; where=[condition for select]; orderBy=[column-name for ordering]
#             ; exceptCodeList=[the list of except code]
#         }
#     }
# }
#
# *The line that starts with '#' means comment-out.
#
map:{
    # example for implicit classification
    #; Flg = list:{
    #    ; map:{topComment=general boolean classification for every flg-column; codeType=Number}
    #    ; map:{code=1; name=True ; alias=Checked  ; comment=means yes; sisterCode=true}
    #    ; map:{code=0; name=False; alias=Unchecked; comment=means no ; sisterCode=false}
    #}
    # example for table classification
    #; MemberStatus = list:{
    #    ; map:{topComment=status of member from entry to withdrawal; codeType=String}
    #    ; map:{
    #        ; table=MEMBER_STATUS
    #        ; code=MEMBER_STATUS_CODE; name=MEMBER_STATUS_NAME
    #        ; comment=DESCRIPTION; orderBy=DISPLAY_ORDER
    #    }
    #}
    
    ; $$split$$ = map:{
        ; class = dummy
    }

    #処理区分マスタ
    ; ProcessTypeCd = list:{
        ; map:{topComment=処理区分マスタの処理区分CD; codeType=String ; isCheckImplicitSet=false}
        ; map:{code=01; name=$01; comment=通常入荷}
        ; map:{code=21; name=$21; comment=移動}
        ; map:{code=23; name=$23; comment=調整-}
        ; map:{code=24; name=$24; comment=調整+}
        ; map:{code=25; name=$25; comment=入庫格納}
        ; map:{code=27; name=$27; comment=入庫No分割}
        ; map:{code=29; name=$29; comment=強制移動}
        ; map:{code=30; name=$30; comment=セット組指示}
        ; map:{code=31; name=$31; comment=セット解除指示}
        ; map:{code=32; name=$32; comment=定期補充}
        ; map:{code=33; name=$33; comment=緊急補充}
    }
}
# ----------------/